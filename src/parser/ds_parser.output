Terminals unused in grammar

    "lexer error"
    "end of failed eader macro"


State 63 conflicts: 1 shift/reduce
State 331 conflicts: 1 shift/reduce
State 429 conflicts: 1 shift/reduce
State 535 conflicts: 2 shift/reduce
State 537 conflicts: 2 shift/reduce
State 649 conflicts: 1 shift/reduce
State 731 conflicts: 1 shift/reduce
State 941 conflicts: 1 shift/reduce
State 1084 conflicts: 1 shift/reduce
State 1195 conflicts: 1 shift/reduce
State 1196 conflicts: 1 shift/reduce
State 1484 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program module_declaration
    3        | program structure_declaration
    4        | program enum_declaration
    5        | program global_let
    6        | program global_function_declaration
    7        | program expect_declaration
    8        | program require_declaration
    9        | program options_declaration
   10        | program alias_declaration
   11        | program variant_alias_declaration
   12        | program tuple_alias_declaration
   13        | program bitfield_alias_declaration
   14        | program top_level_reader_macro
   15        | program semicolon

   16 top_level_reader_macro: expr_reader semicolon

   17 optional_public_or_private_module: %empty
   18                                  | "public"
   19                                  | "private"

   20 module_name: '$'
   21            | "name"

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module

   23 character_sequence: STRING_CHARACTER
   24                   | STRING_CHARACTER_ESC
   25                   | character_sequence STRING_CHARACTER
   26                   | character_sequence STRING_CHARACTER_ESC

   27 string_constant: "start of the string" character_sequence "end of the string"
   28                | "start of the string" "end of the string"

   29 format_string: %empty
   30              | format_string STRING_CHARACTER

   31 optional_format_string: %empty

   32 $@1: %empty

   33 optional_format_string: ':' $@1 format_string

   34 string_builder_body: %empty
   35                    | string_builder_body character_sequence
   36                    | string_builder_body "{" expr optional_format_string "}"

   37 string_builder: "start of the string" string_builder_body "end of the string"

   38 reader_character_sequence: STRING_CHARACTER
   39                          | reader_character_sequence STRING_CHARACTER

   40 $@2: %empty

   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence

   42 options_declaration: "options" annotation_argument_list

   43 require_declaration: "require" require_module

   44 keyword_or_name: "name"
   45                | "keyword"
   46                | "type function"

   47 require_module_name: keyword_or_name
   48                    | '%' require_module_name
   49                    | require_module_name '.' keyword_or_name
   50                    | require_module_name '/' keyword_or_name

   51 require_module: require_module_name is_public_module
   52               | require_module_name "as" "name" is_public_module

   53 is_public_module: %empty
   54                 | "public"

   55 expect_declaration: "expect" expect_list

   56 expect_list: expect_error
   57            | expect_list ',' expect_error

   58 expect_error: "integer constant"
   59             | "integer constant" ':' "integer constant"

   60 expression_label: "label" "integer constant" ':'

   61 expression_goto: "goto" "label" "integer constant"
   62                | "goto" expr

   63 elif_or_static_elif: "elif"
   64                    | "static_elif"

   65 expression_else: %empty
   66                | "else" expression_block
   67                | elif_or_static_elif expr expression_block expression_else

   68 semicolon: "end of line"
   69          | "end of expression"

   70 if_or_static_if: "if"
   71                | "static_if"

   72 expression_else_one_liner: %empty

   73 $@3: %empty

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner

   75 expression_if_one_liner: expr
   76                        | expression_return_no_pipe
   77                        | expression_yield_no_pipe
   78                        | expression_break
   79                        | expression_continue

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else

   81 $@4: %empty

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon

   83 $@5: %empty

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block

   85 expression_unsafe: "unsafe" expression_block

   86 expression_while_loop: "while" expr expression_block

   87 expression_with: "with" expr expression_block

   88 $@6: %empty

   89 expression_with_alias: "assume" "name" '=' $@6 expr

   90 annotation_argument_value: string_constant
   91                          | "name"
   92                          | "integer constant"
   93                          | "floating point constant"
   94                          | "true"
   95                          | "false"

   96 annotation_argument_value_list: annotation_argument_value
   97                               | annotation_argument_value_list ',' annotation_argument_value

   98 annotation_argument_name: "name"
   99                         | "type"
  100                         | "in"

  101 annotation_argument: annotation_argument_name '=' string_constant
  102                    | annotation_argument_name '=' "name"
  103                    | annotation_argument_name '=' "integer constant"
  104                    | annotation_argument_name '=' "floating point constant"
  105                    | annotation_argument_name '=' "true"
  106                    | annotation_argument_name '=' "false"
  107                    | annotation_argument_name
  108                    | annotation_argument_name '=' '(' annotation_argument_value_list ')'

  109 annotation_argument_list: annotation_argument
  110                         | annotation_argument_list ',' annotation_argument

  111 metadata_argument_list: '@' annotation_argument
  112                       | metadata_argument_list '@' annotation_argument
  113                       | metadata_argument_list semicolon

  114 annotation_declaration_name: name_in_namespace
  115                            | "require"
  116                            | "private"
  117                            | "template"

  118 annotation_declaration_basic: annotation_declaration_name
  119                             | annotation_declaration_name '(' annotation_argument_list ')'

  120 annotation_declaration: annotation_declaration_basic
  121                       | '!' annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration
  125                       | '(' annotation_declaration ')'
  126                       | "|>" annotation_declaration

  127 annotation_list: annotation_declaration
  128                | annotation_list ',' annotation_declaration

  129 optional_annotation_list: %empty
  130                         | '[' annotation_list ']'

  131 optional_function_argument_list: %empty
  132                                | '(' ')'
  133                                | '(' function_argument_list ')'

  134 optional_function_type: %empty
  135                       | ':' type_declaration

  136 function_name: "name"
  137              | "operator" '!'
  138              | "operator" '~'
  139              | "operator" "+="
  140              | "operator" "-="
  141              | "operator" "*="
  142              | "operator" "/="
  143              | "operator" "%="
  144              | "operator" "&="
  145              | "operator" "|="
  146              | "operator" "^="
  147              | "operator" "&&="
  148              | "operator" "||="
  149              | "operator" "^^="
  150              | "operator" "&&"
  151              | "operator" "||"
  152              | "operator" "^^"
  153              | "operator" '+'
  154              | "operator" '-'
  155              | "operator" '*'
  156              | "operator" '/'
  157              | "operator" '%'
  158              | "operator" '<'
  159              | "operator" '>'
  160              | "operator" ".."
  161              | "operator" "=="
  162              | "operator" "!="
  163              | "operator" "<="
  164              | "operator" ">="
  165              | "operator" '&'
  166              | "operator" '|'
  167              | "operator" '^'
  168              | "++" "operator"
  169              | "--" "operator"
  170              | "operator" "++"
  171              | "operator" "--"
  172              | "operator" "<<"
  173              | "operator" ">>"
  174              | "operator" "<<="
  175              | "operator" ">>="
  176              | "operator" "<<<"
  177              | "operator" ">>>"
  178              | "operator" "<<<="
  179              | "operator" ">>>="
  180              | "operator" '[' ']'
  181              | "operator" "?[" ']'
  182              | "operator" '.'
  183              | "operator" "?."
  184              | "operator" '.' "name"
  185              | "operator" '.' "name" ":="
  186              | "operator" "?." "name"
  187              | "operator" ":="
  188              | "operator" "delete"
  189              | "operator" "??"
  190              | "operator" "is"
  191              | "operator" "as"
  192              | "operator" "is" "name"
  193              | "operator" "as" "name"
  194              | "operator" '?' "as"
  195              | "operator" '?' "as" "name"
  196              | "bool"
  197              | "string"
  198              | "int"
  199              | "int2"
  200              | "int3"
  201              | "int4"
  202              | "uint"
  203              | "uint2"
  204              | "uint3"
  205              | "uint4"
  206              | "float"
  207              | "float2"
  208              | "float3"
  209              | "float4"
  210              | "range"
  211              | "urange"
  212              | "range64"
  213              | "urange64"
  214              | "int64"
  215              | "uint64"
  216              | "double"
  217              | "int8"
  218              | "uint8"
  219              | "int16"
  220              | "uint16"

  221 global_function_declaration: optional_annotation_list "def" function_declaration

  222 optional_public_or_private_function: %empty
  223                                    | "private"
  224                                    | "public"

  225 function_declaration_header: function_name optional_function_argument_list optional_function_type

  226 $@7: %empty

  227 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block

  228 open_block: "begin of code block"
  229           | "new scope"

  230 close_block: "end of code block"
  231            | "close scope"

  232 expression_block: open_block expressions close_block
  233                 | open_block expressions close_block "finally" open_block expressions close_block

  234 expr_call_pipe: expr expr_full_block_assumed_piped
  235               | expression_keyword expr_full_block_assumed_piped
  236               | "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped

  237 expression_any: semicolon
  238               | expr_pipe
  239               | expr_keyword
  240               | expr_assign_pipe
  241               | expr_assign semicolon
  242               | expression_delete semicolon
  243               | expression_let
  244               | expression_while_loop
  245               | expression_unsafe
  246               | expression_with
  247               | expression_with_alias
  248               | expression_for_loop
  249               | expression_break semicolon
  250               | expression_continue semicolon
  251               | expression_return
  252               | expression_yield
  253               | expression_if_then_else
  254               | expression_try_catch
  255               | expression_label semicolon
  256               | expression_goto semicolon
  257               | "pass" semicolon

  258 expressions: %empty
  259            | expressions expression_any
  260            | expressions error

  261 expr_keyword: "keyword" expr expression_block

  262 optional_expr_list: %empty
  263                   | expr_list optional_comma

  264 optional_expr_list_in_braces: %empty
  265                             | '(' optional_expr_list optional_comma ')'

  266 optional_expr_map_tuple_list: %empty
  267                             | expr_map_tuple_list optional_comma

  268 type_declaration_no_options_list: type_declaration
  269                                 | type_declaration_no_options_list c_or_s type_declaration

  270 $@8: %empty

  271 $@9: %empty

  272 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr

  273 $@10: %empty

  274 $@11: %empty

  275 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

  276 expr_pipe: expr_assign " <|" expr_block
  277          | "@ <|" expr_block
  278          | "@@ <|" expr_block
  279          | "$ <|" expr_block
  280          | expr_call_pipe

  281 name_in_namespace: "name"
  282                  | "name" "::" "name"
  283                  | "::" "name"

  284 expression_delete: "delete" expr
  285                  | "delete" "explicit" expr

  286 $@12: %empty

  287 $@13: %empty

  288 new_type_declaration: '<' $@12 type_declaration '>' $@13
  289                     | structure_type_declaration

  290 expr_new: "new" new_type_declaration
  291         | "new" new_type_declaration '(' use_initializer ')'
  292         | "new" new_type_declaration '(' expr_list ')'
  293         | "new" new_type_declaration '(' make_struct_single ')'
  294         | "new" new_type_declaration '(' "uninitialized" make_struct_single ')'
  295         | "new" make_decl

  296 expression_break: "break"

  297 expression_continue: "continue"

  298 expression_return_no_pipe: "return"
  299                          | "return" expr_list
  300                          | "return" "<-" expr_list

  301 expression_return: expression_return_no_pipe semicolon
  302                  | "return" expr_pipe
  303                  | "return" "<-" expr_pipe

  304 expression_yield_no_pipe: "yield" expr
  305                         | "yield" "<-" expr

  306 expression_yield: expression_yield_no_pipe semicolon
  307                 | "yield" expr_pipe
  308                 | "yield" "<-" expr_pipe

  309 expression_try_catch: "try" expression_block "recover" expression_block

  310 kwd_let_var_or_nothing: "let"
  311                       | "var"
  312                       | %empty

  313 kwd_let: "let"
  314        | "var"

  315 optional_in_scope: "inscope"
  316                  | %empty

  317 tuple_expansion: "name"
  318                | tuple_expansion ',' "name"

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  321                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  324                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe
  325                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

  327 expression_let: kwd_let optional_in_scope let_variable_declaration
  328               | kwd_let optional_in_scope tuple_expansion_variable_declaration

  329 $@14: %empty

  330 $@15: %empty

  331 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr

  332 $@16: %empty

  333 $@17: %empty

  334 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr

  335 $@18: %empty

  336 $@19: %empty

  337 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr

  338 $@20: %empty

  339 $@21: %empty

  340 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21

  341 expr_type_info: "typeinfo" '(' name_in_namespace expr ')'
  342               | "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')'
  343               | "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  344               | "typeinfo" name_in_namespace '(' expr ')'
  345               | "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')'
  346               | "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

  347 expr_list: expr
  348          | expr_list ',' expr

  349 block_or_simple_block: expression_block
  350                      | "=>" expr
  351                      | "=>" "<-" expr

  352 block_or_lambda: '$'
  353                | '@'
  354                | '@' '@'

  355 capture_entry: '&' "name"
  356              | '=' "name"
  357              | "<-" "name"
  358              | ":=" "name"
  359              | "name" '(' "name" ')'

  360 capture_list: capture_entry
  361             | capture_list ',' capture_entry

  362 optional_capture_list: %empty
  363                      | "[[" capture_list ']' ']'
  364                      | "capture" '(' capture_list ')'

  365 expr_block: expression_block
  366           | block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  367 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

  368 $@22: %empty

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

  370 expr_numeric_const: "integer constant"
  371                   | "unsigned integer constant"
  372                   | "long integer constant"
  373                   | "unsigned long integer constant"
  374                   | "unsigned int8 constant"
  375                   | "floating point constant"
  376                   | "double constant"

  377 expr_assign: expr
  378            | expr '=' expr
  379            | expr "<-" expr
  380            | expr ":=" expr
  381            | expr "&=" expr
  382            | expr "|=" expr
  383            | expr "^=" expr
  384            | expr "&&=" expr
  385            | expr "||=" expr
  386            | expr "^^=" expr
  387            | expr "+=" expr
  388            | expr "-=" expr
  389            | expr "*=" expr
  390            | expr "/=" expr
  391            | expr "%=" expr
  392            | expr "<<=" expr
  393            | expr ">>=" expr
  394            | expr "<<<=" expr
  395            | expr ">>>=" expr

  396 expr_assign_pipe_right: "@ <|" expr_block
  397                       | "@@ <|" expr_block
  398                       | "$ <|" expr_block
  399                       | expr_call_pipe

  400 expr_assign_pipe: expr '=' expr_assign_pipe_right
  401                 | expr "<-" expr_assign_pipe_right
  402                 | expr "&=" expr_assign_pipe_right
  403                 | expr "|=" expr_assign_pipe_right
  404                 | expr "^=" expr_assign_pipe_right
  405                 | expr "&&=" expr_assign_pipe_right
  406                 | expr "||=" expr_assign_pipe_right
  407                 | expr "^^=" expr_assign_pipe_right
  408                 | expr "+=" expr_assign_pipe_right
  409                 | expr "-=" expr_assign_pipe_right
  410                 | expr "*=" expr_assign_pipe_right
  411                 | expr "/=" expr_assign_pipe_right
  412                 | expr "%=" expr_assign_pipe_right
  413                 | expr "<<=" expr_assign_pipe_right
  414                 | expr ">>=" expr_assign_pipe_right
  415                 | expr "<<<=" expr_assign_pipe_right
  416                 | expr ">>>=" expr_assign_pipe_right

  417 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')'
  418                | name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')'

  419 expr_method_call: expr "->" "name" '(' ')'
  420                 | expr "->" "name" '(' expr_list ')'

  421 func_addr_name: name_in_namespace
  422               | "$i" '(' expr ')'

  423 func_addr_expr: '@' '@' func_addr_name

  424 $@23: %empty

  425 $@24: %empty

  426 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name

  427 $@25: %empty

  428 $@26: %empty

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

  430 expr_field: expr '.' "name"
  431           | expr '.' '.' "name"
  432           | expr '.' "name" '(' ')'
  433           | expr '.' "name" '(' expr_list ')'
  434           | expr '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr '.' basic_type_declaration '(' ')'
  436           | expr '.' basic_type_declaration '(' expr_list ')'

  437 $@27: %empty

  438 $@28: %empty

  439 expr_field: expr '.' $@27 error $@28

  440 expr_call: name_in_namespace '(' ')'
  441          | name_in_namespace '(' "uninitialized" ')'
  442          | name_in_namespace '(' make_struct_single ')'
  443          | name_in_namespace '(' "uninitialized" make_struct_single ')'
  444          | name_in_namespace '(' expr_list ')'
  445          | basic_type_declaration '(' ')'
  446          | basic_type_declaration '(' expr_list ')'

  447 expr: "null"
  448     | name_in_namespace
  449     | expr_numeric_const
  450     | expr_reader
  451     | string_builder
  452     | make_decl
  453     | "true"
  454     | "false"
  455     | expr_field
  456     | expr_mtag
  457     | '!' expr
  458     | '~' expr
  459     | '+' expr
  460     | '-' expr
  461     | expr "<<" expr
  462     | expr ">>" expr
  463     | expr "<<<" expr
  464     | expr ">>>" expr
  465     | expr '+' expr
  466     | expr '-' expr
  467     | expr '*' expr
  468     | expr '/' expr
  469     | expr '%' expr
  470     | expr '<' expr
  471     | expr '>' expr
  472     | expr "==" expr
  473     | expr "!=" expr
  474     | expr "<=" expr
  475     | expr ">=" expr
  476     | expr '&' expr
  477     | expr '|' expr
  478     | expr '^' expr
  479     | expr "&&" expr
  480     | expr "||" expr
  481     | expr "^^" expr
  482     | expr ".." expr
  483     | "++" expr
  484     | "--" expr
  485     | expr "++"
  486     | expr "--"
  487     | '(' expr_list optional_comma ')'
  488     | '(' make_struct_single ')'
  489     | expr '[' expr ']'
  490     | expr '.' '[' expr ']'
  491     | expr "?[" expr ']'
  492     | expr '.' "?[" expr ']'
  493     | expr "?." "name"
  494     | expr '.' "?." "name"
  495     | func_addr_expr
  496     | expr_call
  497     | '*' expr
  498     | "deref" '(' expr ')'
  499     | "addr" '(' expr ')'
  500     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'
  502     | expr "??" expr
  503     | expr '?' expr ':' expr

  504 $@29: %empty

  505 $@30: %empty

  506 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr "is" basic_type_declaration
  508     | expr "is" "name"
  509     | expr "as" "name"

  510 $@31: %empty

  511 $@32: %empty

  512 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr "as" basic_type_declaration
  514     | expr '?' "as" "name"

  515 $@33: %empty

  516 $@34: %empty

  517 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr '?' "as" basic_type_declaration
  519     | expr_type_info
  520     | expr_type_decl
  521     | expr_cast
  522     | expr_new
  523     | expr_method_call
  524     | expr_named_call
  525     | expr_full_block
  526     | expr "<|" expr
  527     | expr "|>" expr
  528     | expr "|>" basic_type_declaration
  529     | name_in_namespace "name"
  530     | "unsafe" '(' expr ')'
  531     | expression_keyword

  532 expr_mtag: "$$" '(' expr ')'
  533          | "$i" '(' expr ')'
  534          | "$v" '(' expr ')'
  535          | "$b" '(' expr ')'
  536          | "$a" '(' expr ')'
  537          | "..."
  538          | "$c" '(' expr ')' '(' ')'
  539          | "$c" '(' expr ')' '(' expr_list ')'
  540          | expr '.' "$f" '(' expr ')'
  541          | expr "?." "$f" '(' expr ')'
  542          | expr '.' '.' "$f" '(' expr ')'
  543          | expr '.' "?." "$f" '(' expr ')'
  544          | expr "as" "$f" '(' expr ')'
  545          | expr '?' "as" "$f" '(' expr ')'
  546          | expr "is" "$f" '(' expr ')'
  547          | '@' '@' "$c" '(' expr ')'

  548 optional_field_annotation: %empty
  549                          | "[[" annotation_argument_list ']' ']'
  550                          | metadata_argument_list

  551 optional_override: %empty
  552                  | "override"
  553                  | "sealed"

  554 optional_constant: %empty
  555                  | "const"

  556 optional_public_or_private_member_variable: %empty
  557                                           | "public"
  558                                           | "private"

  559 optional_static_member_variable: %empty
  560                                | "static"

  561 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

  562 struct_variable_declaration_list: %empty
  563                                 | struct_variable_declaration_list semicolon

  564 $@35: %empty

  565 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon

  566 $@36: %empty

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon

  568 $@37: %empty

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  570                                 | struct_variable_declaration_list '[' annotation_list ']' semicolon

  571 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type

  572 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type
  573                                   | "$a" '(' expr ')'

  574 function_argument_list: function_argument_declaration_no_type
  575                       | function_argument_declaration_type
  576                       | function_argument_declaration_no_type semicolon function_argument_list
  577                       | function_argument_declaration_type semicolon function_argument_list
  578                       | function_argument_declaration_type ',' function_argument_list

  579 tuple_type: type_declaration
  580           | "name" ':' type_declaration

  581 tuple_type_list: tuple_type
  582                | tuple_type_list c_or_s tuple_type

  583 tuple_alias_type_list: %empty
  584                      | tuple_alias_type_list c_or_s
  585                      | tuple_alias_type_list tuple_type c_or_s

  586 variant_type: "name" ':' type_declaration

  587 variant_type_list: variant_type
  588                  | variant_type_list c_or_s variant_type

  589 variant_alias_type_list: %empty
  590                        | variant_alias_type_list c_or_s
  591                        | variant_alias_type_list variant_type c_or_s

  592 copy_or_move: '='
  593             | "<-"

  594 variable_declaration_no_type: variable_name_with_pos_list
  595                             | variable_name_with_pos_list '&'
  596                             | variable_name_with_pos_list copy_or_move expr

  597 variable_declaration_type: variable_name_with_pos_list ':' type_declaration
  598                          | variable_name_with_pos_list ':' type_declaration copy_or_move expr

  599 variable_declaration: variable_declaration_type
  600                     | variable_declaration_no_type

  601 copy_or_move_or_clone: '='
  602                      | "<-"
  603                      | ":="

  604 optional_ref: %empty
  605             | '&'

  606 let_variable_name_with_pos_list: "name"
  607                                | "$i" '(' expr ')'
  608                                | "name" "aka" "name"
  609                                | let_variable_name_with_pos_list ',' "name"
  610                                | let_variable_name_with_pos_list ',' "name" "aka" "name"

  611 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon
  612                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  613                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  614                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe

  616 global_variable_declaration_list: %empty

  617 $@38: %empty

  618 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration

  619 optional_shared: %empty
  620                | "shared"

  621 optional_public_or_private_variable: %empty
  622                                    | "private"
  623                                    | "public"

  624 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block

  625 $@39: %empty

  626 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

  627 enum_list: %empty
  628          | enum_list semicolon
  629          | enum_list "name" semicolon
  630          | enum_list "name" '=' expr semicolon

  631 optional_public_or_private_alias: %empty
  632                                 | "private"
  633                                 | "public"

  634 $@40: %empty

  635 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration

  636 alias_list: single_alias semicolon
  637           | alias_list single_alias semicolon

  638 alias_declaration: "typedef" open_block alias_list close_block

  639 $@41: %empty

  640 alias_declaration: "typedef" $@41 single_alias semicolon

  641 optional_public_or_private_enum: %empty
  642                                | "private"
  643                                | "public"

  644 enum_name: "name"

  645 $@42: %empty

  646 $@43: %empty

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block

  648 $@44: %empty

  649 $@45: %empty

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

  651 optional_structure_parent: %empty
  652                          | ':' name_in_namespace

  653 optional_sealed: %empty
  654                | "sealed"

  655 structure_name: optional_sealed "name" optional_structure_parent

  656 class_or_struct: "class"
  657                | "struct"
  658                | "template" "class"
  659                | "template" "struct"

  660 optional_public_or_private_structure: %empty
  661                                     | "private"
  662                                     | "public"

  663 optional_struct_variable_declaration_list: %empty
  664                                          | open_block struct_variable_declaration_list close_block

  665 $@46: %empty

  666 $@47: %empty

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

  668 variable_name_with_pos_list: "name"
  669                            | "$i" '(' expr ')'
  670                            | "name" "aka" "name"
  671                            | variable_name_with_pos_list ',' "name"
  672                            | variable_name_with_pos_list ',' "name" "aka" "name"

  673 basic_type_declaration: "bool"
  674                       | "string"
  675                       | "int"
  676                       | "int8"
  677                       | "int16"
  678                       | "int64"
  679                       | "int2"
  680                       | "int3"
  681                       | "int4"
  682                       | "uint"
  683                       | "uint8"
  684                       | "uint16"
  685                       | "uint64"
  686                       | "uint2"
  687                       | "uint3"
  688                       | "uint4"
  689                       | "float"
  690                       | "float2"
  691                       | "float3"
  692                       | "float4"
  693                       | "void"
  694                       | "range"
  695                       | "urange"
  696                       | "range64"
  697                       | "urange64"
  698                       | "double"
  699                       | "bitfield"

  700 enum_basic_type_declaration: "int"
  701                            | "int8"
  702                            | "int16"
  703                            | "uint"
  704                            | "uint8"
  705                            | "uint16"
  706                            | "int64"
  707                            | "uint64"

  708 structure_type_declaration: name_in_namespace

  709 auto_type_declaration: "auto"
  710                      | "auto" '(' "name" ')'
  711                      | "$t" '(' expr ')'

  712 bitfield_bits: "name"
  713              | bitfield_bits semicolon "name"

  714 bitfield_alias_bits: %empty
  715                    | bitfield_alias_bits semicolon
  716                    | bitfield_alias_bits "name" semicolon

  717 $@48: %empty

  718 $@49: %empty

  719 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49

  720 c_or_s: ','
  721       | semicolon

  722 table_type_pair: type_declaration
  723                | type_declaration c_or_s type_declaration

  724 dim_list: '[' expr ']'
  725         | dim_list '[' expr ']'

  726 type_declaration_no_options: basic_type_declaration
  727                            | auto_type_declaration
  728                            | bitfield_type_declaration
  729                            | structure_type_declaration
  730                            | type_declaration_no_options dim_list
  731                            | type_declaration_no_options '[' ']'

  732 $@50: %empty

  733 $@51: %empty

  734 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51
  735                            | "typedecl" '(' expr ')'
  736                            | '$' name_in_namespace '(' optional_expr_list ')'

  737 $@52: %empty

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'
  739                            | type_declaration_no_options '-' '[' ']'
  740                            | type_declaration_no_options "explicit"
  741                            | type_declaration_no_options "const"
  742                            | type_declaration_no_options '-' "const"
  743                            | type_declaration_no_options '&'
  744                            | type_declaration_no_options '-' '&'
  745                            | type_declaration_no_options '#'
  746                            | type_declaration_no_options "implicit"
  747                            | type_declaration_no_options '-' '#'
  748                            | type_declaration_no_options "==" "const"
  749                            | type_declaration_no_options "==" '&'
  750                            | type_declaration_no_options '?'

  751 $@53: %empty

  752 $@54: %empty

  753 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54
  754                            | type_declaration_no_options "??"

  755 $@55: %empty

  756 $@56: %empty

  757 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56

  758 $@57: %empty

  759 $@58: %empty

  760 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58

  761 $@59: %empty

  762 $@60: %empty

  763 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60
  764                            | "block"

  765 $@61: %empty

  766 $@62: %empty

  767 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62

  768 $@63: %empty

  769 $@64: %empty

  770 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64
  771                            | "function"

  772 $@65: %empty

  773 $@66: %empty

  774 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66

  775 $@67: %empty

  776 $@68: %empty

  777 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68
  778                            | "lambda"

  779 $@69: %empty

  780 $@70: %empty

  781 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70

  782 $@71: %empty

  783 $@72: %empty

  784 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72

  785 $@73: %empty

  786 $@74: %empty

  787 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74

  788 $@75: %empty

  789 $@76: %empty

  790 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76

  791 type_declaration: type_declaration_no_options
  792                 | type_declaration '|' type_declaration_no_options
  793                 | type_declaration '|' '#'

  794 $@77: %empty

  795 $@78: %empty

  796 $@79: %empty

  797 $@80: %empty

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

  799 $@81: %empty

  800 $@82: %empty

  801 $@83: %empty

  802 $@84: %empty

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

  804 $@85: %empty

  805 $@86: %empty

  806 $@87: %empty

  807 $@88: %empty

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

  809 make_decl: make_struct_decl
  810          | make_dim_decl
  811          | make_table_decl
  812          | array_comprehension
  813          | make_tuple_call

  814 make_struct_fields: "name" copy_or_move expr
  815                   | "name" ":=" expr
  816                   | make_struct_fields ',' "name" copy_or_move expr
  817                   | make_struct_fields ',' "name" ":=" expr
  818                   | "$f" '(' expr ')' copy_or_move expr
  819                   | "$f" '(' expr ')' ":=" expr
  820                   | make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields ',' "$f" '(' expr ')' ":=" expr

  822 make_variant_dim: %empty
  823                 | make_struct_fields

  824 make_struct_single: make_struct_fields

  825 make_struct_dim: make_struct_fields
  826                | make_struct_dim "end of expression" make_struct_fields

  827 make_struct_dim_list: '(' make_struct_fields ')'
  828                     | make_struct_dim_list ',' '(' make_struct_fields ')'

  829 make_struct_dim_decl: make_struct_fields
  830                     | make_struct_dim_list optional_comma

  831 optional_make_struct_dim_decl: make_struct_dim_decl
  832                              | %empty

  833 optional_block: %empty
  834               | "where" expr_block

  835 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block"
  836                                    | ";}}"

  837 optional_trailing_semicolon_cur_sqr: "end of code block" ']'
  838                                    | ";}]"

  839 optional_trailing_semicolon_sqr_sqr: ']' ']'
  840                                    | ";]]"

  841 optional_trailing_delim_sqr_sqr: ']' ']'
  842                                | ";]]"
  843                                | ",]]"

  844 optional_trailing_delim_cur_sqr: "end of code block" ']'
  845                                | ";}]"
  846                                | ",}]"

  847 use_initializer: %empty
  848                | "uninitialized"

  849 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  850                 | "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  851                 | "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  852                 | "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  853                 | "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  854                 | "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

  855 $@89: %empty

  856 $@90: %empty

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

  858 $@91: %empty

  859 $@92: %empty

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

  861 $@93: %empty

  862 $@94: %empty

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

  864 $@95: %empty

  865 $@96: %empty

  866 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer

  867 make_tuple: expr
  868           | expr "=>" expr
  869           | make_tuple ',' expr

  870 make_map_tuple: expr "=>" expr
  871               | expr

  872 make_tuple_call: "tuple" '(' expr_list optional_comma ')'

  873 $@97: %empty

  874 $@98: %empty

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

  876 make_dim: make_tuple
  877         | make_dim "end of expression" make_tuple

  878 make_dim_decl: '[' optional_expr_list ']'
  879              | "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  880              | "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr

  881 $@99: %empty

  882 $@100: %empty

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

  884 $@101: %empty

  885 $@102: %empty

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

  887 $@103: %empty

  888 $@104: %empty

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  890              | "array" '(' expr_list optional_comma ')'

  891 $@105: %empty

  892 $@106: %empty

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'
  894              | "fixed_array" '(' expr_list optional_comma ')'

  895 $@107: %empty

  896 $@108: %empty

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

  898 make_table: make_map_tuple
  899           | make_table "end of expression" make_map_tuple

  900 expr_map_tuple_list: make_map_tuple
  901                    | expr_map_tuple_list ',' make_map_tuple

  902 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block"
  903                | "{{" make_table optional_trailing_semicolon_cur_cur
  904                | "table" '(' optional_expr_map_tuple_list ')'
  905                | "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  906                | "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

  907 array_comprehension_where: %empty
  908                          | "end of expression" "where" expr

  909 optional_comma: %empty
  910               | ','

  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  913                    | "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'
  914                    | "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'
  915                    | "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"
  916                    | "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 121 137 457
    '#' (35) 745 747 793
    '$' (36) 20 352 736 738
    '%' (37) 41 48 157 469
    '&' (38) 165 355 476 595 605 743 744 749
    '(' (40) 108 119 125 132 133 265 291 292 293 294 321 322 325 326 341 342 343 344 345 346 359 364 417 418 419 420 422 432 433 434 435 436 440 441 442 443 444 445 446 487 488 498 499 500 501 530 532 533 534 535 536 538 539 540 541 542 543 544 545 546 547 573 607 669 710 711 735 736 738 818 819 820 821 827 828 851 852 854 857 860 863 872 875 883 886 889 890 893 894 897 904 905 906
    ')' (41) 108 119 125 132 133 265 291 292 293 294 321 322 325 326 341 342 343 344 345 346 359 364 417 418 419 420 422 432 433 434 435 436 440 441 442 443 444 445 446 487 488 498 499 500 501 530 532 533 534 535 536 538 539 540 541 542 543 544 545 546 547 573 607 669 710 711 735 736 738 818 819 820 821 827 828 851 852 854 857 860 863 872 875 883 886 889 890 893 894 897 904 905 906
    '*' (42) 155 467 497
    '+' (43) 153 459 465
    ',' (44) 57 97 110 128 318 348 361 418 578 609 610 671 672 720 816 817 820 821 828 869 901 910
    '-' (45) 154 460 466 739 742 744 747
    '.' (46) 49 182 184 185 430 431 432 433 434 435 436 439 490 492 494 540 542 543
    '/' (47) 50 156 468
    ':' (58) 33 59 60 135 319 320 321 322 503 580 586 597 598 611 612 613 650 652
    "end of expression" (59) 69 346 826 877 899 908 911 912 913 914 915 916
    '<' (60) 158 236 272 275 288 331 334 337 340 342 343 345 346 426 429 470 500 501 506 512 517 719 734 738 753 757 760 763 767 770 774 777 781 784 787 790 857 860 863 866 875 883 886 889 893 897 905 906
    '=' (61) 89 101 102 103 104 105 106 108 356 378 400 592 601 630 635
    '>' (62) 159 236 272 275 288 331 334 337 340 342 343 345 346 426 429 471 500 501 506 512 517 719 734 738 753 757 760 763 767 770 774 777 781 784 787 790 857 860 863 866 875 883 886 889 893 897 905 906
    '?' (63) 194 195 503 514 517 518 545 750
    '@' (64) 111 112 353 354 423 426 429 547
    '[' (91) 130 180 417 418 434 489 490 570 724 725 731 739 878 911 912
    ']' (93) 130 180 181 319 320 323 324 363 417 418 434 489 490 491 492 549 570 724 725 731 739 837 839 841 844 878 911 912 913 914
    '^' (94) 167 478
    "begin of code block" (123) 228 902 915
    '|' (124) 166 477 792 793
    "end of code block" (125) 230 835 837 844 902 914 915 916
    '~' (126) 138 458
    error (256) 260 439
    "lexer error" (258)
    "capture" (259) 364
    "struct" (260) 657 659 857 883
    "class" (261) 656 658 860
    "let" (262) 310 313
    "def" (263) 221 567 569
    "while" (264) 86
    "if" (265) 70 82
    "static_if" (266) 71
    "else" (267) 66 74
    "for" (268) 84 911 912 913 914 915 916
    "recover" (269) 309
    "true" (270) 94 105 453
    "false" (271) 95 106 454
    "new" (272) 290 291 292 293 294 295
    "typeinfo" (273) 341 342 343 344 345 346
    "type" (274) 99 340 506 512 517 734
    "in" (275) 84 100 911 912 913 914 915 916
    "is" (276) 190 192 506 507 508 546
    "as" (277) 52 191 193 194 195 509 512 513 514 517 518 544 545
    "elif" (278) 63
    "static_elif" (279) 64
    "array" (280) 757 883 886 889 890 893
    "return" (281) 298 299 300 302 303
    "null" (282) 447
    "break" (283) 296
    "try" (284) 309
    "options" (285) 42
    "table" (286) 760 904 905 906
    "expect" (287) 55
    "const" (288) 555 741 742 748
    "require" (289) 43 115
    "operator" (290) 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195
    "enum" (291) 647 650
    "finally" (292) 233
    "delete" (293) 188 284 285
    "deref" (294) 498
    "typedef" (295) 638 640
    "typedecl" (296) 735
    "with" (297) 87
    "aka" (298) 608 610 670 672
    "assume" (299) 89
    "cast" (300) 331
    "override" (301) 552
    "abstract" (302) 567
    "upcast" (303) 334
    "iterator" (304) 763 912
    "var" (305) 311 314
    "addr" (306) 499
    "continue" (307) 297
    "where" (308) 834 908
    "pass" (309) 257
    "reinterpret" (310) 337
    "module" (311) 22
    "public" (312) 18 54 224 557 623 633 643 662
    "label" (313) 60 61
    "goto" (314) 61 62
    "implicit" (315) 746
    "explicit" (316) 285 740
    "shared" (317) 620
    "private" (318) 19 116 223 558 622 632 642 661
    "smart_ptr" (319) 753
    "unsafe" (320) 85 530
    "inscope" (321) 315
    "static" (322) 560
    "fixed_array" (323) 894 897
    "default" (324) 866
    "uninitialized" (325) 294 441 443 848
    "bool" (326) 196 673
    "void" (327) 693
    "string" (328) 197 674
    "auto" (329) 709 710
    "int" (330) 198 675 700
    "int2" (331) 199 679
    "int3" (332) 200 680
    "int4" (333) 201 681
    "uint" (334) 202 682 703
    "bitfield" (335) 699 719 808
    "uint2" (336) 203 686
    "uint3" (337) 204 687
    "uint4" (338) 205 688
    "float" (339) 206 689
    "float2" (340) 207 690
    "float3" (341) 208 691
    "float4" (342) 209 692
    "range" (343) 210 694
    "urange" (344) 211 695
    "range64" (345) 212 696
    "urange64" (346) 213 697
    "block" (347) 764 767 770
    "int64" (348) 214 678 706
    "uint64" (349) 215 685 707
    "double" (350) 216 698
    "function" (351) 771 774 777
    "lambda" (352) 778 781 784
    "int8" (353) 217 676 701
    "uint8" (354) 218 683 704
    "int16" (355) 219 677 702
    "uint16" (356) 220 684 705
    "tuple" (357) 787 798 872 875 886
    "variant" (358) 790 803 863 889
    "generator" (359) 236 500 501
    "yield" (360) 304 305 307 308
    "sealed" (361) 553 654
    "template" (362) 117 658 659
    "+=" (363) 139 387 408
    "-=" (364) 140 388 409
    "/=" (365) 142 390 411
    "*=" (366) 141 389 410
    "%=" (367) 143 391 412
    "&=" (368) 144 381 402
    "|=" (369) 145 382 403
    "^=" (370) 146 383 404
    "<<" (371) 172 461
    ">>" (372) 173 462
    "++" (373) 168 170 483 485
    "--" (374) 169 171 484 486
    "<=" (375) 163 474
    "<<=" (376) 174 392 413
    ">>=" (377) 175 393 414
    ">=" (378) 164 475
    "==" (379) 161 472 748 749
    "!=" (380) 162 473
    "->" (381) 419 420
    "<-" (382) 300 303 305 308 351 357 379 401 593 602
    "??" (383) 189 502 754
    "?." (384) 183 186 493 494 541 543
    "?[" (385) 181 491 492
    "<|" (386) 526
    " <|" (387) 276
    "$ <|" (388) 279 398
    "@ <|" (389) 277 396
    "@@ <|" (390) 278 397
    "|>" (391) 126 527 528
    ":=" (392) 185 187 358 380 603 815 817 819 821
    "<<<" (393) 176 463
    ">>>" (394) 177 464
    "<<<=" (395) 178 394 415
    ">>>=" (396) 179 395 416
    "=>" (397) 350 351 868 870
    "::" (398) 282 283
    "&&" (399) 122 150 479
    "||" (400) 123 151 480
    "^^" (401) 124 152 481
    "&&=" (402) 147 384 405
    "||=" (403) 148 385 406
    "^^=" (404) 149 386 407
    ".." (405) 160 482
    "$$" (406) 532
    "$i" (407) 422 533 607 669
    "$v" (408) 534
    "$b" (409) 535
    "$a" (410) 536 573
    "$t" (411) 711
    "$c" (412) 538 539 547
    "$f" (413) 540 541 542 543 544 545 546 818 819 820 821
    "..." (414) 537
    "[[" (415) 319 320 323 324 363 549 849 850 851 852 879 913
    "[{" (416) 853 854 880 914
    "{{" (417) 903 916
    "new scope" <i> (418) 229
    "close scope" <i> (419) 231
    "end of line" (420) 68
    "integer constant" <i> (421) 58 59 60 61 92 103 370
    "long integer constant" <i64> (422) 372
    "unsigned integer constant" <ui> (423) 371
    "unsigned long integer constant" <ui64> (424) 373
    "unsigned int8 constant" <ui> (425) 374
    "floating point constant" <fd> (426) 93 104 375
    "double constant" <d> (427) 376
    "name" <s> (428) 21 44 52 89 91 98 102 136 184 185 186 192 193 195 281 282 283 317 318 342 343 345 346 355 356 357 358 359 419 420 430 431 432 433 434 493 494 508 509 514 529 580 586 606 608 609 610 629 630 635 644 655 668 670 671 672 710 712 713 716 798 803 808 814 815 816 817
    "keyword" <s> (429) 45 261 272
    "type function" <s> (430) 46 275
    "start of the string" (431) 27 28 37
    STRING_CHARACTER <ch> (432) 23 25 30 38 39
    STRING_CHARACTER_ESC (433) 24 26
    "end of the string" (434) 27 28 37
    "{" (435) 36
    "}" (436) 36
    "end of failed eader macro" (437)
    ";}}" (438) 836
    ";}]" (439) 838 845
    ";]]" (440) 840 842
    ",]]" (441) 843
    ",}]" (442) 846
    UNARY_MINUS (443)
    UNARY_PLUS (444)
    PRE_INC (445)
    PRE_DEC (446)
    POST_INC (447)
    POST_DEC (448)
    DEREF (449)


Nonterminals, with rules where they appear

    $accept (222)
        on left: 0
    program (223)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15
    top_level_reader_macro (224)
        on left: 16
        on right: 14
    optional_public_or_private_module <b> (225)
        on left: 17 18 19
        on right: 22
    module_name <s> (226)
        on left: 20 21
        on right: 22
    module_declaration (227)
        on left: 22
        on right: 2
    character_sequence <s> (228)
        on left: 23 24 25 26
        on right: 25 26 27 35
    string_constant <s> (229)
        on left: 27 28
        on right: 90 101
    format_string <s> (230)
        on left: 29 30
        on right: 30 33
    optional_format_string <s> (231)
        on left: 31 33
        on right: 36
    $@1 (232)
        on left: 32
        on right: 33
    string_builder_body <pExpression> (233)
        on left: 34 35 36
        on right: 35 36 37
    string_builder <pExpression> (234)
        on left: 37
        on right: 451
    reader_character_sequence (235)
        on left: 38 39
        on right: 39 41
    expr_reader <pExpression> (236)
        on left: 41
        on right: 16 450
    $@2 (237)
        on left: 40
        on right: 41
    options_declaration (238)
        on left: 42
        on right: 9
    require_declaration (239)
        on left: 43
        on right: 8
    keyword_or_name <s> (240)
        on left: 44 45 46
        on right: 47 49 50
    require_module_name <s> (241)
        on left: 47 48 49 50
        on right: 48 49 50 51 52
    require_module (242)
        on left: 51 52
        on right: 43
    is_public_module <b> (243)
        on left: 53 54
        on right: 51 52
    expect_declaration (244)
        on left: 55
        on right: 7
    expect_list (245)
        on left: 56 57
        on right: 55 57
    expect_error (246)
        on left: 58 59
        on right: 56 57
    expression_label <pExpression> (247)
        on left: 60
        on right: 255
    expression_goto <pExpression> (248)
        on left: 61 62
        on right: 256
    elif_or_static_elif <b> (249)
        on left: 63 64
        on right: 67
    expression_else <pExpression> (250)
        on left: 65 66 67
        on right: 67 80
    semicolon (251)
        on left: 68 69
        on right: 15 16 82 113 237 241 242 249 250 255 256 257 301 306 319 321 323 325 563 565 567 570 576 577 611 612 614 628 629 630 636 637 640 713 715 716 721
    if_or_static_if <b> (252)
        on left: 70 71
        on right: 80
    expression_else_one_liner <pExpression> (253)
        on left: 72 74
        on right: 82
    $@3 (254)
        on left: 73
        on right: 74
    expression_if_one_liner <pExpression> (255)
        on left: 75 76 77 78 79
        on right: 74 82
    expression_if_then_else <pExpression> (256)
        on left: 80 82
        on right: 253
    $@4 (257)
        on left: 81
        on right: 82
    expression_for_loop <pExpression> (258)
        on left: 84
        on right: 248
    $@5 (259)
        on left: 83
        on right: 84
    expression_unsafe <pExpression> (260)
        on left: 85
        on right: 245
    expression_while_loop <pExpression> (261)
        on left: 86
        on right: 244
    expression_with <pExpression> (262)
        on left: 87
        on right: 246
    expression_with_alias <pExpression> (263)
        on left: 89
        on right: 247
    $@6 (264)
        on left: 88
        on right: 89
    annotation_argument_value <aa> (265)
        on left: 90 91 92 93 94 95
        on right: 96 97
    annotation_argument_value_list <aaList> (266)
        on left: 96 97
        on right: 97 108
    annotation_argument_name <s> (267)
        on left: 98 99 100
        on right: 101 102 103 104 105 106 107 108
    annotation_argument <aa> (268)
        on left: 101 102 103 104 105 106 107 108
        on right: 109 110 111 112
    annotation_argument_list <aaList> (269)
        on left: 109 110
        on right: 42 110 119 549
    metadata_argument_list <aaList> (270)
        on left: 111 112 113
        on right: 112 113 550
    annotation_declaration_name <s> (271)
        on left: 114 115 116 117
        on right: 118 119
    annotation_declaration_basic <fa> (272)
        on left: 118 119
        on right: 120
    annotation_declaration <fa> (273)
        on left: 120 121 122 123 124 125 126
        on right: 121 122 123 124 125 126 127 128
    annotation_list <faList> (274)
        on left: 127 128
        on right: 128 130 570
    optional_annotation_list <faList> (275)
        on left: 129 130
        on right: 221 366 367 369 567 569 647 650 667
    optional_function_argument_list <pVarDeclList> (276)
        on left: 131 132 133
        on right: 225 366 367 369 429 770 777 784
    optional_function_type <pTypeDecl> (277)
        on left: 134 135
        on right: 225 366 367 369 429 770 777 784
    function_name <s> (278)
        on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220
        on right: 225
    global_function_declaration (279)
        on left: 221
        on right: 6
    optional_public_or_private_function <b> (280)
        on left: 222 223 224
        on right: 227
    function_declaration_header <pFuncDecl> (281)
        on left: 225
        on right: 227 567 569
    function_declaration <pFuncDecl> (282)
        on left: 227
        on right: 221
    $@7 (283)
        on left: 226
        on right: 227
    open_block (284)
        on left: 228 229
        on right: 232 233 624 638 647 650 664 798 803 808
    close_block (285)
        on left: 230 231
        on right: 232 233 624 638 647 650 664 798 803 808
    expression_block <pExpression> (286)
        on left: 232 233
        on right: 66 67 80 84 85 86 87 227 261 309 349 365 369 569
    expr_call_pipe <pExpression> (287)
        on left: 234 235 236
        on right: 280 399
    expression_any <pExpression> (288)
        on left: 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257
        on right: 259
    expressions <pExpression> (289)
        on left: 258 259 260
        on right: 232 233 259 260
    expr_keyword <pExpression> (290)
        on left: 261
        on right: 239
    optional_expr_list <pExpression> (291)
        on left: 262 263
        on right: 265 736 738 878 893
    optional_expr_list_in_braces <pExpression> (292)
        on left: 264 265
        on right: 275
    optional_expr_map_tuple_list <pExpression> (293)
        on left: 266 267
        on right: 902 904 905 906
    type_declaration_no_options_list <pTypeDeclList> (294)
        on left: 268 269
        on right: 269 272 275 738
    expression_keyword <pExpression> (295)
        on left: 272 275
        on right: 235 531
    $@8 (296)
        on left: 270
        on right: 272
    $@9 (297)
        on left: 271
        on right: 272
    $@10 (298)
        on left: 273
        on right: 275
    $@11 (299)
        on left: 274
        on right: 275
    expr_pipe <pExpression> (300)
        on left: 276 277 278 279 280
        on right: 238 302 303 307 308 320 322 324 326 613 615
    name_in_namespace <s> (301)
        on left: 281 282 283
        on right: 41 114 341 342 343 344 345 346 417 418 421 440 441 442 443 444 448 529 652 708 736 738
    expression_delete <pExpression> (302)
        on left: 284 285
        on right: 242
    new_type_declaration <pTypeDecl> (303)
        on left: 288 289
        on right: 290 291 292 293 294
    $@12 (304)
        on left: 286
        on right: 288
    $@13 (305)
        on left: 287
        on right: 288
    expr_new <pExpression> (306)
        on left: 290 291 292 293 294 295
        on right: 522
    expression_break <pExpression> (307)
        on left: 296
        on right: 78 249
    expression_continue <pExpression> (308)
        on left: 297
        on right: 79 250
    expression_return_no_pipe <pExpression> (309)
        on left: 298 299 300
        on right: 76 301
    expression_return <pExpression> (310)
        on left: 301 302 303
        on right: 251
    expression_yield_no_pipe <pExpression> (311)
        on left: 304 305
        on right: 77 306
    expression_yield <pExpression> (312)
        on left: 306 307 308
        on right: 252
    expression_try_catch <pExpression> (313)
        on left: 309
        on right: 254
    kwd_let_var_or_nothing <b> (314)
        on left: 310 311 312
        on right: 571 572
    kwd_let <b> (315)
        on left: 313 314
        on right: 327 328 624 626
    optional_in_scope <b> (316)
        on left: 315 316
        on right: 327 328
    tuple_expansion <pNameList> (317)
        on left: 317 318
        on right: 318 319 320 321 322 323 324 325 326
    tuple_expansion_variable_declaration <pVarDecl> (318)
        on left: 319 320 321 322 323 324 325 326
        on right: 328
    expression_let <pExpression> (319)
        on left: 327 328
        on right: 243
    expr_cast <pExpression> (320)
        on left: 331 334 337
        on right: 521
    $@14 (321)
        on left: 329
        on right: 331
    $@15 (322)
        on left: 330
        on right: 331
    $@16 (323)
        on left: 332
        on right: 334
    $@17 (324)
        on left: 333
        on right: 334
    $@18 (325)
        on left: 335
        on right: 337
    $@19 (326)
        on left: 336
        on right: 337
    expr_type_decl <pExpression> (327)
        on left: 340
        on right: 520
    $@20 (328)
        on left: 338
        on right: 340
    $@21 (329)
        on left: 339
        on right: 340
    expr_type_info <pExpression> (330)
        on left: 341 342 343 344 345 346
        on right: 519
    expr_list <pExpression> (331)
        on left: 347 348
        on right: 84 263 292 299 300 348 418 420 433 436 444 446 487 539 872 890 894 897 911 912 913 914 915 916
    block_or_simple_block <pExpression> (332)
        on left: 349 350 351
        on right: 366 367
    block_or_lambda <i> (333)
        on left: 352 353 354
        on right: 366 367 369
    capture_entry <pCapt> (334)
        on left: 355 356 357 358 359
        on right: 360 361
    capture_list <pCaptList> (335)
        on left: 360 361
        on right: 361 363 364
    optional_capture_list <pCaptList> (336)
        on left: 362 363 364
        on right: 236 366 367 369 500 501
    expr_block <pExpression> (337)
        on left: 365 366
        on right: 276 277 278 279 396 397 398 834
    expr_full_block <pExpression> (338)
        on left: 367
        on right: 525
    expr_full_block_assumed_piped <pExpression> (339)
        on left: 369
        on right: 234 235 236
    $@22 (340)
        on left: 368
        on right: 369
    expr_numeric_const <pExpression> (341)
        on left: 370 371 372 373 374 375 376
        on right: 449
    expr_assign <pExpression> (342)
        on left: 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395
        on right: 241 276
    expr_assign_pipe_right <pExpression> (343)
        on left: 396 397 398 399
        on right: 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416
    expr_assign_pipe <pExpression> (344)
        on left: 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416
        on right: 240
    expr_named_call <pExpression> (345)
        on left: 417 418
        on right: 524
    expr_method_call <pExpression> (346)
        on left: 419 420
        on right: 523
    func_addr_name <pExpression> (347)
        on left: 421 422
        on right: 423 426 429
    func_addr_expr <pExpression> (348)
        on left: 423 426 429
        on right: 495
    $@23 (349)
        on left: 424
        on right: 426
    $@24 (350)
        on left: 425
        on right: 426
    $@25 (351)
        on left: 427
        on right: 429
    $@26 (352)
        on left: 428
        on right: 429
    expr_field <pExpression> (353)
        on left: 430 431 432 433 434 435 436 439
        on right: 455
    $@27 (354)
        on left: 437
        on right: 439
    $@28 (355)
        on left: 438
        on right: 439
    expr_call <pExpression> (356)
        on left: 440 441 442 443 444 445 446
        on right: 496
    expr <pExpression> (357)
        on left: 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 506 507 508 509 512 513 514 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531
        on right
    $@29 (358)
        on left: 504
        on right: 506
    $@30 (359)
        on left: 505
        on right: 506
    $@31 (360)
        on left: 510
        on right: 512
    $@32 (361)
        on left: 511
        on right: 512
    $@33 (362)
        on left: 515
        on right: 517
    $@34 (363)
        on left: 516
        on right: 517
    expr_mtag <pExpression> (364)
        on left: 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547
        on right: 456
    optional_field_annotation <aaList> (365)
        on left: 548 549 550
        on right: 561 571 572 618 626
    optional_override <i> (366)
        on left: 551 552 553
        on right: 561 569
    optional_constant <b> (367)
        on left: 554 555
        on right: 567 569
    optional_public_or_private_member_variable <b> (368)
        on left: 556 557 558
        on right: 561 567 569
    optional_static_member_variable <b> (369)
        on left: 559 560
        on right: 561 569
    structure_variable_declaration <pVarDecl> (370)
        on left: 561
        on right: 565
    struct_variable_declaration_list <pVarDeclList> (371)
        on left: 562 563 565 567 569 570
        on right: 563 565 567 569 570 664
    $@35 (372)
        on left: 564
        on right: 565
    $@36 (373)
        on left: 566
        on right: 567
    $@37 (374)
        on left: 568
        on right: 569
    function_argument_declaration_no_type <pVarDecl> (375)
        on left: 571
        on right: 574 576
    function_argument_declaration_type <pVarDecl> (376)
        on left: 572 573
        on right: 575 577 578
    function_argument_list <pVarDeclList> (377)
        on left: 574 575 576 577 578
        on right: 133 576 577 578
    tuple_type <pVarDecl> (378)
        on left: 579 580
        on right: 581 582 585
    tuple_type_list <pVarDeclList> (379)
        on left: 581 582
        on right: 582 787 875 886
    tuple_alias_type_list <pVarDeclList> (380)
        on left: 583 584 585
        on right: 584 585 798
    variant_type <pVarDecl> (381)
        on left: 586
        on right: 587 588 591
    variant_type_list <pVarDeclList> (382)
        on left: 587 588
        on right: 588 790 863 889
    variant_alias_type_list <pVarDeclList> (383)
        on left: 589 590 591
        on right: 590 591 803
    copy_or_move <b> (384)
        on left: 592 593
        on right: 596 598 814 816 818 820
    variable_declaration_no_type <pVarDecl> (385)
        on left: 594 595 596
        on right: 571 600
    variable_declaration_type <pVarDecl> (386)
        on left: 597 598
        on right: 572 599
    variable_declaration <pVarDecl> (387)
        on left: 599 600
        on right: 561
    copy_or_move_or_clone <i> (388)
        on left: 601 602 603
        on right: 319 320 321 322 323 324 325 326 612 613 614 615
    optional_ref <b> (389)
        on left: 604 605
        on right: 323 324 325 326 614 615
    let_variable_name_with_pos_list <pNameWithPosList> (390)
        on left: 606 607 608 609 610
        on right: 609 610 611 612 613 614 615
    let_variable_declaration <pVarDecl> (391)
        on left: 611 612 613 614 615
        on right: 327 618 626
    global_variable_declaration_list <pVarDeclList> (392)
        on left: 616 618
        on right: 618 624
    $@38 (393)
        on left: 617
        on right: 618
    optional_shared <b> (394)
        on left: 619 620
        on right: 22 624 626
    optional_public_or_private_variable <b> (395)
        on left: 621 622 623
        on right: 624 626
    global_let (396)
        on left: 624 626
        on right: 5
    $@39 (397)
        on left: 625
        on right: 626
    enum_list <pEnum> (398)
        on left: 627 628 629 630
        on right: 628 629 630 647 650
    optional_public_or_private_alias <b> (399)
        on left: 631 632 633
        on right: 635 798 803 808
    single_alias (400)
        on left: 635
        on right: 636 637 640
    $@40 (401)
        on left: 634
        on right: 635
    alias_list (402)
        on left: 636 637
        on right: 637 638
    alias_declaration (403)
        on left: 638 640
        on right: 10
    $@41 (404)
        on left: 639
        on right: 640
    optional_public_or_private_enum <b> (405)
        on left: 641 642 643
        on right: 647 650
    enum_name <pEnum> (406)
        on left: 644
        on right: 647 650
    enum_declaration (407)
        on left: 647 650
        on right: 4
    $@42 (408)
        on left: 645
        on right: 647
    $@43 (409)
        on left: 646
        on right: 647
    $@44 (410)
        on left: 648
        on right: 650
    $@45 (411)
        on left: 649
        on right: 650
    optional_structure_parent <s> (412)
        on left: 651 652
        on right: 655
    optional_sealed <b> (413)
        on left: 653 654
        on right: 655
    structure_name <pStructure> (414)
        on left: 655
        on right: 667
    class_or_struct <i> (415)
        on left: 656 657 658 659
        on right: 667
    optional_public_or_private_structure <b> (416)
        on left: 660 661 662
        on right: 667
    optional_struct_variable_declaration_list <pVarDeclList> (417)
        on left: 663 664
        on right: 667
    structure_declaration (418)
        on left: 667
        on right: 3
    $@46 (419)
        on left: 665
        on right: 667
    $@47 (420)
        on left: 666
        on right: 667
    variable_name_with_pos_list <pNameWithPosList> (421)
        on left: 668 669 670 671 672
        on right: 84 594 595 596 597 598 671 672 911 912 913 914 915 916
    basic_type_declaration <type> (422)
        on left: 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699
        on right: 435 436 445 446 507 513 518 528 726
    enum_basic_type_declaration <type> (423)
        on left: 700 701 702 703 704 705 706 707
        on right: 650
    structure_type_declaration <pTypeDecl> (424)
        on left: 708
        on right: 289 729
    auto_type_declaration <pTypeDecl> (425)
        on left: 709 710 711
        on right: 727
    bitfield_bits <pNameList> (426)
        on left: 712 713
        on right: 713 719
    bitfield_alias_bits <pNameList> (427)
        on left: 714 715 716
        on right: 715 716 808
    bitfield_type_declaration <pTypeDecl> (428)
        on left: 719
        on right: 728
    $@48 (429)
        on left: 717
        on right: 719
    $@49 (430)
        on left: 718
        on right: 719
    c_or_s (431)
        on left: 720 721
        on right: 269 343 582 584 585 588 590 591 723 906
    table_type_pair <aTypePair> (432)
        on left: 722 723
        on right: 760
    dim_list <pTypeDecl> (433)
        on left: 724 725
        on right: 725 730
    type_declaration_no_options <pTypeDecl> (434)
        on left: 726 727 728 729 730 731 734 735 736 738 739 740 741 742 743 744 745 746 747 748 749 750 753 754 757 760 763 764 767 770 771 774 777 778 781 784 787 790
        on right: 236 319 320 321 322 331 334 337 426 500 501 506 611 612 613 730 731 739 740 741 742 743 744 745 746 747 748 749 750 754 791 792 849 850 851 852 853 854 857 860 866 879 880 883 893 897 905 906
    $@50 (435)
        on left: 732
        on right: 734
    $@51 (436)
        on left: 733
        on right: 734
    $@52 (437)
        on left: 737
        on right: 738
    $@53 (438)
        on left: 751
        on right: 753
    $@54 (439)
        on left: 752
        on right: 753
    $@55 (440)
        on left: 755
        on right: 757
    $@56 (441)
        on left: 756
        on right: 757
    $@57 (442)
        on left: 758
        on right: 760
    $@58 (443)
        on left: 759
        on right: 760
    $@59 (444)
        on left: 761
        on right: 763
    $@60 (445)
        on left: 762
        on right: 763
    $@61 (446)
        on left: 765
        on right: 767
    $@62 (447)
        on left: 766
        on right: 767
    $@63 (448)
        on left: 768
        on right: 770
    $@64 (449)
        on left: 769
        on right: 770
    $@65 (450)
        on left: 772
        on right: 774
    $@66 (451)
        on left: 773
        on right: 774
    $@67 (452)
        on left: 775
        on right: 777
    $@68 (453)
        on left: 776
        on right: 777
    $@69 (454)
        on left: 779
        on right: 781
    $@70 (455)
        on left: 780
        on right: 781
    $@71 (456)
        on left: 782
        on right: 784
    $@72 (457)
        on left: 783
        on right: 784
    $@73 (458)
        on left: 785
        on right: 787
    $@74 (459)
        on left: 786
        on right: 787
    $@75 (460)
        on left: 788
        on right: 790
    $@76 (461)
        on left: 789
        on right: 790
    type_declaration <pTypeDecl> (462)
        on left: 791 792 793
        on right: 135 268 269 288 340 512 517 579 580 586 597 598 635 722 723 734 753 757 763 767 774 781 792 793
    tuple_alias_declaration (463)
        on left: 798
        on right: 12
    $@77 (464)
        on left: 794
        on right: 798
    $@78 (465)
        on left: 795
        on right: 798
    $@79 (466)
        on left: 796
        on right: 798
    $@80 (467)
        on left: 797
        on right: 798
    variant_alias_declaration (468)
        on left: 803
        on right: 11
    $@81 (469)
        on left: 799
        on right: 803
    $@82 (470)
        on left: 800
        on right: 803
    $@83 (471)
        on left: 801
        on right: 803
    $@84 (472)
        on left: 802
        on right: 803
    bitfield_alias_declaration (473)
        on left: 808
        on right: 13
    $@85 (474)
        on left: 804
        on right: 808
    $@86 (475)
        on left: 805
        on right: 808
    $@87 (476)
        on left: 806
        on right: 808
    $@88 (477)
        on left: 807
        on right: 808
    make_decl <pExpression> (478)
        on left: 809 810 811 812 813
        on right: 295 452
    make_struct_fields <pMakeStruct> (479)
        on left: 814 815 816 817 818 819 820 821
        on right: 417 418 434 816 817 820 821 823 824 825 826 827 828 829
    make_variant_dim <pExpression> (480)
        on left: 822 823
        on right: 863 889
    make_struct_single <pExpression> (481)
        on left: 824
        on right: 293 294 442 443 488
    make_struct_dim <pExpression> (482)
        on left: 825 826
        on right: 826 849 852 853 854
    make_struct_dim_list <pExpression> (483)
        on left: 827 828
        on right: 828 830
    make_struct_dim_decl <pExpression> (484)
        on left: 829 830
        on right: 831
    optional_make_struct_dim_decl <pExpression> (485)
        on left: 831 832
        on right: 857 860 875 883 886
    optional_block <pExpression> (486)
        on left: 833 834
        on right: 849 850 851 852 853 854
    optional_trailing_semicolon_cur_cur (487)
        on left: 835 836
        on right: 903
    optional_trailing_semicolon_cur_sqr (488)
        on left: 837 838
        on right: 880
    optional_trailing_semicolon_sqr_sqr (489)
        on left: 839 840
        on right: 879
    optional_trailing_delim_sqr_sqr (490)
        on left: 841 842 843
        on right: 849 850 851 852
    optional_trailing_delim_cur_sqr (491)
        on left: 844 845 846
        on right: 853 854
    use_initializer <b> (492)
        on left: 847 848
        on right: 291 857 860 863 866 875 883 886
    make_struct_decl <pExpression> (493)
        on left: 849 850 851 852 853 854 857 860 863 866
        on right: 809
    $@89 (494)
        on left: 855
        on right: 857
    $@90 (495)
        on left: 856
        on right: 857
    $@91 (496)
        on left: 858
        on right: 860
    $@92 (497)
        on left: 859
        on right: 860
    $@93 (498)
        on left: 861
        on right: 863
    $@94 (499)
        on left: 862
        on right: 863
    $@95 (500)
        on left: 864
        on right: 866
    $@96 (501)
        on left: 865
        on right: 866
    make_tuple <pExpression> (502)
        on left: 867 868 869
        on right: 869 876 877
    make_map_tuple <pExpression> (503)
        on left: 870 871
        on right: 898 899 900 901 915 916
    make_tuple_call <pExpression> (504)
        on left: 872 875
        on right: 813
    $@97 (505)
        on left: 873
        on right: 875
    $@98 (506)
        on left: 874
        on right: 875
    make_dim <pExpression> (507)
        on left: 876 877
        on right: 877 879 880
    make_dim_decl <pExpression> (508)
        on left: 878 879 880 883 886 889 890 893 894 897
        on right: 810
    $@99 (509)
        on left: 881
        on right: 883
    $@100 (510)
        on left: 882
        on right: 883
    $@101 (511)
        on left: 884
        on right: 886
    $@102 (512)
        on left: 885
        on right: 886
    $@103 (513)
        on left: 887
        on right: 889
    $@104 (514)
        on left: 888
        on right: 889
    $@105 (515)
        on left: 891
        on right: 893
    $@106 (516)
        on left: 892
        on right: 893
    $@107 (517)
        on left: 895
        on right: 897
    $@108 (518)
        on left: 896
        on right: 897
    make_table <pExpression> (519)
        on left: 898 899
        on right: 899 903
    expr_map_tuple_list <pExpression> (520)
        on left: 900 901
        on right: 267 901
    make_table_decl <pExpression> (521)
        on left: 902 903 904 905 906
        on right: 811
    array_comprehension_where <pExpression> (522)
        on left: 907 908
        on right: 911 912 913 914 915 916
    optional_comma <b> (523)
        on left: 909 910
        on right: 263 265 267 487 830 872 890 894 897
    array_comprehension <pExpression> (524)
        on left: 911 912 913 914 915 916
        on right: 812


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . module_declaration
    3        | program . structure_declaration
    4        | program . enum_declaration
    5        | program . global_let
    6        | program . global_function_declaration
    7        | program . expect_declaration
    8        | program . require_declaration
    9        | program . options_declaration
   10        | program . alias_declaration
   11        | program . variant_alias_declaration
   12        | program . tuple_alias_declaration
   13        | program . bitfield_alias_declaration
   14        | program . top_level_reader_macro
   15        | program . semicolon

    $end                 shift, and go to state 2
    "let"                shift, and go to state 3
    "options"            shift, and go to state 4
    "expect"             shift, and go to state 5
    "require"            shift, and go to state 6
    "typedef"            shift, and go to state 7
    "var"                shift, and go to state 8
    "module"             shift, and go to state 9
    "bitfield"           shift, and go to state 10
    "tuple"              shift, and go to state 11
    "variant"            shift, and go to state 12
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '%'                  shift, and go to state 15
    '['                  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    top_level_reader_macro       go to state 17
    module_declaration           go to state 18
    expr_reader                  go to state 19
    options_declaration          go to state 20
    require_declaration          go to state 21
    expect_declaration           go to state 22
    semicolon                    go to state 23
    optional_annotation_list     go to state 24
    global_function_declaration  go to state 25
    kwd_let                      go to state 26
    global_let                   go to state 27
    alias_declaration            go to state 28
    enum_declaration             go to state 29
    structure_declaration        go to state 30
    tuple_alias_declaration      go to state 31
    variant_alias_declaration    go to state 32
    bitfield_alias_declaration   go to state 33


State 2

    0 $accept: program $end .

    $default  accept


State 3

  313 kwd_let: "let" .

    $default  reduce using rule 313 (kwd_let)


State 4

   42 options_declaration: "options" . annotation_argument_list

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 39


State 5

   55 expect_declaration: "expect" . expect_list

    "integer constant"  shift, and go to state 40

    expect_list   go to state 41
    expect_error  go to state 42


State 6

   43 require_declaration: "require" . require_module

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 48
    require_module       go to state 49


State 7

  638 alias_declaration: "typedef" . open_block alias_list close_block
  640                  | "typedef" . $@41 single_alias semicolon

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 639 ($@41)

    open_block  go to state 52
    $@41        go to state 53


State 8

  314 kwd_let: "var" .

    $default  reduce using rule 314 (kwd_let)


State 9

   22 module_declaration: "module" . module_name optional_shared optional_public_or_private_module

    "name"  shift, and go to state 54
    '$'     shift, and go to state 55

    module_name  go to state 56


State 10

  808 bitfield_alias_declaration: "bitfield" . optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 631 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 59


State 11

  798 tuple_alias_declaration: "tuple" . optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 631 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 60


State 12

  803 variant_alias_declaration: "variant" . optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 631 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 61


State 13

   68 semicolon: "end of line" .

    $default  reduce using rule 68 (semicolon)


State 14

   69 semicolon: "end of expression" .

    $default  reduce using rule 69 (semicolon)


State 15

   41 expr_reader: '%' . name_in_namespace $@2 reader_character_sequence

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 64


State 16

  130 optional_annotation_list: '[' . annotation_list ']'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 74
    name_in_namespace             go to state 75


State 17

   14 program: program top_level_reader_macro .

    $default  reduce using rule 14 (program)


State 18

    2 program: program module_declaration .

    $default  reduce using rule 2 (program)


State 19

   16 top_level_reader_macro: expr_reader . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 76


State 20

    9 program: program options_declaration .

    $default  reduce using rule 9 (program)


State 21

    8 program: program require_declaration .

    $default  reduce using rule 8 (program)


State 22

    7 program: program expect_declaration .

    $default  reduce using rule 7 (program)


State 23

   15 program: program semicolon .

    $default  reduce using rule 15 (program)


State 24

  221 global_function_declaration: optional_annotation_list . "def" function_declaration
  647 enum_declaration: optional_annotation_list . "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  650                 | optional_annotation_list . "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block
  667 structure_declaration: optional_annotation_list . class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "struct"    shift, and go to state 77
    "class"     shift, and go to state 78
    "def"       shift, and go to state 79
    "enum"      shift, and go to state 80
    "template"  shift, and go to state 81

    class_or_struct  go to state 82


State 25

    6 program: program global_function_declaration .

    $default  reduce using rule 6 (program)


State 26

  624 global_let: kwd_let . optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block
  626           | kwd_let . optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "shared"  shift, and go to state 83

    $default  reduce using rule 619 (optional_shared)

    optional_shared  go to state 84


State 27

    5 program: program global_let .

    $default  reduce using rule 5 (program)


State 28

   10 program: program alias_declaration .

    $default  reduce using rule 10 (program)


State 29

    4 program: program enum_declaration .

    $default  reduce using rule 4 (program)


State 30

    3 program: program structure_declaration .

    $default  reduce using rule 3 (program)


State 31

   12 program: program tuple_alias_declaration .

    $default  reduce using rule 12 (program)


State 32

   11 program: program variant_alias_declaration .

    $default  reduce using rule 11 (program)


State 33

   13 program: program bitfield_alias_declaration .

    $default  reduce using rule 13 (program)


State 34

   99 annotation_argument_name: "type" .

    $default  reduce using rule 99 (annotation_argument_name)


State 35

  100 annotation_argument_name: "in" .

    $default  reduce using rule 100 (annotation_argument_name)


State 36

   98 annotation_argument_name: "name" .

    $default  reduce using rule 98 (annotation_argument_name)


State 37

  101 annotation_argument: annotation_argument_name . '=' string_constant
  102                    | annotation_argument_name . '=' "name"
  103                    | annotation_argument_name . '=' "integer constant"
  104                    | annotation_argument_name . '=' "floating point constant"
  105                    | annotation_argument_name . '=' "true"
  106                    | annotation_argument_name . '=' "false"
  107                    | annotation_argument_name .
  108                    | annotation_argument_name . '=' '(' annotation_argument_value_list ')'

    '='  shift, and go to state 85

    $default  reduce using rule 107 (annotation_argument)


State 38

  109 annotation_argument_list: annotation_argument .

    $default  reduce using rule 109 (annotation_argument_list)


State 39

   42 options_declaration: "options" annotation_argument_list .
  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument

    ','  shift, and go to state 86

    $default  reduce using rule 42 (options_declaration)


State 40

   58 expect_error: "integer constant" .
   59             | "integer constant" . ':' "integer constant"

    ':'  shift, and go to state 87

    $default  reduce using rule 58 (expect_error)


State 41

   55 expect_declaration: "expect" expect_list .
   57 expect_list: expect_list . ',' expect_error

    ','  shift, and go to state 88

    $default  reduce using rule 55 (expect_declaration)


State 42

   56 expect_list: expect_error .

    $default  reduce using rule 56 (expect_list)


State 43

   44 keyword_or_name: "name" .

    $default  reduce using rule 44 (keyword_or_name)


State 44

   45 keyword_or_name: "keyword" .

    $default  reduce using rule 45 (keyword_or_name)


State 45

   46 keyword_or_name: "type function" .

    $default  reduce using rule 46 (keyword_or_name)


State 46

   48 require_module_name: '%' . require_module_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45
    '%'              shift, and go to state 46

    keyword_or_name      go to state 47
    require_module_name  go to state 89


State 47

   47 require_module_name: keyword_or_name .

    $default  reduce using rule 47 (require_module_name)


State 48

   49 require_module_name: require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name
   51 require_module: require_module_name . is_public_module
   52               | require_module_name . "as" "name" is_public_module

    "as"      shift, and go to state 90
    "public"  shift, and go to state 91
    '/'       shift, and go to state 92
    '.'       shift, and go to state 93

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 94


State 49

   43 require_declaration: "require" require_module .

    $default  reduce using rule 43 (require_declaration)


State 50

  229 open_block: "new scope" .

    $default  reduce using rule 229 (open_block)


State 51

  228 open_block: "begin of code block" .

    $default  reduce using rule 228 (open_block)


State 52

  638 alias_declaration: "typedef" open_block . alias_list close_block

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 631 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 96
    alias_list                        go to state 97


State 53

  640 alias_declaration: "typedef" $@41 . single_alias semicolon

    "public"   shift, and go to state 57
    "private"  shift, and go to state 58

    $default  reduce using rule 631 (optional_public_or_private_alias)

    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 98


State 54

   21 module_name: "name" .

    $default  reduce using rule 21 (module_name)


State 55

   20 module_name: '$' .

    $default  reduce using rule 20 (module_name)


State 56

   22 module_declaration: "module" module_name . optional_shared optional_public_or_private_module

    "shared"  shift, and go to state 83

    $default  reduce using rule 619 (optional_shared)

    optional_shared  go to state 99


State 57

  633 optional_public_or_private_alias: "public" .

    $default  reduce using rule 633 (optional_public_or_private_alias)


State 58

  632 optional_public_or_private_alias: "private" .

    $default  reduce using rule 632 (optional_public_or_private_alias)


State 59

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias . $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 804 ($@85)

    $@85  go to state 100


State 60

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias . $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 794 ($@77)

    $@77  go to state 101


State 61

  803 variant_alias_declaration: "variant" optional_public_or_private_alias . $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 799 ($@81)

    $@81  go to state 102


State 62

  283 name_in_namespace: "::" . "name"

    "name"  shift, and go to state 103


State 63

  281 name_in_namespace: "name" .
  282                  | "name" . "::" "name"

    "::"  shift, and go to state 104

    "::"      [reduce using rule 281 (name_in_namespace)]
    $default  reduce using rule 281 (name_in_namespace)


State 64

   41 expr_reader: '%' name_in_namespace . $@2 reader_character_sequence

    $default  reduce using rule 40 ($@2)

    $@2  go to state 105


State 65

  115 annotation_declaration_name: "require" .

    $default  reduce using rule 115 (annotation_declaration_name)


State 66

  116 annotation_declaration_name: "private" .

    $default  reduce using rule 116 (annotation_declaration_name)


State 67

  117 annotation_declaration_name: "template" .

    $default  reduce using rule 117 (annotation_declaration_name)


State 68

  126 annotation_declaration: "|>" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 106
    name_in_namespace             go to state 75


State 69

  121 annotation_declaration: '!' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 107
    name_in_namespace             go to state 75


State 70

  125 annotation_declaration: '(' . annotation_declaration ')'

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 108
    name_in_namespace             go to state 75


State 71

  118 annotation_declaration_basic: annotation_declaration_name .
  119                             | annotation_declaration_name . '(' annotation_argument_list ')'

    '('  shift, and go to state 109

    $default  reduce using rule 118 (annotation_declaration_basic)


State 72

  120 annotation_declaration: annotation_declaration_basic .

    $default  reduce using rule 120 (annotation_declaration)


State 73

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  127 annotation_list: annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 127 (annotation_list)


State 74

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'

    ','  shift, and go to state 113
    ']'  shift, and go to state 114


State 75

  114 annotation_declaration_name: name_in_namespace .

    $default  reduce using rule 114 (annotation_declaration_name)


State 76

   16 top_level_reader_macro: expr_reader semicolon .

    $default  reduce using rule 16 (top_level_reader_macro)


State 77

  657 class_or_struct: "struct" .

    $default  reduce using rule 657 (class_or_struct)


State 78

  656 class_or_struct: "class" .

    $default  reduce using rule 656 (class_or_struct)


State 79

  221 global_function_declaration: optional_annotation_list "def" . function_declaration

    "public"   shift, and go to state 115
    "private"  shift, and go to state 116

    $default  reduce using rule 222 (optional_public_or_private_function)

    optional_public_or_private_function  go to state 117
    function_declaration                 go to state 118


State 80

  647 enum_declaration: optional_annotation_list "enum" . optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block
  650                 | optional_annotation_list "enum" . optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "public"   shift, and go to state 119
    "private"  shift, and go to state 120

    $default  reduce using rule 641 (optional_public_or_private_enum)

    optional_public_or_private_enum  go to state 121


State 81

  658 class_or_struct: "template" . "class"
  659                | "template" . "struct"

    "struct"  shift, and go to state 122
    "class"   shift, and go to state 123


State 82

  667 structure_declaration: optional_annotation_list class_or_struct . optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list

    "public"   shift, and go to state 124
    "private"  shift, and go to state 125

    $default  reduce using rule 660 (optional_public_or_private_structure)

    optional_public_or_private_structure  go to state 126


State 83

  620 optional_shared: "shared" .

    $default  reduce using rule 620 (optional_shared)


State 84

  624 global_let: kwd_let optional_shared . optional_public_or_private_variable open_block global_variable_declaration_list close_block
  626           | kwd_let optional_shared . optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration

    "public"   shift, and go to state 127
    "private"  shift, and go to state 128

    $default  reduce using rule 621 (optional_public_or_private_variable)

    optional_public_or_private_variable  go to state 129


State 85

  101 annotation_argument: annotation_argument_name '=' . string_constant
  102                    | annotation_argument_name '=' . "name"
  103                    | annotation_argument_name '=' . "integer constant"
  104                    | annotation_argument_name '=' . "floating point constant"
  105                    | annotation_argument_name '=' . "true"
  106                    | annotation_argument_name '=' . "false"
  108                    | annotation_argument_name '=' . '(' annotation_argument_value_list ')'

    "true"                     shift, and go to state 130
    "false"                    shift, and go to state 131
    "integer constant"         shift, and go to state 132
    "floating point constant"  shift, and go to state 133
    "name"                     shift, and go to state 134
    "start of the string"      shift, and go to state 135
    '('                        shift, and go to state 136

    string_constant  go to state 137


State 86

  110 annotation_argument_list: annotation_argument_list ',' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 138


State 87

   59 expect_error: "integer constant" ':' . "integer constant"

    "integer constant"  shift, and go to state 139


State 88

   57 expect_list: expect_list ',' . expect_error

    "integer constant"  shift, and go to state 40

    expect_error  go to state 140


State 89

   48 require_module_name: '%' require_module_name .
   49                    | require_module_name . '.' keyword_or_name
   50                    | require_module_name . '/' keyword_or_name

    '.'  shift, and go to state 93

    $default  reduce using rule 48 (require_module_name)


State 90

   52 require_module: require_module_name "as" . "name" is_public_module

    "name"  shift, and go to state 141


State 91

   54 is_public_module: "public" .

    $default  reduce using rule 54 (is_public_module)


State 92

   50 require_module_name: require_module_name '/' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 142


State 93

   49 require_module_name: require_module_name '.' . keyword_or_name

    "name"           shift, and go to state 43
    "keyword"        shift, and go to state 44
    "type function"  shift, and go to state 45

    keyword_or_name  go to state 143


State 94

   51 require_module: require_module_name is_public_module .

    $default  reduce using rule 51 (require_module)


State 95

  635 single_alias: optional_public_or_private_alias . "name" $@40 '=' type_declaration

    "name"  shift, and go to state 144


State 96

  636 alias_list: single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 145


State 97

  637 alias_list: alias_list . single_alias semicolon
  638 alias_declaration: "typedef" open_block alias_list . close_block

    "public"             shift, and go to state 57
    "private"            shift, and go to state 58
    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 631 (optional_public_or_private_alias)

    close_block                       go to state 148
    optional_public_or_private_alias  go to state 95
    single_alias                      go to state 149


State 98

  640 alias_declaration: "typedef" $@41 single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 150


State 99

   22 module_declaration: "module" module_name optional_shared . optional_public_or_private_module

    "public"   shift, and go to state 151
    "private"  shift, and go to state 152

    $default  reduce using rule 17 (optional_public_or_private_module)

    optional_public_or_private_module  go to state 153


State 100

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 . "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    "name"  shift, and go to state 154


State 101

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 . "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    "name"  shift, and go to state 155


State 102

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 . "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block

    "name"  shift, and go to state 156


State 103

  283 name_in_namespace: "::" "name" .

    $default  reduce using rule 283 (name_in_namespace)


State 104

  282 name_in_namespace: "name" "::" . "name"

    "name"  shift, and go to state 157


State 105

   41 expr_reader: '%' name_in_namespace $@2 . reader_character_sequence

    STRING_CHARACTER  shift, and go to state 158

    reader_character_sequence  go to state 159


State 106

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  126                       | "|>" annotation_declaration .

    $default  reduce using rule 126 (annotation_declaration)


State 107

  121 annotation_declaration: '!' annotation_declaration .
  122                       | annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 121 (annotation_declaration)


State 108

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  125                       | '(' annotation_declaration . ')'

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112
    ')'   shift, and go to state 160


State 109

  119 annotation_declaration_basic: annotation_declaration_name '(' . annotation_argument_list ')'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 161


State 110

  122 annotation_declaration: annotation_declaration "&&" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 162
    name_in_namespace             go to state 75


State 111

  123 annotation_declaration: annotation_declaration "||" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 163
    name_in_namespace             go to state 75


State 112

  124 annotation_declaration: annotation_declaration "^^" . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 164
    name_in_namespace             go to state 75


State 113

  128 annotation_list: annotation_list ',' . annotation_declaration

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 165
    name_in_namespace             go to state 75


State 114

  130 optional_annotation_list: '[' annotation_list ']' .

    $default  reduce using rule 130 (optional_annotation_list)


State 115

  224 optional_public_or_private_function: "public" .

    $default  reduce using rule 224 (optional_public_or_private_function)


State 116

  223 optional_public_or_private_function: "private" .

    $default  reduce using rule 223 (optional_public_or_private_function)


State 117

  227 function_declaration: optional_public_or_private_function . $@7 function_declaration_header expression_block

    $default  reduce using rule 226 ($@7)

    $@7  go to state 166


State 118

  221 global_function_declaration: optional_annotation_list "def" function_declaration .

    $default  reduce using rule 221 (global_function_declaration)


State 119

  643 optional_public_or_private_enum: "public" .

    $default  reduce using rule 643 (optional_public_or_private_enum)


State 120

  642 optional_public_or_private_enum: "private" .

    $default  reduce using rule 642 (optional_public_or_private_enum)


State 121

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum . enum_name open_block $@42 enum_list $@43 close_block
  650                 | optional_annotation_list "enum" optional_public_or_private_enum . enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "name"  shift, and go to state 167

    enum_name  go to state 168


State 122

  659 class_or_struct: "template" "struct" .

    $default  reduce using rule 659 (class_or_struct)


State 123

  658 class_or_struct: "template" "class" .

    $default  reduce using rule 658 (class_or_struct)


State 124

  662 optional_public_or_private_structure: "public" .

    $default  reduce using rule 662 (optional_public_or_private_structure)


State 125

  661 optional_public_or_private_structure: "private" .

    $default  reduce using rule 661 (optional_public_or_private_structure)


State 126

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure . $@46 structure_name $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 665 ($@46)

    $@46  go to state 169


State 127

  623 optional_public_or_private_variable: "public" .

    $default  reduce using rule 623 (optional_public_or_private_variable)


State 128

  622 optional_public_or_private_variable: "private" .

    $default  reduce using rule 622 (optional_public_or_private_variable)


State 129

  624 global_let: kwd_let optional_shared optional_public_or_private_variable . open_block global_variable_declaration_list close_block
  626           | kwd_let optional_shared optional_public_or_private_variable . $@39 optional_field_annotation let_variable_declaration

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 625 ($@39)

    open_block  go to state 170
    $@39        go to state 171


State 130

  105 annotation_argument: annotation_argument_name '=' "true" .

    $default  reduce using rule 105 (annotation_argument)


State 131

  106 annotation_argument: annotation_argument_name '=' "false" .

    $default  reduce using rule 106 (annotation_argument)


State 132

  103 annotation_argument: annotation_argument_name '=' "integer constant" .

    $default  reduce using rule 103 (annotation_argument)


State 133

  104 annotation_argument: annotation_argument_name '=' "floating point constant" .

    $default  reduce using rule 104 (annotation_argument)


State 134

  102 annotation_argument: annotation_argument_name '=' "name" .

    $default  reduce using rule 102 (annotation_argument)


State 135

   27 string_constant: "start of the string" . character_sequence "end of the string"
   28                | "start of the string" . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 174

    character_sequence  go to state 175


State 136

  108 annotation_argument: annotation_argument_name '=' '(' . annotation_argument_value_list ')'

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant                 go to state 181
    annotation_argument_value       go to state 182
    annotation_argument_value_list  go to state 183


State 137

  101 annotation_argument: annotation_argument_name '=' string_constant .

    $default  reduce using rule 101 (annotation_argument)


State 138

  110 annotation_argument_list: annotation_argument_list ',' annotation_argument .

    $default  reduce using rule 110 (annotation_argument_list)


State 139

   59 expect_error: "integer constant" ':' "integer constant" .

    $default  reduce using rule 59 (expect_error)


State 140

   57 expect_list: expect_list ',' expect_error .

    $default  reduce using rule 57 (expect_list)


State 141

   52 require_module: require_module_name "as" "name" . is_public_module

    "public"  shift, and go to state 91

    $default  reduce using rule 53 (is_public_module)

    is_public_module  go to state 184


State 142

   50 require_module_name: require_module_name '/' keyword_or_name .

    $default  reduce using rule 50 (require_module_name)


State 143

   49 require_module_name: require_module_name '.' keyword_or_name .

    $default  reduce using rule 49 (require_module_name)


State 144

  635 single_alias: optional_public_or_private_alias "name" . $@40 '=' type_declaration

    $default  reduce using rule 634 ($@40)

    $@40  go to state 185


State 145

  636 alias_list: single_alias semicolon .

    $default  reduce using rule 636 (alias_list)


State 146

  231 close_block: "close scope" .

    $default  reduce using rule 231 (close_block)


State 147

  230 close_block: "end of code block" .

    $default  reduce using rule 230 (close_block)


State 148

  638 alias_declaration: "typedef" open_block alias_list close_block .

    $default  reduce using rule 638 (alias_declaration)


State 149

  637 alias_list: alias_list single_alias . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 186


State 150

  640 alias_declaration: "typedef" $@41 single_alias semicolon .

    $default  reduce using rule 640 (alias_declaration)


State 151

   18 optional_public_or_private_module: "public" .

    $default  reduce using rule 18 (optional_public_or_private_module)


State 152

   19 optional_public_or_private_module: "private" .

    $default  reduce using rule 19 (optional_public_or_private_module)


State 153

   22 module_declaration: "module" module_name optional_shared optional_public_or_private_module .

    $default  reduce using rule 22 (module_declaration)


State 154

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" . $@86 open_block $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 805 ($@86)

    $@86  go to state 187


State 155

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" . $@78 open_block $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 795 ($@78)

    $@78  go to state 188


State 156

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" . $@82 open_block $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 800 ($@82)

    $@82  go to state 189


State 157

  282 name_in_namespace: "name" "::" "name" .

    $default  reduce using rule 282 (name_in_namespace)


State 158

   38 reader_character_sequence: STRING_CHARACTER .

    $default  reduce using rule 38 (reader_character_sequence)


State 159

   39 reader_character_sequence: reader_character_sequence . STRING_CHARACTER
   41 expr_reader: '%' name_in_namespace $@2 reader_character_sequence .

    STRING_CHARACTER  shift, and go to state 190

    $default  reduce using rule 41 (expr_reader)


State 160

  125 annotation_declaration: '(' annotation_declaration ')' .

    $default  reduce using rule 125 (annotation_declaration)


State 161

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list . ')'

    ','  shift, and go to state 86
    ')'  shift, and go to state 191


State 162

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  122                       | annotation_declaration "&&" annotation_declaration .
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration

    $default  reduce using rule 122 (annotation_declaration)


State 163

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  123                       | annotation_declaration "||" annotation_declaration .
  124                       | annotation_declaration . "^^" annotation_declaration

    "&&"  shift, and go to state 110
    "^^"  shift, and go to state 112

    $default  reduce using rule 123 (annotation_declaration)


State 164

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  124                       | annotation_declaration "^^" annotation_declaration .

    "&&"  shift, and go to state 110

    $default  reduce using rule 124 (annotation_declaration)


State 165

  122 annotation_declaration: annotation_declaration . "&&" annotation_declaration
  123                       | annotation_declaration . "||" annotation_declaration
  124                       | annotation_declaration . "^^" annotation_declaration
  128 annotation_list: annotation_list ',' annotation_declaration .

    "&&"  shift, and go to state 110
    "||"  shift, and go to state 111
    "^^"  shift, and go to state 112

    $default  reduce using rule 128 (annotation_list)


State 166

  227 function_declaration: optional_public_or_private_function $@7 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 222


State 167

  644 enum_name: "name" .

    $default  reduce using rule 644 (enum_name)


State 168

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name . open_block $@42 enum_list $@43 close_block
  650                 | optional_annotation_list "enum" optional_public_or_private_enum enum_name . ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ':'                    shift, and go to state 223

    open_block  go to state 224


State 169

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 . structure_name $@47 optional_struct_variable_declaration_list

    "sealed"  shift, and go to state 225

    $default  reduce using rule 653 (optional_sealed)

    optional_sealed  go to state 226
    structure_name   go to state 227


State 170

  624 global_let: kwd_let optional_shared optional_public_or_private_variable open_block . global_variable_declaration_list close_block

    $default  reduce using rule 616 (global_variable_declaration_list)

    global_variable_declaration_list  go to state 228


State 171

  626 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 232


State 172

   23 character_sequence: STRING_CHARACTER .

    $default  reduce using rule 23 (character_sequence)


State 173

   24 character_sequence: STRING_CHARACTER_ESC .

    $default  reduce using rule 24 (character_sequence)


State 174

   28 string_constant: "start of the string" "end of the string" .

    $default  reduce using rule 28 (string_constant)


State 175

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   27 string_constant: "start of the string" character_sequence . "end of the string"

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234
    "end of the string"   shift, and go to state 235


State 176

   94 annotation_argument_value: "true" .

    $default  reduce using rule 94 (annotation_argument_value)


State 177

   95 annotation_argument_value: "false" .

    $default  reduce using rule 95 (annotation_argument_value)


State 178

   92 annotation_argument_value: "integer constant" .

    $default  reduce using rule 92 (annotation_argument_value)


State 179

   93 annotation_argument_value: "floating point constant" .

    $default  reduce using rule 93 (annotation_argument_value)


State 180

   91 annotation_argument_value: "name" .

    $default  reduce using rule 91 (annotation_argument_value)


State 181

   90 annotation_argument_value: string_constant .

    $default  reduce using rule 90 (annotation_argument_value)


State 182

   96 annotation_argument_value_list: annotation_argument_value .

    $default  reduce using rule 96 (annotation_argument_value_list)


State 183

   97 annotation_argument_value_list: annotation_argument_value_list . ',' annotation_argument_value
  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list . ')'

    ','  shift, and go to state 236
    ')'  shift, and go to state 237


State 184

   52 require_module: require_module_name "as" "name" is_public_module .

    $default  reduce using rule 52 (require_module)


State 185

  635 single_alias: optional_public_or_private_alias "name" $@40 . '=' type_declaration

    '='  shift, and go to state 238


State 186

  637 alias_list: alias_list single_alias semicolon .

    $default  reduce using rule 637 (alias_list)


State 187

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 . open_block $@87 bitfield_alias_bits $@88 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 239


State 188

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 . open_block $@79 tuple_alias_type_list $@80 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 240


State 189

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 . open_block $@83 variant_alias_type_list $@84 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 241


State 190

   39 reader_character_sequence: reader_character_sequence STRING_CHARACTER .

    $default  reduce using rule 39 (reader_character_sequence)


State 191

  119 annotation_declaration_basic: annotation_declaration_name '(' annotation_argument_list ')' .

    $default  reduce using rule 119 (annotation_declaration_basic)


State 192

  137 function_name: "operator" . '!'
  138              | "operator" . '~'
  139              | "operator" . "+="
  140              | "operator" . "-="
  141              | "operator" . "*="
  142              | "operator" . "/="
  143              | "operator" . "%="
  144              | "operator" . "&="
  145              | "operator" . "|="
  146              | "operator" . "^="
  147              | "operator" . "&&="
  148              | "operator" . "||="
  149              | "operator" . "^^="
  150              | "operator" . "&&"
  151              | "operator" . "||"
  152              | "operator" . "^^"
  153              | "operator" . '+'
  154              | "operator" . '-'
  155              | "operator" . '*'
  156              | "operator" . '/'
  157              | "operator" . '%'
  158              | "operator" . '<'
  159              | "operator" . '>'
  160              | "operator" . ".."
  161              | "operator" . "=="
  162              | "operator" . "!="
  163              | "operator" . "<="
  164              | "operator" . ">="
  165              | "operator" . '&'
  166              | "operator" . '|'
  167              | "operator" . '^'
  170              | "operator" . "++"
  171              | "operator" . "--"
  172              | "operator" . "<<"
  173              | "operator" . ">>"
  174              | "operator" . "<<="
  175              | "operator" . ">>="
  176              | "operator" . "<<<"
  177              | "operator" . ">>>"
  178              | "operator" . "<<<="
  179              | "operator" . ">>>="
  180              | "operator" . '[' ']'
  181              | "operator" . "?[" ']'
  182              | "operator" . '.'
  183              | "operator" . "?."
  184              | "operator" . '.' "name"
  185              | "operator" . '.' "name" ":="
  186              | "operator" . "?." "name"
  187              | "operator" . ":="
  188              | "operator" . "delete"
  189              | "operator" . "??"
  190              | "operator" . "is"
  191              | "operator" . "as"
  192              | "operator" . "is" "name"
  193              | "operator" . "as" "name"
  194              | "operator" . '?' "as"
  195              | "operator" . '?' "as" "name"

    "is"      shift, and go to state 242
    "as"      shift, and go to state 243
    "delete"  shift, and go to state 244
    "+="      shift, and go to state 245
    "-="      shift, and go to state 246
    "/="      shift, and go to state 247
    "*="      shift, and go to state 248
    "%="      shift, and go to state 249
    "&="      shift, and go to state 250
    "|="      shift, and go to state 251
    "^="      shift, and go to state 252
    "<<"      shift, and go to state 253
    ">>"      shift, and go to state 254
    "++"      shift, and go to state 255
    "--"      shift, and go to state 256
    "<="      shift, and go to state 257
    "<<="     shift, and go to state 258
    ">>="     shift, and go to state 259
    ">="      shift, and go to state 260
    "=="      shift, and go to state 261
    "!="      shift, and go to state 262
    "??"      shift, and go to state 263
    "?."      shift, and go to state 264
    "?["      shift, and go to state 265
    ":="      shift, and go to state 266
    "<<<"     shift, and go to state 267
    ">>>"     shift, and go to state 268
    "<<<="    shift, and go to state 269
    ">>>="    shift, and go to state 270
    "&&"      shift, and go to state 271
    "||"      shift, and go to state 272
    "^^"      shift, and go to state 273
    "&&="     shift, and go to state 274
    "||="     shift, and go to state 275
    "^^="     shift, and go to state 276
    ".."      shift, and go to state 277
    '?'       shift, and go to state 278
    '|'       shift, and go to state 279
    '^'       shift, and go to state 280
    '&'       shift, and go to state 281
    '<'       shift, and go to state 282
    '>'       shift, and go to state 283
    '-'       shift, and go to state 284
    '+'       shift, and go to state 285
    '*'       shift, and go to state 286
    '/'       shift, and go to state 287
    '%'       shift, and go to state 288
    '~'       shift, and go to state 289
    '!'       shift, and go to state 290
    '.'       shift, and go to state 291
    '['       shift, and go to state 292


State 193

  196 function_name: "bool" .

    $default  reduce using rule 196 (function_name)


State 194

  197 function_name: "string" .

    $default  reduce using rule 197 (function_name)


State 195

  198 function_name: "int" .

    $default  reduce using rule 198 (function_name)


State 196

  199 function_name: "int2" .

    $default  reduce using rule 199 (function_name)


State 197

  200 function_name: "int3" .

    $default  reduce using rule 200 (function_name)


State 198

  201 function_name: "int4" .

    $default  reduce using rule 201 (function_name)


State 199

  202 function_name: "uint" .

    $default  reduce using rule 202 (function_name)


State 200

  203 function_name: "uint2" .

    $default  reduce using rule 203 (function_name)


State 201

  204 function_name: "uint3" .

    $default  reduce using rule 204 (function_name)


State 202

  205 function_name: "uint4" .

    $default  reduce using rule 205 (function_name)


State 203

  206 function_name: "float" .

    $default  reduce using rule 206 (function_name)


State 204

  207 function_name: "float2" .

    $default  reduce using rule 207 (function_name)


State 205

  208 function_name: "float3" .

    $default  reduce using rule 208 (function_name)


State 206

  209 function_name: "float4" .

    $default  reduce using rule 209 (function_name)


State 207

  210 function_name: "range" .

    $default  reduce using rule 210 (function_name)


State 208

  211 function_name: "urange" .

    $default  reduce using rule 211 (function_name)


State 209

  212 function_name: "range64" .

    $default  reduce using rule 212 (function_name)


State 210

  213 function_name: "urange64" .

    $default  reduce using rule 213 (function_name)


State 211

  214 function_name: "int64" .

    $default  reduce using rule 214 (function_name)


State 212

  215 function_name: "uint64" .

    $default  reduce using rule 215 (function_name)


State 213

  216 function_name: "double" .

    $default  reduce using rule 216 (function_name)


State 214

  217 function_name: "int8" .

    $default  reduce using rule 217 (function_name)


State 215

  218 function_name: "uint8" .

    $default  reduce using rule 218 (function_name)


State 216

  219 function_name: "int16" .

    $default  reduce using rule 219 (function_name)


State 217

  220 function_name: "uint16" .

    $default  reduce using rule 220 (function_name)


State 218

  168 function_name: "++" . "operator"

    "operator"  shift, and go to state 293


State 219

  169 function_name: "--" . "operator"

    "operator"  shift, and go to state 294


State 220

  136 function_name: "name" .

    $default  reduce using rule 136 (function_name)


State 221

  225 function_declaration_header: function_name . optional_function_argument_list optional_function_type

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 296


State 222

  227 function_declaration: optional_public_or_private_function $@7 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 298


State 223

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' . enum_basic_type_declaration open_block $@44 enum_list $@45 close_block

    "int"     shift, and go to state 299
    "uint"    shift, and go to state 300
    "int64"   shift, and go to state 301
    "uint64"  shift, and go to state 302
    "int8"    shift, and go to state 303
    "uint8"   shift, and go to state 304
    "int16"   shift, and go to state 305
    "uint16"  shift, and go to state 306

    enum_basic_type_declaration  go to state 307


State 224

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block . $@42 enum_list $@43 close_block

    $default  reduce using rule 645 ($@42)

    $@42  go to state 308


State 225

  654 optional_sealed: "sealed" .

    $default  reduce using rule 654 (optional_sealed)


State 226

  655 structure_name: optional_sealed . "name" optional_structure_parent

    "name"  shift, and go to state 309


State 227

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name . $@47 optional_struct_variable_declaration_list

    $default  reduce using rule 666 ($@47)

    $@47  go to state 310


State 228

  618 global_variable_declaration_list: global_variable_declaration_list . $@38 optional_field_annotation let_variable_declaration
  624 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    $default  reduce using rule 617 ($@38)

    close_block  go to state 311
    $@38         go to state 312


State 229

  549 optional_field_annotation: "[[" . annotation_argument_list ']' ']'

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 38
    annotation_argument_list  go to state 313


State 230

  111 metadata_argument_list: '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 314


State 231

  112 metadata_argument_list: metadata_argument_list . '@' annotation_argument
  113                       | metadata_argument_list . semicolon
  550 optional_field_annotation: metadata_argument_list .

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '@'                  shift, and go to state 315

    $default  reduce using rule 550 (optional_field_annotation)

    semicolon  go to state 316


State 232

  626 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 317
    "name"  shift, and go to state 318

    let_variable_name_with_pos_list  go to state 319
    let_variable_declaration         go to state 320


State 233

   25 character_sequence: character_sequence STRING_CHARACTER .

    $default  reduce using rule 25 (character_sequence)


State 234

   26 character_sequence: character_sequence STRING_CHARACTER_ESC .

    $default  reduce using rule 26 (character_sequence)


State 235

   27 string_constant: "start of the string" character_sequence "end of the string" .

    $default  reduce using rule 27 (string_constant)


State 236

   97 annotation_argument_value_list: annotation_argument_value_list ',' . annotation_argument_value

    "true"                     shift, and go to state 176
    "false"                    shift, and go to state 177
    "integer constant"         shift, and go to state 178
    "floating point constant"  shift, and go to state 179
    "name"                     shift, and go to state 180
    "start of the string"      shift, and go to state 135

    string_constant            go to state 181
    annotation_argument_value  go to state 321


State 237

  108 annotation_argument: annotation_argument_name '=' '(' annotation_argument_value_list ')' .

    $default  reduce using rule 108 (annotation_argument)


State 238

  635 single_alias: optional_public_or_private_alias "name" $@40 '=' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 369


State 239

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block . $@87 bitfield_alias_bits $@88 close_block

    $default  reduce using rule 806 ($@87)

    $@87  go to state 370


State 240

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block . $@79 tuple_alias_type_list $@80 close_block

    $default  reduce using rule 796 ($@79)

    $@79  go to state 371


State 241

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block . $@83 variant_alias_type_list $@84 close_block

    $default  reduce using rule 801 ($@83)

    $@83  go to state 372


State 242

  190 function_name: "operator" "is" .
  192              | "operator" "is" . "name"

    "name"  shift, and go to state 373

    $default  reduce using rule 190 (function_name)


State 243

  191 function_name: "operator" "as" .
  193              | "operator" "as" . "name"

    "name"  shift, and go to state 374

    $default  reduce using rule 191 (function_name)


State 244

  188 function_name: "operator" "delete" .

    $default  reduce using rule 188 (function_name)


State 245

  139 function_name: "operator" "+=" .

    $default  reduce using rule 139 (function_name)


State 246

  140 function_name: "operator" "-=" .

    $default  reduce using rule 140 (function_name)


State 247

  142 function_name: "operator" "/=" .

    $default  reduce using rule 142 (function_name)


State 248

  141 function_name: "operator" "*=" .

    $default  reduce using rule 141 (function_name)


State 249

  143 function_name: "operator" "%=" .

    $default  reduce using rule 143 (function_name)


State 250

  144 function_name: "operator" "&=" .

    $default  reduce using rule 144 (function_name)


State 251

  145 function_name: "operator" "|=" .

    $default  reduce using rule 145 (function_name)


State 252

  146 function_name: "operator" "^=" .

    $default  reduce using rule 146 (function_name)


State 253

  172 function_name: "operator" "<<" .

    $default  reduce using rule 172 (function_name)


State 254

  173 function_name: "operator" ">>" .

    $default  reduce using rule 173 (function_name)


State 255

  170 function_name: "operator" "++" .

    $default  reduce using rule 170 (function_name)


State 256

  171 function_name: "operator" "--" .

    $default  reduce using rule 171 (function_name)


State 257

  163 function_name: "operator" "<=" .

    $default  reduce using rule 163 (function_name)


State 258

  174 function_name: "operator" "<<=" .

    $default  reduce using rule 174 (function_name)


State 259

  175 function_name: "operator" ">>=" .

    $default  reduce using rule 175 (function_name)


State 260

  164 function_name: "operator" ">=" .

    $default  reduce using rule 164 (function_name)


State 261

  161 function_name: "operator" "==" .

    $default  reduce using rule 161 (function_name)


State 262

  162 function_name: "operator" "!=" .

    $default  reduce using rule 162 (function_name)


State 263

  189 function_name: "operator" "??" .

    $default  reduce using rule 189 (function_name)


State 264

  183 function_name: "operator" "?." .
  186              | "operator" "?." . "name"

    "name"  shift, and go to state 375

    $default  reduce using rule 183 (function_name)


State 265

  181 function_name: "operator" "?[" . ']'

    ']'  shift, and go to state 376


State 266

  187 function_name: "operator" ":=" .

    $default  reduce using rule 187 (function_name)


State 267

  176 function_name: "operator" "<<<" .

    $default  reduce using rule 176 (function_name)


State 268

  177 function_name: "operator" ">>>" .

    $default  reduce using rule 177 (function_name)


State 269

  178 function_name: "operator" "<<<=" .

    $default  reduce using rule 178 (function_name)


State 270

  179 function_name: "operator" ">>>=" .

    $default  reduce using rule 179 (function_name)


State 271

  150 function_name: "operator" "&&" .

    $default  reduce using rule 150 (function_name)


State 272

  151 function_name: "operator" "||" .

    $default  reduce using rule 151 (function_name)


State 273

  152 function_name: "operator" "^^" .

    $default  reduce using rule 152 (function_name)


State 274

  147 function_name: "operator" "&&=" .

    $default  reduce using rule 147 (function_name)


State 275

  148 function_name: "operator" "||=" .

    $default  reduce using rule 148 (function_name)


State 276

  149 function_name: "operator" "^^=" .

    $default  reduce using rule 149 (function_name)


State 277

  160 function_name: "operator" ".." .

    $default  reduce using rule 160 (function_name)


State 278

  194 function_name: "operator" '?' . "as"
  195              | "operator" '?' . "as" "name"

    "as"  shift, and go to state 377


State 279

  166 function_name: "operator" '|' .

    $default  reduce using rule 166 (function_name)


State 280

  167 function_name: "operator" '^' .

    $default  reduce using rule 167 (function_name)


State 281

  165 function_name: "operator" '&' .

    $default  reduce using rule 165 (function_name)


State 282

  158 function_name: "operator" '<' .

    $default  reduce using rule 158 (function_name)


State 283

  159 function_name: "operator" '>' .

    $default  reduce using rule 159 (function_name)


State 284

  154 function_name: "operator" '-' .

    $default  reduce using rule 154 (function_name)


State 285

  153 function_name: "operator" '+' .

    $default  reduce using rule 153 (function_name)


State 286

  155 function_name: "operator" '*' .

    $default  reduce using rule 155 (function_name)


State 287

  156 function_name: "operator" '/' .

    $default  reduce using rule 156 (function_name)


State 288

  157 function_name: "operator" '%' .

    $default  reduce using rule 157 (function_name)


State 289

  138 function_name: "operator" '~' .

    $default  reduce using rule 138 (function_name)


State 290

  137 function_name: "operator" '!' .

    $default  reduce using rule 137 (function_name)


State 291

  182 function_name: "operator" '.' .
  184              | "operator" '.' . "name"
  185              | "operator" '.' . "name" ":="

    "name"  shift, and go to state 378

    $default  reduce using rule 182 (function_name)


State 292

  180 function_name: "operator" '[' . ']'

    ']'  shift, and go to state 379


State 293

  168 function_name: "++" "operator" .

    $default  reduce using rule 168 (function_name)


State 294

  169 function_name: "--" "operator" .

    $default  reduce using rule 169 (function_name)


State 295

  132 optional_function_argument_list: '(' . ')'
  133                                | '(' . function_argument_list ')'

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    ')'   shift, and go to state 381
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 382
    function_argument_declaration_no_type  go to state 383
    function_argument_declaration_type     go to state 384
    function_argument_list                 go to state 385


State 296

  225 function_declaration_header: function_name optional_function_argument_list . optional_function_type

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 387


State 297

  232 expression_block: open_block . expressions close_block
  233                 | open_block . expressions close_block "finally" open_block expressions close_block

    $default  reduce using rule 258 (expressions)

    expressions  go to state 388


State 298

  227 function_declaration: optional_public_or_private_function $@7 function_declaration_header expression_block .

    $default  reduce using rule 227 (function_declaration)


State 299

  700 enum_basic_type_declaration: "int" .

    $default  reduce using rule 700 (enum_basic_type_declaration)


State 300

  703 enum_basic_type_declaration: "uint" .

    $default  reduce using rule 703 (enum_basic_type_declaration)


State 301

  706 enum_basic_type_declaration: "int64" .

    $default  reduce using rule 706 (enum_basic_type_declaration)


State 302

  707 enum_basic_type_declaration: "uint64" .

    $default  reduce using rule 707 (enum_basic_type_declaration)


State 303

  701 enum_basic_type_declaration: "int8" .

    $default  reduce using rule 701 (enum_basic_type_declaration)


State 304

  704 enum_basic_type_declaration: "uint8" .

    $default  reduce using rule 704 (enum_basic_type_declaration)


State 305

  702 enum_basic_type_declaration: "int16" .

    $default  reduce using rule 702 (enum_basic_type_declaration)


State 306

  705 enum_basic_type_declaration: "uint16" .

    $default  reduce using rule 705 (enum_basic_type_declaration)


State 307

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration . open_block $@44 enum_list $@45 close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 389


State 308

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 . enum_list $@43 close_block

    $default  reduce using rule 627 (enum_list)

    enum_list  go to state 390


State 309

  655 structure_name: optional_sealed "name" . optional_structure_parent

    ':'  shift, and go to state 391

    $default  reduce using rule 651 (optional_structure_parent)

    optional_structure_parent  go to state 392


State 310

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 . optional_struct_variable_declaration_list

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    $default  reduce using rule 663 (optional_struct_variable_declaration_list)

    open_block                                 go to state 393
    optional_struct_variable_declaration_list  go to state 394


State 311

  624 global_let: kwd_let optional_shared optional_public_or_private_variable open_block global_variable_declaration_list close_block .

    $default  reduce using rule 624 (global_let)


State 312

  618 global_variable_declaration_list: global_variable_declaration_list $@38 . optional_field_annotation let_variable_declaration

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list     go to state 231
    optional_field_annotation  go to state 395


State 313

  110 annotation_argument_list: annotation_argument_list . ',' annotation_argument
  549 optional_field_annotation: "[[" annotation_argument_list . ']' ']'

    ','  shift, and go to state 86
    ']'  shift, and go to state 396


State 314

  111 metadata_argument_list: '@' annotation_argument .

    $default  reduce using rule 111 (metadata_argument_list)


State 315

  112 metadata_argument_list: metadata_argument_list '@' . annotation_argument

    "type"  shift, and go to state 34
    "in"    shift, and go to state 35
    "name"  shift, and go to state 36

    annotation_argument_name  go to state 37
    annotation_argument       go to state 397


State 316

  113 metadata_argument_list: metadata_argument_list semicolon .

    $default  reduce using rule 113 (metadata_argument_list)


State 317

  607 let_variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 398


State 318

  606 let_variable_name_with_pos_list: "name" .
  608                                | "name" . "aka" "name"

    "aka"  shift, and go to state 399

    $default  reduce using rule 606 (let_variable_name_with_pos_list)


State 319

  609 let_variable_name_with_pos_list: let_variable_name_with_pos_list . ',' "name"
  610                                | let_variable_name_with_pos_list . ',' "name" "aka" "name"
  611 let_variable_declaration: let_variable_name_with_pos_list . ':' type_declaration_no_options semicolon
  612                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  613                         | let_variable_name_with_pos_list . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  614                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list . optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 400
    ':'  shift, and go to state 401
    '&'  shift, and go to state 402

    $default  reduce using rule 604 (optional_ref)

    optional_ref  go to state 403


State 320

  626 global_let: kwd_let optional_shared optional_public_or_private_variable $@39 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 626 (global_let)


State 321

   97 annotation_argument_value_list: annotation_argument_value_list ',' annotation_argument_value .

    $default  reduce using rule 97 (annotation_argument_value_list)


State 322

  734 type_declaration_no_options: "type" . '<' $@50 type_declaration '>' $@51

    '<'  shift, and go to state 404


State 323

  757 type_declaration_no_options: "array" . '<' $@55 type_declaration '>' $@56

    '<'  shift, and go to state 405


State 324

  760 type_declaration_no_options: "table" . '<' $@57 table_type_pair '>' $@58

    '<'  shift, and go to state 406


State 325

  735 type_declaration_no_options: "typedecl" . '(' expr ')'

    '('  shift, and go to state 407


State 326

  763 type_declaration_no_options: "iterator" . '<' $@59 type_declaration '>' $@60

    '<'  shift, and go to state 408


State 327

  753 type_declaration_no_options: "smart_ptr" . '<' $@53 type_declaration '>' $@54

    '<'  shift, and go to state 409


State 328

  673 basic_type_declaration: "bool" .

    $default  reduce using rule 673 (basic_type_declaration)


State 329

  693 basic_type_declaration: "void" .

    $default  reduce using rule 693 (basic_type_declaration)


State 330

  674 basic_type_declaration: "string" .

    $default  reduce using rule 674 (basic_type_declaration)


State 331

  709 auto_type_declaration: "auto" .
  710                      | "auto" . '(' "name" ')'

    '('  shift, and go to state 410

    '('       [reduce using rule 709 (auto_type_declaration)]
    $default  reduce using rule 709 (auto_type_declaration)


State 332

  675 basic_type_declaration: "int" .

    $default  reduce using rule 675 (basic_type_declaration)


State 333

  679 basic_type_declaration: "int2" .

    $default  reduce using rule 679 (basic_type_declaration)


State 334

  680 basic_type_declaration: "int3" .

    $default  reduce using rule 680 (basic_type_declaration)


State 335

  681 basic_type_declaration: "int4" .

    $default  reduce using rule 681 (basic_type_declaration)


State 336

  682 basic_type_declaration: "uint" .

    $default  reduce using rule 682 (basic_type_declaration)


State 337

  699 basic_type_declaration: "bitfield" .
  719 bitfield_type_declaration: "bitfield" . '<' $@48 bitfield_bits '>' $@49

    '<'  shift, and go to state 411

    $default  reduce using rule 699 (basic_type_declaration)


State 338

  686 basic_type_declaration: "uint2" .

    $default  reduce using rule 686 (basic_type_declaration)


State 339

  687 basic_type_declaration: "uint3" .

    $default  reduce using rule 687 (basic_type_declaration)


State 340

  688 basic_type_declaration: "uint4" .

    $default  reduce using rule 688 (basic_type_declaration)


State 341

  689 basic_type_declaration: "float" .

    $default  reduce using rule 689 (basic_type_declaration)


State 342

  690 basic_type_declaration: "float2" .

    $default  reduce using rule 690 (basic_type_declaration)


State 343

  691 basic_type_declaration: "float3" .

    $default  reduce using rule 691 (basic_type_declaration)


State 344

  692 basic_type_declaration: "float4" .

    $default  reduce using rule 692 (basic_type_declaration)


State 345

  694 basic_type_declaration: "range" .

    $default  reduce using rule 694 (basic_type_declaration)


State 346

  695 basic_type_declaration: "urange" .

    $default  reduce using rule 695 (basic_type_declaration)


State 347

  696 basic_type_declaration: "range64" .

    $default  reduce using rule 696 (basic_type_declaration)


State 348

  697 basic_type_declaration: "urange64" .

    $default  reduce using rule 697 (basic_type_declaration)


State 349

  764 type_declaration_no_options: "block" .
  767                            | "block" . '<' $@61 type_declaration '>' $@62
  770                            | "block" . '<' $@63 optional_function_argument_list optional_function_type '>' $@64

    '<'  shift, and go to state 412

    $default  reduce using rule 764 (type_declaration_no_options)


State 350

  678 basic_type_declaration: "int64" .

    $default  reduce using rule 678 (basic_type_declaration)


State 351

  685 basic_type_declaration: "uint64" .

    $default  reduce using rule 685 (basic_type_declaration)


State 352

  698 basic_type_declaration: "double" .

    $default  reduce using rule 698 (basic_type_declaration)


State 353

  771 type_declaration_no_options: "function" .
  774                            | "function" . '<' $@65 type_declaration '>' $@66
  777                            | "function" . '<' $@67 optional_function_argument_list optional_function_type '>' $@68

    '<'  shift, and go to state 413

    $default  reduce using rule 771 (type_declaration_no_options)


State 354

  778 type_declaration_no_options: "lambda" .
  781                            | "lambda" . '<' $@69 type_declaration '>' $@70
  784                            | "lambda" . '<' $@71 optional_function_argument_list optional_function_type '>' $@72

    '<'  shift, and go to state 414

    $default  reduce using rule 778 (type_declaration_no_options)


State 355

  676 basic_type_declaration: "int8" .

    $default  reduce using rule 676 (basic_type_declaration)


State 356

  683 basic_type_declaration: "uint8" .

    $default  reduce using rule 683 (basic_type_declaration)


State 357

  677 basic_type_declaration: "int16" .

    $default  reduce using rule 677 (basic_type_declaration)


State 358

  684 basic_type_declaration: "uint16" .

    $default  reduce using rule 684 (basic_type_declaration)


State 359

  787 type_declaration_no_options: "tuple" . '<' $@73 tuple_type_list '>' $@74

    '<'  shift, and go to state 415


State 360

  790 type_declaration_no_options: "variant" . '<' $@75 variant_type_list '>' $@76

    '<'  shift, and go to state 416


State 361

  711 auto_type_declaration: "$t" . '(' expr ')'

    '('  shift, and go to state 417


State 362

  736 type_declaration_no_options: '$' . name_in_namespace '(' optional_expr_list ')'
  738                            | '$' . name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 418


State 363

  708 structure_type_declaration: name_in_namespace .

    $default  reduce using rule 708 (structure_type_declaration)


State 364

  726 type_declaration_no_options: basic_type_declaration .

    $default  reduce using rule 726 (type_declaration_no_options)


State 365

  729 type_declaration_no_options: structure_type_declaration .

    $default  reduce using rule 729 (type_declaration_no_options)


State 366

  727 type_declaration_no_options: auto_type_declaration .

    $default  reduce using rule 727 (type_declaration_no_options)


State 367

  728 type_declaration_no_options: bitfield_type_declaration .

    $default  reduce using rule 728 (type_declaration_no_options)


State 368

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  791 type_declaration: type_declaration_no_options .

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    $default  reduce using rule 791 (type_declaration)

    dim_list  go to state 429


State 369

  635 single_alias: optional_public_or_private_alias "name" $@40 '=' type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 635 (single_alias)


State 370

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 . bitfield_alias_bits $@88 close_block

    $default  reduce using rule 714 (bitfield_alias_bits)

    bitfield_alias_bits  go to state 431


State 371

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 . tuple_alias_type_list $@80 close_block

    $default  reduce using rule 583 (tuple_alias_type_list)

    tuple_alias_type_list  go to state 432


State 372

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 . variant_alias_type_list $@84 close_block

    $default  reduce using rule 589 (variant_alias_type_list)

    variant_alias_type_list  go to state 433


State 373

  192 function_name: "operator" "is" "name" .

    $default  reduce using rule 192 (function_name)


State 374

  193 function_name: "operator" "as" "name" .

    $default  reduce using rule 193 (function_name)


State 375

  186 function_name: "operator" "?." "name" .

    $default  reduce using rule 186 (function_name)


State 376

  181 function_name: "operator" "?[" ']' .

    $default  reduce using rule 181 (function_name)


State 377

  194 function_name: "operator" '?' "as" .
  195              | "operator" '?' "as" . "name"

    "name"  shift, and go to state 434

    $default  reduce using rule 194 (function_name)


State 378

  184 function_name: "operator" '.' "name" .
  185              | "operator" '.' "name" . ":="

    ":="  shift, and go to state 435

    $default  reduce using rule 184 (function_name)


State 379

  180 function_name: "operator" '[' ']' .

    $default  reduce using rule 180 (function_name)


State 380

  573 function_argument_declaration_type: "$a" . '(' expr ')'

    '('  shift, and go to state 436


State 381

  132 optional_function_argument_list: '(' ')' .

    $default  reduce using rule 132 (optional_function_argument_list)


State 382

  571 function_argument_declaration_no_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_no_type
  572 function_argument_declaration_type: optional_field_annotation . kwd_let_var_or_nothing variable_declaration_type

    "let"  shift, and go to state 437
    "var"  shift, and go to state 438

    $default  reduce using rule 312 (kwd_let_var_or_nothing)

    kwd_let_var_or_nothing  go to state 439


State 383

  574 function_argument_list: function_argument_declaration_no_type .
  576                       | function_argument_declaration_no_type . semicolon function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 574 (function_argument_list)

    semicolon  go to state 440


State 384

  575 function_argument_list: function_argument_declaration_type .
  577                       | function_argument_declaration_type . semicolon function_argument_list
  578                       | function_argument_declaration_type . ',' function_argument_list

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 441

    $default  reduce using rule 575 (function_argument_list)

    semicolon  go to state 442


State 385

  133 optional_function_argument_list: '(' function_argument_list . ')'

    ')'  shift, and go to state 443


State 386

  135 optional_function_type: ':' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 444


State 387

  225 function_declaration_header: function_name optional_function_argument_list optional_function_type .

    $default  reduce using rule 225 (function_declaration_header)


State 388

  232 expression_block: open_block expressions . close_block
  233                 | open_block expressions . close_block "finally" open_block expressions close_block
  259 expressions: expressions . expression_any
  260            | expressions . error

    error                             shift, and go to state 445
    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 448
    "if"                              shift, and go to state 449
    "static_if"                       shift, and go to state 450
    "for"                             shift, and go to state 451
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "return"                          shift, and go to state 458
    "null"                            shift, and go to state 459
    "break"                           shift, and go to state 460
    "try"                             shift, and go to state 461
    "table"                           shift, and go to state 462
    "delete"                          shift, and go to state 463
    "deref"                           shift, and go to state 464
    "with"                            shift, and go to state 465
    "assume"                          shift, and go to state 466
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 469
    "continue"                        shift, and go to state 470
    "pass"                            shift, and go to state 471
    "reinterpret"                     shift, and go to state 472
    "label"                           shift, and go to state 473
    "goto"                            shift, and go to state 474
    "unsafe"                          shift, and go to state 475
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "yield"                           shift, and go to state 482
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 505
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder             go to state 518
    expr_reader                go to state 519
    expression_label           go to state 520
    expression_goto            go to state 521
    semicolon                  go to state 522
    if_or_static_if            go to state 523
    expression_if_one_liner    go to state 524
    expression_if_then_else    go to state 525
    expression_for_loop        go to state 526
    expression_unsafe          go to state 527
    expression_while_loop      go to state 528
    expression_with            go to state 529
    expression_with_alias      go to state 530
    close_block                go to state 531
    expr_call_pipe             go to state 532
    expression_any             go to state 533
    expr_keyword               go to state 534
    expression_keyword         go to state 535
    expr_pipe                  go to state 536
    name_in_namespace          go to state 537
    expression_delete          go to state 538
    expr_new                   go to state 539
    expression_break           go to state 540
    expression_continue        go to state 541
    expression_return_no_pipe  go to state 542
    expression_return          go to state 543
    expression_yield_no_pipe   go to state 544
    expression_yield           go to state 545
    expression_try_catch       go to state 546
    kwd_let                    go to state 547
    expression_let             go to state 548
    expr_cast                  go to state 549
    expr_type_decl             go to state 550
    expr_type_info             go to state 551
    block_or_lambda            go to state 552
    expr_full_block            go to state 553
    expr_numeric_const         go to state 554
    expr_assign                go to state 555
    expr_assign_pipe           go to state 556
    expr_named_call            go to state 557
    expr_method_call           go to state 558
    func_addr_expr             go to state 559
    expr_field                 go to state 560
    expr_call                  go to state 561
    expr                       go to state 562
    expr_mtag                  go to state 563
    basic_type_declaration     go to state 564
    make_decl                  go to state 565
    make_struct_decl           go to state 566
    make_tuple_call            go to state 567
    make_dim_decl              go to state 568
    make_table_decl            go to state 569
    array_comprehension        go to state 570


State 389

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block . $@44 enum_list $@45 close_block

    $default  reduce using rule 648 ($@44)

    $@44  go to state 571


State 390

  628 enum_list: enum_list . semicolon
  629          | enum_list . "name" semicolon
  630          | enum_list . "name" '=' expr semicolon
  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list . $@43 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 572
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 646 ($@43)

    semicolon  go to state 573
    $@43       go to state 574


State 391

  652 optional_structure_parent: ':' . name_in_namespace

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 575


State 392

  655 structure_name: optional_sealed "name" optional_structure_parent .

    $default  reduce using rule 655 (structure_name)


State 393

  664 optional_struct_variable_declaration_list: open_block . struct_variable_declaration_list close_block

    $default  reduce using rule 562 (struct_variable_declaration_list)

    struct_variable_declaration_list  go to state 576


State 394

  667 structure_declaration: optional_annotation_list class_or_struct optional_public_or_private_structure $@46 structure_name $@47 optional_struct_variable_declaration_list .

    $default  reduce using rule 667 (structure_declaration)


State 395

  618 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation . let_variable_declaration

    "$i"    shift, and go to state 317
    "name"  shift, and go to state 318

    let_variable_name_with_pos_list  go to state 319
    let_variable_declaration         go to state 577


State 396

  549 optional_field_annotation: "[[" annotation_argument_list ']' . ']'

    ']'  shift, and go to state 578


State 397

  112 metadata_argument_list: metadata_argument_list '@' annotation_argument .

    $default  reduce using rule 112 (metadata_argument_list)


State 398

  607 let_variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 583
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 399

  608 let_variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 584


State 400

  609 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' . "name"
  610                                | let_variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 585


State 401

  611 let_variable_declaration: let_variable_name_with_pos_list ':' . type_declaration_no_options semicolon
  612                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  613                         | let_variable_name_with_pos_list ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 586


State 402

  605 optional_ref: '&' .

    $default  reduce using rule 605 (optional_ref)


State 403

  614 let_variable_declaration: let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr semicolon
  615                         | let_variable_name_with_pos_list optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 587
    ":="  shift, and go to state 588
    '='   shift, and go to state 589

    copy_or_move_or_clone  go to state 590


State 404

  734 type_declaration_no_options: "type" '<' . $@50 type_declaration '>' $@51

    $default  reduce using rule 732 ($@50)

    $@50  go to state 591


State 405

  757 type_declaration_no_options: "array" '<' . $@55 type_declaration '>' $@56

    $default  reduce using rule 755 ($@55)

    $@55  go to state 592


State 406

  760 type_declaration_no_options: "table" '<' . $@57 table_type_pair '>' $@58

    $default  reduce using rule 758 ($@57)

    $@57  go to state 593


State 407

  735 type_declaration_no_options: "typedecl" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 594
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 408

  763 type_declaration_no_options: "iterator" '<' . $@59 type_declaration '>' $@60

    $default  reduce using rule 761 ($@59)

    $@59  go to state 595


State 409

  753 type_declaration_no_options: "smart_ptr" '<' . $@53 type_declaration '>' $@54

    $default  reduce using rule 751 ($@53)

    $@53  go to state 596


State 410

  710 auto_type_declaration: "auto" '(' . "name" ')'

    "name"  shift, and go to state 597


State 411

  719 bitfield_type_declaration: "bitfield" '<' . $@48 bitfield_bits '>' $@49

    $default  reduce using rule 717 ($@48)

    $@48  go to state 598


State 412

  767 type_declaration_no_options: "block" '<' . $@61 type_declaration '>' $@62
  770                            | "block" '<' . $@63 optional_function_argument_list optional_function_type '>' $@64

    ':'       reduce using rule 768 ($@63)
    '>'       reduce using rule 768 ($@63)
    '('       reduce using rule 768 ($@63)
    $default  reduce using rule 765 ($@61)

    $@61  go to state 599
    $@63  go to state 600


State 413

  774 type_declaration_no_options: "function" '<' . $@65 type_declaration '>' $@66
  777                            | "function" '<' . $@67 optional_function_argument_list optional_function_type '>' $@68

    ':'       reduce using rule 775 ($@67)
    '>'       reduce using rule 775 ($@67)
    '('       reduce using rule 775 ($@67)
    $default  reduce using rule 772 ($@65)

    $@65  go to state 601
    $@67  go to state 602


State 414

  781 type_declaration_no_options: "lambda" '<' . $@69 type_declaration '>' $@70
  784                            | "lambda" '<' . $@71 optional_function_argument_list optional_function_type '>' $@72

    ':'       reduce using rule 782 ($@71)
    '>'       reduce using rule 782 ($@71)
    '('       reduce using rule 782 ($@71)
    $default  reduce using rule 779 ($@69)

    $@69  go to state 603
    $@71  go to state 604


State 415

  787 type_declaration_no_options: "tuple" '<' . $@73 tuple_type_list '>' $@74

    $default  reduce using rule 785 ($@73)

    $@73  go to state 605


State 416

  790 type_declaration_no_options: "variant" '<' . $@75 variant_type_list '>' $@76

    $default  reduce using rule 788 ($@75)

    $@75  go to state 606


State 417

  711 auto_type_declaration: "$t" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 607
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 418

  736 type_declaration_no_options: '$' name_in_namespace . '(' optional_expr_list ')'
  738                            | '$' name_in_namespace . '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    '<'  shift, and go to state 608
    '('  shift, and go to state 609


State 419

  741 type_declaration_no_options: type_declaration_no_options "const" .

    $default  reduce using rule 741 (type_declaration_no_options)


State 420

  746 type_declaration_no_options: type_declaration_no_options "implicit" .

    $default  reduce using rule 746 (type_declaration_no_options)


State 421

  740 type_declaration_no_options: type_declaration_no_options "explicit" .

    $default  reduce using rule 740 (type_declaration_no_options)


State 422

  748 type_declaration_no_options: type_declaration_no_options "==" . "const"
  749                            | type_declaration_no_options "==" . '&'

    "const"  shift, and go to state 610
    '&'      shift, and go to state 611


State 423

  754 type_declaration_no_options: type_declaration_no_options "??" .

    $default  reduce using rule 754 (type_declaration_no_options)


State 424

  750 type_declaration_no_options: type_declaration_no_options '?' .

    $default  reduce using rule 750 (type_declaration_no_options)


State 425

  743 type_declaration_no_options: type_declaration_no_options '&' .

    $default  reduce using rule 743 (type_declaration_no_options)


State 426

  739 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  742                            | type_declaration_no_options '-' . "const"
  744                            | type_declaration_no_options '-' . '&'
  747                            | type_declaration_no_options '-' . '#'

    "const"  shift, and go to state 612
    '&'      shift, and go to state 613
    '['      shift, and go to state 614
    '#'      shift, and go to state 615


State 427

  724 dim_list: '[' . expr ']'
  731 type_declaration_no_options: type_declaration_no_options '[' . ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    ']'                               shift, and go to state 616
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 617
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 428

  745 type_declaration_no_options: type_declaration_no_options '#' .

    $default  reduce using rule 745 (type_declaration_no_options)


State 429

  725 dim_list: dim_list . '[' expr ']'
  730 type_declaration_no_options: type_declaration_no_options dim_list .

    '['  shift, and go to state 618

    '['       [reduce using rule 730 (type_declaration_no_options)]
    $default  reduce using rule 730 (type_declaration_no_options)


State 430

  792 type_declaration: type_declaration '|' . type_declaration_no_options
  793                 | type_declaration '|' . '#'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362
    '#'          shift, and go to state 619

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 620


State 431

  715 bitfield_alias_bits: bitfield_alias_bits . semicolon
  716                    | bitfield_alias_bits . "name" semicolon
  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits . $@88 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 621
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 807 ($@88)

    semicolon  go to state 622
    $@88       go to state 623


State 432

  584 tuple_alias_type_list: tuple_alias_type_list . c_or_s
  585                      | tuple_alias_type_list . tuple_type c_or_s
  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list . $@80 close_block

    "type"               shift, and go to state 322
    "array"              shift, and go to state 323
    "table"              shift, and go to state 324
    "typedecl"           shift, and go to state 325
    "iterator"           shift, and go to state 326
    "smart_ptr"          shift, and go to state 327
    "bool"               shift, and go to state 328
    "void"               shift, and go to state 329
    "string"             shift, and go to state 330
    "auto"               shift, and go to state 331
    "int"                shift, and go to state 332
    "int2"               shift, and go to state 333
    "int3"               shift, and go to state 334
    "int4"               shift, and go to state 335
    "uint"               shift, and go to state 336
    "bitfield"           shift, and go to state 337
    "uint2"              shift, and go to state 338
    "uint3"              shift, and go to state 339
    "uint4"              shift, and go to state 340
    "float"              shift, and go to state 341
    "float2"             shift, and go to state 342
    "float3"             shift, and go to state 343
    "float4"             shift, and go to state 344
    "range"              shift, and go to state 345
    "urange"             shift, and go to state 346
    "range64"            shift, and go to state 347
    "urange64"           shift, and go to state 348
    "block"              shift, and go to state 349
    "int64"              shift, and go to state 350
    "uint64"             shift, and go to state 351
    "double"             shift, and go to state 352
    "function"           shift, and go to state 353
    "lambda"             shift, and go to state 354
    "int8"               shift, and go to state 355
    "uint8"              shift, and go to state 356
    "int16"              shift, and go to state 357
    "uint16"             shift, and go to state 358
    "tuple"              shift, and go to state 359
    "variant"            shift, and go to state 360
    "::"                 shift, and go to state 62
    "$t"                 shift, and go to state 361
    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 624
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '$'                  shift, and go to state 362

    $default  reduce using rule 797 ($@80)

    semicolon                    go to state 626
    name_in_namespace            go to state 363
    tuple_type                   go to state 627
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    c_or_s                       go to state 628
    type_declaration_no_options  go to state 368
    type_declaration             go to state 629
    $@80                         go to state 630


State 433

  590 variant_alias_type_list: variant_alias_type_list . c_or_s
  591                        | variant_alias_type_list . variant_type c_or_s
  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list . $@84 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 631
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625

    $default  reduce using rule 802 ($@84)

    semicolon     go to state 626
    variant_type  go to state 632
    c_or_s        go to state 633
    $@84          go to state 634


State 434

  195 function_name: "operator" '?' "as" "name" .

    $default  reduce using rule 195 (function_name)


State 435

  185 function_name: "operator" '.' "name" ":=" .

    $default  reduce using rule 185 (function_name)


State 436

  573 function_argument_declaration_type: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 635
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 437

  310 kwd_let_var_or_nothing: "let" .

    $default  reduce using rule 310 (kwd_let_var_or_nothing)


State 438

  311 kwd_let_var_or_nothing: "var" .

    $default  reduce using rule 311 (kwd_let_var_or_nothing)


State 439

  571 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_no_type
  572 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing . variable_declaration_type

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_declaration_no_type  go to state 638
    variable_declaration_type     go to state 639
    variable_name_with_pos_list   go to state 640


State 440

  576 function_argument_list: function_argument_declaration_no_type semicolon . function_argument_list

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 382
    function_argument_declaration_no_type  go to state 383
    function_argument_declaration_type     go to state 384
    function_argument_list                 go to state 641


State 441

  578 function_argument_list: function_argument_declaration_type ',' . function_argument_list

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 382
    function_argument_declaration_no_type  go to state 383
    function_argument_declaration_type     go to state 384
    function_argument_list                 go to state 642


State 442

  577 function_argument_list: function_argument_declaration_type semicolon . function_argument_list

    "$a"  shift, and go to state 380
    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list                 go to state 231
    optional_field_annotation              go to state 382
    function_argument_declaration_no_type  go to state 383
    function_argument_declaration_type     go to state 384
    function_argument_list                 go to state 643


State 443

  133 optional_function_argument_list: '(' function_argument_list ')' .

    $default  reduce using rule 133 (optional_function_argument_list)


State 444

  135 optional_function_type: ':' type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 135 (optional_function_type)


State 445

  260 expressions: expressions error .

    $default  reduce using rule 260 (expressions)


State 446

  857 make_struct_decl: "struct" . '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 644


State 447

  860 make_struct_decl: "class" . '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 645


State 448

   86 expression_while_loop: "while" . expr expression_block

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 646
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 449

   70 if_or_static_if: "if" .

    $default  reduce using rule 70 (if_or_static_if)


State 450

   71 if_or_static_if: "static_if" .

    $default  reduce using rule 71 (if_or_static_if)


State 451

   84 expression_for_loop: "for" . $@5 variable_name_with_pos_list "in" expr_list expression_block

    $default  reduce using rule 83 ($@5)

    $@5  go to state 647


State 452

  453 expr: "true" .

    $default  reduce using rule 453 (expr)


State 453

  454 expr: "false" .

    $default  reduce using rule 454 (expr)


State 454

  290 expr_new: "new" . new_type_declaration
  291         | "new" . new_type_declaration '(' use_initializer ')'
  292         | "new" . new_type_declaration '(' expr_list ')'
  293         | "new" . new_type_declaration '(' make_struct_single ')'
  294         | "new" . new_type_declaration '(' "uninitialized" make_struct_single ')'
  295         | "new" . make_decl

    "struct"               shift, and go to state 446
    "class"                shift, and go to state 447
    "array"                shift, and go to state 457
    "table"                shift, and go to state 462
    "fixed_array"          shift, and go to state 476
    "default"              shift, and go to state 477
    "tuple"                shift, and go to state 479
    "variant"              shift, and go to state 480
    "::"                   shift, and go to state 62
    "[["                   shift, and go to state 495
    "[{"                   shift, and go to state 496
    "{{"                   shift, and go to state 497
    "name"                 shift, and go to state 63
    "begin of code block"  shift, and go to state 508
    '<'                    shift, and go to state 648
    '['                    shift, and go to state 514

    name_in_namespace           go to state 363
    new_type_declaration        go to state 649
    structure_type_declaration  go to state 650
    make_decl                   go to state 651
    make_struct_decl            go to state 566
    make_tuple_call             go to state 567
    make_dim_decl               go to state 568
    make_table_decl             go to state 569
    array_comprehension         go to state 570


State 455

  341 expr_type_info: "typeinfo" . '(' name_in_namespace expr ')'
  342               | "typeinfo" . '(' name_in_namespace '<' "name" '>' expr ')'
  343               | "typeinfo" . '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')'
  344               | "typeinfo" . name_in_namespace '(' expr ')'
  345               | "typeinfo" . name_in_namespace '<' "name" '>' '(' expr ')'
  346               | "typeinfo" . name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63
    '('     shift, and go to state 652

    name_in_namespace  go to state 653


State 456

  340 expr_type_decl: "type" . '<' $@20 type_declaration '>' $@21

    '<'  shift, and go to state 654


State 457

  883 make_dim_decl: "array" . "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'
  886              | "array" . "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'
  889              | "array" . "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'
  890              | "array" . '(' expr_list optional_comma ')'
  893              | "array" . '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "struct"   shift, and go to state 655
    "tuple"    shift, and go to state 656
    "variant"  shift, and go to state 657
    '<'        shift, and go to state 658
    '('        shift, and go to state 659


State 458

  298 expression_return_no_pipe: "return" .
  299                          | "return" . expr_list
  300                          | "return" . "<-" expr_list
  302 expression_return: "return" . expr_pipe
  303                  | "return" . "<-" expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "<-"                              shift, and go to state 660
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 298 (expression_return_no_pipe)

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 661
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 662
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 664
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 459

  447 expr: "null" .

    $default  reduce using rule 447 (expr)


State 460

  296 expression_break: "break" .

    $default  reduce using rule 296 (expression_break)


State 461

  309 expression_try_catch: "try" . expression_block "recover" expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 665


State 462

  904 make_table_decl: "table" . '(' optional_expr_map_tuple_list ')'
  905                | "table" . '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  906                | "table" . '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    '<'  shift, and go to state 666
    '('  shift, and go to state 667


State 463

  284 expression_delete: "delete" . expr
  285                  | "delete" . "explicit" expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "explicit"                        shift, and go to state 668
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 669
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 464

  498 expr: "deref" . '(' expr ')'

    '('  shift, and go to state 670


State 465

   87 expression_with: "with" . expr expression_block

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 671
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 466

   89 expression_with_alias: "assume" . "name" '=' $@6 expr

    "name"  shift, and go to state 672


State 467

  331 expr_cast: "cast" . '<' $@14 type_declaration_no_options '>' $@15 expr

    '<'  shift, and go to state 673


State 468

  334 expr_cast: "upcast" . '<' $@16 type_declaration_no_options '>' $@17 expr

    '<'  shift, and go to state 674


State 469

  499 expr: "addr" . '(' expr ')'

    '('  shift, and go to state 675


State 470

  297 expression_continue: "continue" .

    $default  reduce using rule 297 (expression_continue)


State 471

  257 expression_any: "pass" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 676


State 472

  337 expr_cast: "reinterpret" . '<' $@18 type_declaration_no_options '>' $@19 expr

    '<'  shift, and go to state 677


State 473

   60 expression_label: "label" . "integer constant" ':'

    "integer constant"  shift, and go to state 678


State 474

   61 expression_goto: "goto" . "label" "integer constant"
   62                | "goto" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "label"                           shift, and go to state 679
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 680
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 475

   85 expression_unsafe: "unsafe" . expression_block
  530 expr: "unsafe" . '(' expr ')'

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '('                    shift, and go to state 681

    open_block        go to state 297
    expression_block  go to state 682


State 476

  894 make_dim_decl: "fixed_array" . '(' expr_list optional_comma ')'
  897              | "fixed_array" . '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    '<'  shift, and go to state 683
    '('  shift, and go to state 684


State 477

  866 make_struct_decl: "default" . '<' $@95 type_declaration_no_options '>' $@96 use_initializer

    '<'  shift, and go to state 685


State 478

  699 basic_type_declaration: "bitfield" .

    $default  reduce using rule 699 (basic_type_declaration)


State 479

  872 make_tuple_call: "tuple" . '(' expr_list optional_comma ')'
  875                | "tuple" . '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 686
    '('  shift, and go to state 687


State 480

  863 make_struct_decl: "variant" . '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    '<'  shift, and go to state 688


State 481

  236 expr_call_pipe: "generator" . '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  500 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  501     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 689


State 482

  304 expression_yield_no_pipe: "yield" . expr
  305                         | "yield" . "<-" expr
  307 expression_yield: "yield" . expr_pipe
  308                 | "yield" . "<-" expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "<-"                              shift, and go to state 690
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 691
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 692
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 483

  483 expr: "++" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 693
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 484

  484 expr: "--" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 694
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 485

  279 expr_pipe: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 698


State 486

  277 expr_pipe: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 699


State 487

  278 expr_pipe: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 700


State 488

  532 expr_mtag: "$$" . '(' expr ')'

    '('  shift, and go to state 701


State 489

  533 expr_mtag: "$i" . '(' expr ')'

    '('  shift, and go to state 702


State 490

  534 expr_mtag: "$v" . '(' expr ')'

    '('  shift, and go to state 703


State 491

  535 expr_mtag: "$b" . '(' expr ')'

    '('  shift, and go to state 704


State 492

  536 expr_mtag: "$a" . '(' expr ')'

    '('  shift, and go to state 705


State 493

  538 expr_mtag: "$c" . '(' expr ')' '(' ')'
  539          | "$c" . '(' expr ')' '(' expr_list ')'

    '('  shift, and go to state 706


State 494

  537 expr_mtag: "..." .

    $default  reduce using rule 537 (expr_mtag)


State 495

  849 make_struct_decl: "[[" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  850                 | "[[" . type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr
  851                 | "[[" . type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr
  852                 | "[[" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  879 make_dim_decl: "[[" . type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr
  913 array_comprehension: "[[" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "for"        shift, and go to state 707
    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 708


State 496

  853 make_struct_decl: "[{" . type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr
  854                 | "[{" . type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  880 make_dim_decl: "[{" . type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr
  914 array_comprehension: "[{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "for"        shift, and go to state 709
    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 710


State 497

  903 make_table_decl: "{{" . make_table optional_trailing_semicolon_cur_cur
  916 array_comprehension: "{{" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 711
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 712
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_map_tuple          go to state 713
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table              go to state 714
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 498

  370 expr_numeric_const: "integer constant" .

    $default  reduce using rule 370 (expr_numeric_const)


State 499

  372 expr_numeric_const: "long integer constant" .

    $default  reduce using rule 372 (expr_numeric_const)


State 500

  371 expr_numeric_const: "unsigned integer constant" .

    $default  reduce using rule 371 (expr_numeric_const)


State 501

  373 expr_numeric_const: "unsigned long integer constant" .

    $default  reduce using rule 373 (expr_numeric_const)


State 502

  374 expr_numeric_const: "unsigned int8 constant" .

    $default  reduce using rule 374 (expr_numeric_const)


State 503

  375 expr_numeric_const: "floating point constant" .

    $default  reduce using rule 375 (expr_numeric_const)


State 504

  376 expr_numeric_const: "double constant" .

    $default  reduce using rule 376 (expr_numeric_const)


State 505

  261 expr_keyword: "keyword" . expr expression_block
  272 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '<'                               shift, and go to state 715
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 716
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 506

  275 expression_keyword: "type function" . '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    '<'  shift, and go to state 717


State 507

   37 string_builder: "start of the string" . string_builder_body "end of the string"

    $default  reduce using rule 34 (string_builder_body)

    string_builder_body  go to state 718


State 508

  902 make_table_decl: "begin of code block" . optional_expr_map_tuple_list "end of code block"
  915 array_comprehension: "begin of code block" . "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 719
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 266 (optional_expr_map_tuple_list)

    string_builder                go to state 518
    expr_reader                   go to state 519
    optional_expr_map_tuple_list  go to state 720
    expression_keyword            go to state 582
    name_in_namespace             go to state 537
    expr_new                      go to state 539
    expr_cast                     go to state 549
    expr_type_decl                go to state 550
    expr_type_info                go to state 551
    block_or_lambda               go to state 552
    expr_full_block               go to state 553
    expr_numeric_const            go to state 554
    expr_named_call               go to state 557
    expr_method_call              go to state 558
    func_addr_expr                go to state 559
    expr_field                    go to state 560
    expr_call                     go to state 561
    expr                          go to state 712
    expr_mtag                     go to state 563
    basic_type_declaration        go to state 564
    make_decl                     go to state 565
    make_struct_decl              go to state 566
    make_map_tuple                go to state 721
    make_tuple_call               go to state 567
    make_dim_decl                 go to state 568
    expr_map_tuple_list           go to state 722
    make_table_decl               go to state 569
    array_comprehension           go to state 570


State 509

  460 expr: '-' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 723
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 510

  459 expr: '+' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 724
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 511

  497 expr: '*' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 725
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 512

  458 expr: '~' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 726
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 513

  457 expr: '!' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 727
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 514

  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 515

  487 expr: '(' . expr_list optional_comma ')'
  488     | '(' . make_struct_single ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 735
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 736
    make_struct_single      go to state 737
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 516

  352 block_or_lambda: '$' .

    $default  reduce using rule 352 (block_or_lambda)


State 517

  353 block_or_lambda: '@' .
  354                | '@' . '@'
  423 func_addr_expr: '@' . '@' func_addr_name
  426               | '@' . '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  429               | '@' . '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  547 expr_mtag: '@' . '@' "$c" '(' expr ')'

    '@'  shift, and go to state 738

    $default  reduce using rule 353 (block_or_lambda)


State 518

  451 expr: string_builder .

    $default  reduce using rule 451 (expr)


State 519

  450 expr: expr_reader .

    $default  reduce using rule 450 (expr)


State 520

  255 expression_any: expression_label . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 739


State 521

  256 expression_any: expression_goto . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 740


State 522

  237 expression_any: semicolon .

    $default  reduce using rule 237 (expression_any)


State 523

   80 expression_if_then_else: if_or_static_if . expr expression_block expression_else

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 741
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 524

   82 expression_if_then_else: expression_if_one_liner . "if" $@4 expr expression_else_one_liner semicolon

    "if"  shift, and go to state 742


State 525

  253 expression_any: expression_if_then_else .

    $default  reduce using rule 253 (expression_any)


State 526

  248 expression_any: expression_for_loop .

    $default  reduce using rule 248 (expression_any)


State 527

  245 expression_any: expression_unsafe .

    $default  reduce using rule 245 (expression_any)


State 528

  244 expression_any: expression_while_loop .

    $default  reduce using rule 244 (expression_any)


State 529

  246 expression_any: expression_with .

    $default  reduce using rule 246 (expression_any)


State 530

  247 expression_any: expression_with_alias .

    $default  reduce using rule 247 (expression_any)


State 531

  232 expression_block: open_block expressions close_block .
  233                 | open_block expressions close_block . "finally" open_block expressions close_block

    "finally"  shift, and go to state 743

    $default  reduce using rule 232 (expression_block)


State 532

  280 expr_pipe: expr_call_pipe .

    $default  reduce using rule 280 (expr_pipe)


State 533

  259 expressions: expressions expression_any .

    $default  reduce using rule 259 (expressions)


State 534

  239 expression_any: expr_keyword .

    $default  reduce using rule 239 (expression_any)


State 535

  235 expr_call_pipe: expression_keyword . expr_full_block_assumed_piped
  531 expr: expression_keyword .

    '$'  shift, and go to state 516
    '@'  shift, and go to state 695

    '$'       [reduce using rule 531 (expr)]
    '@'       [reduce using rule 531 (expr)]
    $default  reduce using rule 531 (expr)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 745


State 536

  238 expression_any: expr_pipe .

    $default  reduce using rule 238 (expression_any)


State 537

  417 expr_named_call: name_in_namespace . '(' '[' make_struct_fields ']' ')'
  418                | name_in_namespace . '(' expr_list ',' '[' make_struct_fields ']' ')'
  440 expr_call: name_in_namespace . '(' ')'
  441          | name_in_namespace . '(' "uninitialized" ')'
  442          | name_in_namespace . '(' make_struct_single ')'
  443          | name_in_namespace . '(' "uninitialized" make_struct_single ')'
  444          | name_in_namespace . '(' expr_list ')'
  448 expr: name_in_namespace .
  529     | name_in_namespace . "name"

    "name"  shift, and go to state 746
    '('     shift, and go to state 747

    "name"    [reduce using rule 448 (expr)]
    '('       [reduce using rule 448 (expr)]
    $default  reduce using rule 448 (expr)


State 538

  242 expression_any: expression_delete . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 748


State 539

  522 expr: expr_new .

    $default  reduce using rule 522 (expr)


State 540

   78 expression_if_one_liner: expression_break .
  249 expression_any: expression_break . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 78 (expression_if_one_liner)

    semicolon  go to state 749


State 541

   79 expression_if_one_liner: expression_continue .
  250 expression_any: expression_continue . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 79 (expression_if_one_liner)

    semicolon  go to state 750


State 542

   76 expression_if_one_liner: expression_return_no_pipe .
  301 expression_return: expression_return_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 76 (expression_if_one_liner)

    semicolon  go to state 751


State 543

  251 expression_any: expression_return .

    $default  reduce using rule 251 (expression_any)


State 544

   77 expression_if_one_liner: expression_yield_no_pipe .
  306 expression_yield: expression_yield_no_pipe . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 77 (expression_if_one_liner)

    semicolon  go to state 752


State 545

  252 expression_any: expression_yield .

    $default  reduce using rule 252 (expression_any)


State 546

  254 expression_any: expression_try_catch .

    $default  reduce using rule 254 (expression_any)


State 547

  327 expression_let: kwd_let . optional_in_scope let_variable_declaration
  328               | kwd_let . optional_in_scope tuple_expansion_variable_declaration

    "inscope"  shift, and go to state 753

    $default  reduce using rule 316 (optional_in_scope)

    optional_in_scope  go to state 754


State 548

  243 expression_any: expression_let .

    $default  reduce using rule 243 (expression_any)


State 549

  521 expr: expr_cast .

    $default  reduce using rule 521 (expr)


State 550

  520 expr: expr_type_decl .

    $default  reduce using rule 520 (expr)


State 551

  519 expr: expr_type_info .

    $default  reduce using rule 519 (expr)


State 552

  367 expr_full_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 755


State 553

  525 expr: expr_full_block .

    $default  reduce using rule 525 (expr)


State 554

  449 expr: expr_numeric_const .

    $default  reduce using rule 449 (expr)


State 555

  241 expression_any: expr_assign . semicolon
  276 expr_pipe: expr_assign . " <|" expr_block

    " <|"                shift, and go to state 756
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 757


State 556

  240 expression_any: expr_assign_pipe .

    $default  reduce using rule 240 (expression_any)


State 557

  524 expr: expr_named_call .

    $default  reduce using rule 524 (expr)


State 558

  523 expr: expr_method_call .

    $default  reduce using rule 523 (expr)


State 559

  495 expr: func_addr_expr .

    $default  reduce using rule 495 (expr)


State 560

  455 expr: expr_field .

    $default  reduce using rule 455 (expr)


State 561

  496 expr: expr_call .

    $default  reduce using rule 496 (expr)


State 562

   75 expression_if_one_liner: expr .
  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  400 expr_assign_pipe: expr . '=' expr_assign_pipe_right
  401                 | expr . "<-" expr_assign_pipe_right
  402                 | expr . "&=" expr_assign_pipe_right
  403                 | expr . "|=" expr_assign_pipe_right
  404                 | expr . "^=" expr_assign_pipe_right
  405                 | expr . "&&=" expr_assign_pipe_right
  406                 | expr . "||=" expr_assign_pipe_right
  407                 | expr . "^^=" expr_assign_pipe_right
  408                 | expr . "+=" expr_assign_pipe_right
  409                 | expr . "-=" expr_assign_pipe_right
  410                 | expr . "*=" expr_assign_pipe_right
  411                 | expr . "/=" expr_assign_pipe_right
  412                 | expr . "%=" expr_assign_pipe_right
  413                 | expr . "<<=" expr_assign_pipe_right
  414                 | expr . ">>=" expr_assign_pipe_right
  415                 | expr . "<<<=" expr_assign_pipe_right
  416                 | expr . ">>>=" expr_assign_pipe_right
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 758
    "as"    shift, and go to state 759
    "+="    shift, and go to state 760
    "-="    shift, and go to state 761
    "/="    shift, and go to state 762
    "*="    shift, and go to state 763
    "%="    shift, and go to state 764
    "&="    shift, and go to state 765
    "|="    shift, and go to state 766
    "^="    shift, and go to state 767
    "<<"    shift, and go to state 768
    ">>"    shift, and go to state 769
    "++"    shift, and go to state 770
    "--"    shift, and go to state 771
    "<="    shift, and go to state 772
    "<<="   shift, and go to state 773
    ">>="   shift, and go to state 774
    ">="    shift, and go to state 775
    "=="    shift, and go to state 776
    "!="    shift, and go to state 777
    "->"    shift, and go to state 778
    "<-"    shift, and go to state 779
    "??"    shift, and go to state 780
    "?."    shift, and go to state 781
    "?["    shift, and go to state 782
    "<|"    shift, and go to state 783
    "|>"    shift, and go to state 784
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 786
    ">>>"   shift, and go to state 787
    "<<<="  shift, and go to state 788
    ">>>="  shift, and go to state 789
    "&&"    shift, and go to state 790
    "||"    shift, and go to state 791
    "^^"    shift, and go to state 792
    "&&="   shift, and go to state 793
    "||="   shift, and go to state 794
    "^^="   shift, and go to state 795
    ".."    shift, and go to state 796
    '='     shift, and go to state 797
    '?'     shift, and go to state 798
    '|'     shift, and go to state 799
    '^'     shift, and go to state 800
    '&'     shift, and go to state 801
    '<'     shift, and go to state 802
    '>'     shift, and go to state 803
    '-'     shift, and go to state 804
    '+'     shift, and go to state 805
    '*'     shift, and go to state 806
    '/'     shift, and go to state 807
    '%'     shift, and go to state 808
    '.'     shift, and go to state 809
    '['     shift, and go to state 810
    '$'     shift, and go to state 516
    '@'     shift, and go to state 695

    "if"      reduce using rule 75 (expression_if_one_liner)
    $default  reduce using rule 377 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 563

  456 expr: expr_mtag .

    $default  reduce using rule 456 (expr)


State 564

  445 expr_call: basic_type_declaration . '(' ')'
  446          | basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 812


State 565

  452 expr: make_decl .

    $default  reduce using rule 452 (expr)


State 566

  809 make_decl: make_struct_decl .

    $default  reduce using rule 809 (make_decl)


State 567

  813 make_decl: make_tuple_call .

    $default  reduce using rule 813 (make_decl)


State 568

  810 make_decl: make_dim_decl .

    $default  reduce using rule 810 (make_decl)


State 569

  811 make_decl: make_table_decl .

    $default  reduce using rule 811 (make_decl)


State 570

  812 make_decl: array_comprehension .

    $default  reduce using rule 812 (make_decl)


State 571

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 . enum_list $@45 close_block

    $default  reduce using rule 627 (enum_list)

    enum_list  go to state 813


State 572

  629 enum_list: enum_list "name" . semicolon
  630          | enum_list "name" . '=' expr semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 814

    semicolon  go to state 815


State 573

  628 enum_list: enum_list semicolon .

    $default  reduce using rule 628 (enum_list)


State 574

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 816


State 575

  652 optional_structure_parent: ':' name_in_namespace .

    $default  reduce using rule 652 (optional_structure_parent)


State 576

  563 struct_variable_declaration_list: struct_variable_declaration_list . semicolon
  565                                 | struct_variable_declaration_list . $@35 structure_variable_declaration semicolon
  567                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  569                                 | struct_variable_declaration_list . optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block
  570                                 | struct_variable_declaration_list . '[' annotation_list ']' semicolon
  664 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list . close_block

    "close scope"        shift, and go to state 146
    "end of line"        shift, and go to state 13
    "end of code block"  shift, and go to state 147
    "end of expression"  shift, and go to state 14
    '['                  shift, and go to state 817

    "def"     reduce using rule 129 (optional_annotation_list)
    $default  reduce using rule 564 ($@35)

    semicolon                 go to state 818
    optional_annotation_list  go to state 819
    close_block               go to state 820
    $@35                      go to state 821


State 577

  618 global_variable_declaration_list: global_variable_declaration_list $@38 optional_field_annotation let_variable_declaration .

    $default  reduce using rule 618 (global_variable_declaration_list)


State 578

  549 optional_field_annotation: "[[" annotation_argument_list ']' ']' .

    $default  reduce using rule 549 (optional_field_annotation)


State 579

  530 expr: "unsafe" . '(' expr ')'

    '('  shift, and go to state 681


State 580

  500 expr: "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' ')'
  501     | "generator" . '<' type_declaration_no_options '>' optional_capture_list '(' expr ')'

    '<'  shift, and go to state 822


State 581

  272 expression_keyword: "keyword" . '<' $@8 type_declaration_no_options_list '>' $@9 expr

    '<'  shift, and go to state 715


State 582

  531 expr: expression_keyword .

    $default  reduce using rule 531 (expr)


State 583

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  607 let_variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 823


State 584

  608 let_variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 608 (let_variable_name_with_pos_list)


State 585

  609 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" .
  610                                | let_variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 824

    $default  reduce using rule 609 (let_variable_name_with_pos_list)


State 586

  611 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options . semicolon
  612                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  613                         | let_variable_name_with_pos_list ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"              shift, and go to state 419
    "implicit"           shift, and go to state 420
    "explicit"           shift, and go to state 421
    "=="                 shift, and go to state 422
    "<-"                 shift, and go to state 587
    "??"                 shift, and go to state 423
    ":="                 shift, and go to state 588
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 589
    '?'                  shift, and go to state 424
    '&'                  shift, and go to state 425
    '-'                  shift, and go to state 426
    '['                  shift, and go to state 427
    '#'                  shift, and go to state 428

    semicolon              go to state 825
    copy_or_move_or_clone  go to state 826
    dim_list               go to state 429


State 587

  602 copy_or_move_or_clone: "<-" .

    $default  reduce using rule 602 (copy_or_move_or_clone)


State 588

  603 copy_or_move_or_clone: ":=" .

    $default  reduce using rule 603 (copy_or_move_or_clone)


State 589

  601 copy_or_move_or_clone: '=' .

    $default  reduce using rule 601 (copy_or_move_or_clone)


State 590

  614 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr semicolon
  615                         | let_variable_name_with_pos_list optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 827
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 828
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 591

  734 type_declaration_no_options: "type" '<' $@50 . type_declaration '>' $@51

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 829


State 592

  757 type_declaration_no_options: "array" '<' $@55 . type_declaration '>' $@56

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 830


State 593

  760 type_declaration_no_options: "table" '<' $@57 . table_type_pair '>' $@58

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    table_type_pair              go to state 831
    type_declaration_no_options  go to state 368
    type_declaration             go to state 832


State 594

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  735 type_declaration_no_options: "typedecl" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 833


State 595

  763 type_declaration_no_options: "iterator" '<' $@59 . type_declaration '>' $@60

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 834


State 596

  753 type_declaration_no_options: "smart_ptr" '<' $@53 . type_declaration '>' $@54

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 835


State 597

  710 auto_type_declaration: "auto" '(' "name" . ')'

    ')'  shift, and go to state 836


State 598

  719 bitfield_type_declaration: "bitfield" '<' $@48 . bitfield_bits '>' $@49

    "name"  shift, and go to state 837

    bitfield_bits  go to state 838


State 599

  767 type_declaration_no_options: "block" '<' $@61 . type_declaration '>' $@62

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 839


State 600

  770 type_declaration_no_options: "block" '<' $@63 . optional_function_argument_list optional_function_type '>' $@64

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 840


State 601

  774 type_declaration_no_options: "function" '<' $@65 . type_declaration '>' $@66

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 841


State 602

  777 type_declaration_no_options: "function" '<' $@67 . optional_function_argument_list optional_function_type '>' $@68

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 842


State 603

  781 type_declaration_no_options: "lambda" '<' $@69 . type_declaration '>' $@70

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 843


State 604

  784 type_declaration_no_options: "lambda" '<' $@71 . optional_function_argument_list optional_function_type '>' $@72

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 844


State 605

  787 type_declaration_no_options: "tuple" '<' $@73 . tuple_type_list '>' $@74

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 624
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 845
    tuple_type_list              go to state 846
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 629


State 606

  790 type_declaration_no_options: "variant" '<' $@75 . variant_type_list '>' $@76

    "name"  shift, and go to state 631

    variant_type       go to state 847
    variant_type_list  go to state 848


State 607

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  711 auto_type_declaration: "$t" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 849


State 608

  738 type_declaration_no_options: '$' name_in_namespace '<' . $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')'

    $default  reduce using rule 737 ($@52)

    $@52  go to state 850


State 609

  736 type_declaration_no_options: '$' name_in_namespace '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 851
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 610

  748 type_declaration_no_options: type_declaration_no_options "==" "const" .

    $default  reduce using rule 748 (type_declaration_no_options)


State 611

  749 type_declaration_no_options: type_declaration_no_options "==" '&' .

    $default  reduce using rule 749 (type_declaration_no_options)


State 612

  742 type_declaration_no_options: type_declaration_no_options '-' "const" .

    $default  reduce using rule 742 (type_declaration_no_options)


State 613

  744 type_declaration_no_options: type_declaration_no_options '-' '&' .

    $default  reduce using rule 744 (type_declaration_no_options)


State 614

  739 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'

    ']'  shift, and go to state 852


State 615

  747 type_declaration_no_options: type_declaration_no_options '-' '#' .

    $default  reduce using rule 747 (type_declaration_no_options)


State 616

  731 type_declaration_no_options: type_declaration_no_options '[' ']' .

    $default  reduce using rule 731 (type_declaration_no_options)


State 617

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  724 dim_list: '[' expr . ']'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 853


State 618

  725 dim_list: dim_list '[' . expr ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 854
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 619

  793 type_declaration: type_declaration '|' '#' .

    $default  reduce using rule 793 (type_declaration)


State 620

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  792 type_declaration: type_declaration '|' type_declaration_no_options .

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    $default  reduce using rule 792 (type_declaration)

    dim_list  go to state 429


State 621

  716 bitfield_alias_bits: bitfield_alias_bits "name" . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 855


State 622

  715 bitfield_alias_bits: bitfield_alias_bits semicolon .

    $default  reduce using rule 715 (bitfield_alias_bits)


State 623

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 856


State 624

  281 name_in_namespace: "name" .
  282                  | "name" . "::" "name"
  580 tuple_type: "name" . ':' type_declaration

    "::"  shift, and go to state 104
    ':'   shift, and go to state 857

    $default  reduce using rule 281 (name_in_namespace)


State 625

  720 c_or_s: ',' .

    $default  reduce using rule 720 (c_or_s)


State 626

  721 c_or_s: semicolon .

    $default  reduce using rule 721 (c_or_s)


State 627

  585 tuple_alias_type_list: tuple_alias_type_list tuple_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625

    semicolon  go to state 626
    c_or_s     go to state 858


State 628

  584 tuple_alias_type_list: tuple_alias_type_list c_or_s .

    $default  reduce using rule 584 (tuple_alias_type_list)


State 629

  579 tuple_type: type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 579 (tuple_type)


State 630

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 859


State 631

  586 variant_type: "name" . ':' type_declaration

    ':'  shift, and go to state 860


State 632

  591 variant_alias_type_list: variant_alias_type_list variant_type . c_or_s

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625

    semicolon  go to state 626
    c_or_s     go to state 861


State 633

  590 variant_alias_type_list: variant_alias_type_list c_or_s .

    $default  reduce using rule 590 (variant_alias_type_list)


State 634

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 862


State 635

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  573 function_argument_declaration_type: "$a" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 863


State 636

  669 variable_name_with_pos_list: "$i" . '(' expr ')'

    '('  shift, and go to state 864


State 637

  668 variable_name_with_pos_list: "name" .
  670                            | "name" . "aka" "name"

    "aka"  shift, and go to state 865

    $default  reduce using rule 668 (variable_name_with_pos_list)


State 638

  571 function_argument_declaration_no_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_no_type .

    $default  reduce using rule 571 (function_argument_declaration_no_type)


State 639

  572 function_argument_declaration_type: optional_field_annotation kwd_let_var_or_nothing variable_declaration_type .

    $default  reduce using rule 572 (function_argument_declaration_type)


State 640

  594 variable_declaration_no_type: variable_name_with_pos_list .
  595                             | variable_name_with_pos_list . '&'
  596                             | variable_name_with_pos_list . copy_or_move expr
  597 variable_declaration_type: variable_name_with_pos_list . ':' type_declaration
  598                          | variable_name_with_pos_list . ':' type_declaration copy_or_move expr
  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "<-"  shift, and go to state 866
    ','   shift, and go to state 867
    '='   shift, and go to state 868
    ':'   shift, and go to state 869
    '&'   shift, and go to state 870

    $default  reduce using rule 594 (variable_declaration_no_type)

    copy_or_move  go to state 871


State 641

  576 function_argument_list: function_argument_declaration_no_type semicolon function_argument_list .

    $default  reduce using rule 576 (function_argument_list)


State 642

  578 function_argument_list: function_argument_declaration_type ',' function_argument_list .

    $default  reduce using rule 578 (function_argument_list)


State 643

  577 function_argument_list: function_argument_declaration_type semicolon function_argument_list .

    $default  reduce using rule 577 (function_argument_list)


State 644

  857 make_struct_decl: "struct" '<' . $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 855 ($@89)

    $@89  go to state 872


State 645

  860 make_struct_decl: "class" '<' . $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 858 ($@91)

    $@91  go to state 873


State 646

   86 expression_while_loop: "while" expr . expression_block
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 758
    "as"                   shift, and go to state 759
    "<<"                   shift, and go to state 768
    ">>"                   shift, and go to state 769
    "++"                   shift, and go to state 770
    "--"                   shift, and go to state 771
    "<="                   shift, and go to state 772
    ">="                   shift, and go to state 775
    "=="                   shift, and go to state 776
    "!="                   shift, and go to state 777
    "->"                   shift, and go to state 778
    "??"                   shift, and go to state 780
    "?."                   shift, and go to state 781
    "?["                   shift, and go to state 782
    "<|"                   shift, and go to state 783
    "|>"                   shift, and go to state 784
    "<<<"                  shift, and go to state 786
    ">>>"                  shift, and go to state 787
    "&&"                   shift, and go to state 790
    "||"                   shift, and go to state 791
    "^^"                   shift, and go to state 792
    ".."                   shift, and go to state 796
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 798
    '|'                    shift, and go to state 799
    '^'                    shift, and go to state 800
    '&'                    shift, and go to state 801
    '<'                    shift, and go to state 802
    '>'                    shift, and go to state 803
    '-'                    shift, and go to state 804
    '+'                    shift, and go to state 805
    '*'                    shift, and go to state 806
    '/'                    shift, and go to state 807
    '%'                    shift, and go to state 808
    '.'                    shift, and go to state 809
    '['                    shift, and go to state 810

    open_block        go to state 297
    expression_block  go to state 874


State 647

   84 expression_for_loop: "for" $@5 . variable_name_with_pos_list "in" expr_list expression_block

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 875


State 648

  288 new_type_declaration: '<' . $@12 type_declaration '>' $@13

    $default  reduce using rule 286 ($@12)

    $@12  go to state 876


State 649

  290 expr_new: "new" new_type_declaration .
  291         | "new" new_type_declaration . '(' use_initializer ')'
  292         | "new" new_type_declaration . '(' expr_list ')'
  293         | "new" new_type_declaration . '(' make_struct_single ')'
  294         | "new" new_type_declaration . '(' "uninitialized" make_struct_single ')'

    '('  shift, and go to state 877

    '('       [reduce using rule 290 (expr_new)]
    $default  reduce using rule 290 (expr_new)


State 650

  289 new_type_declaration: structure_type_declaration .

    $default  reduce using rule 289 (new_type_declaration)


State 651

  295 expr_new: "new" make_decl .

    $default  reduce using rule 295 (expr_new)


State 652

  341 expr_type_info: "typeinfo" '(' . name_in_namespace expr ')'
  342               | "typeinfo" '(' . name_in_namespace '<' "name" '>' expr ')'
  343               | "typeinfo" '(' . name_in_namespace '<' "name" c_or_s "name" '>' expr ')'

    "::"    shift, and go to state 62
    "name"  shift, and go to state 63

    name_in_namespace  go to state 878


State 653

  344 expr_type_info: "typeinfo" name_in_namespace . '(' expr ')'
  345               | "typeinfo" name_in_namespace . '<' "name" '>' '(' expr ')'
  346               | "typeinfo" name_in_namespace . '<' "name" "end of expression" "name" '>' '(' expr ')'

    '<'  shift, and go to state 879
    '('  shift, and go to state 880


State 654

  340 expr_type_decl: "type" '<' . $@20 type_declaration '>' $@21

    $default  reduce using rule 338 ($@20)

    $@20  go to state 881


State 655

  883 make_dim_decl: "array" "struct" . '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 882


State 656

  886 make_dim_decl: "array" "tuple" . '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    '<'  shift, and go to state 883


State 657

  889 make_dim_decl: "array" "variant" . '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    '<'  shift, and go to state 884


State 658

  893 make_dim_decl: "array" '<' . $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    $default  reduce using rule 891 ($@105)

    $@105  go to state 885


State 659

  890 make_dim_decl: "array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 886
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 660

  300 expression_return_no_pipe: "return" "<-" . expr_list
  303 expression_return: "return" "<-" . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 887
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 888
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 664
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 661

  302 expression_return: "return" expr_pipe .

    $default  reduce using rule 302 (expression_return)


State 662

  299 expression_return_no_pipe: "return" expr_list .
  348 expr_list: expr_list . ',' expr

    ','  shift, and go to state 889

    $default  reduce using rule 299 (expression_return_no_pipe)


State 663

  276 expr_pipe: expr_assign . " <|" expr_block

    " <|"  shift, and go to state 756


State 664

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  347 expr_list: expr .
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 758
    "as"    shift, and go to state 759
    "+="    shift, and go to state 890
    "-="    shift, and go to state 891
    "/="    shift, and go to state 892
    "*="    shift, and go to state 893
    "%="    shift, and go to state 894
    "&="    shift, and go to state 895
    "|="    shift, and go to state 896
    "^="    shift, and go to state 897
    "<<"    shift, and go to state 768
    ">>"    shift, and go to state 769
    "++"    shift, and go to state 770
    "--"    shift, and go to state 771
    "<="    shift, and go to state 772
    "<<="   shift, and go to state 898
    ">>="   shift, and go to state 899
    ">="    shift, and go to state 775
    "=="    shift, and go to state 776
    "!="    shift, and go to state 777
    "->"    shift, and go to state 778
    "<-"    shift, and go to state 900
    "??"    shift, and go to state 780
    "?."    shift, and go to state 781
    "?["    shift, and go to state 782
    "<|"    shift, and go to state 783
    "|>"    shift, and go to state 784
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 786
    ">>>"   shift, and go to state 787
    "<<<="  shift, and go to state 901
    ">>>="  shift, and go to state 902
    "&&"    shift, and go to state 790
    "||"    shift, and go to state 791
    "^^"    shift, and go to state 792
    "&&="   shift, and go to state 903
    "||="   shift, and go to state 904
    "^^="   shift, and go to state 905
    ".."    shift, and go to state 796
    '='     shift, and go to state 906
    '?'     shift, and go to state 798
    '|'     shift, and go to state 799
    '^'     shift, and go to state 800
    '&'     shift, and go to state 801
    '<'     shift, and go to state 802
    '>'     shift, and go to state 803
    '-'     shift, and go to state 804
    '+'     shift, and go to state 805
    '*'     shift, and go to state 806
    '/'     shift, and go to state 807
    '%'     shift, and go to state 808
    '.'     shift, and go to state 809
    '['     shift, and go to state 810
    '$'     shift, and go to state 516
    '@'     shift, and go to state 695

    " <|"     reduce using rule 377 (expr_assign)
    $default  reduce using rule 347 (expr_list)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 665

  309 expression_try_catch: "try" expression_block . "recover" expression_block

    "recover"  shift, and go to state 907


State 666

  905 make_table_decl: "table" '<' . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'
  906                | "table" '<' . type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 908


State 667

  904 make_table_decl: "table" '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 266 (optional_expr_map_tuple_list)

    string_builder                go to state 518
    expr_reader                   go to state 519
    optional_expr_map_tuple_list  go to state 909
    expression_keyword            go to state 582
    name_in_namespace             go to state 537
    expr_new                      go to state 539
    expr_cast                     go to state 549
    expr_type_decl                go to state 550
    expr_type_info                go to state 551
    block_or_lambda               go to state 552
    expr_full_block               go to state 553
    expr_numeric_const            go to state 554
    expr_named_call               go to state 557
    expr_method_call              go to state 558
    func_addr_expr                go to state 559
    expr_field                    go to state 560
    expr_call                     go to state 561
    expr                          go to state 712
    expr_mtag                     go to state 563
    basic_type_declaration        go to state 564
    make_decl                     go to state 565
    make_struct_decl              go to state 566
    make_map_tuple                go to state 721
    make_tuple_call               go to state 567
    make_dim_decl                 go to state 568
    expr_map_tuple_list           go to state 722
    make_table_decl               go to state 569
    array_comprehension           go to state 570


State 668

  285 expression_delete: "delete" "explicit" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 910
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 669

  284 expression_delete: "delete" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 284 (expression_delete)


State 670

  498 expr: "deref" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 911
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 671

   87 expression_with: "with" expr . expression_block
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 758
    "as"                   shift, and go to state 759
    "<<"                   shift, and go to state 768
    ">>"                   shift, and go to state 769
    "++"                   shift, and go to state 770
    "--"                   shift, and go to state 771
    "<="                   shift, and go to state 772
    ">="                   shift, and go to state 775
    "=="                   shift, and go to state 776
    "!="                   shift, and go to state 777
    "->"                   shift, and go to state 778
    "??"                   shift, and go to state 780
    "?."                   shift, and go to state 781
    "?["                   shift, and go to state 782
    "<|"                   shift, and go to state 783
    "|>"                   shift, and go to state 784
    "<<<"                  shift, and go to state 786
    ">>>"                  shift, and go to state 787
    "&&"                   shift, and go to state 790
    "||"                   shift, and go to state 791
    "^^"                   shift, and go to state 792
    ".."                   shift, and go to state 796
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 798
    '|'                    shift, and go to state 799
    '^'                    shift, and go to state 800
    '&'                    shift, and go to state 801
    '<'                    shift, and go to state 802
    '>'                    shift, and go to state 803
    '-'                    shift, and go to state 804
    '+'                    shift, and go to state 805
    '*'                    shift, and go to state 806
    '/'                    shift, and go to state 807
    '%'                    shift, and go to state 808
    '.'                    shift, and go to state 809
    '['                    shift, and go to state 810

    open_block        go to state 297
    expression_block  go to state 912


State 672

   89 expression_with_alias: "assume" "name" . '=' $@6 expr

    '='  shift, and go to state 913


State 673

  331 expr_cast: "cast" '<' . $@14 type_declaration_no_options '>' $@15 expr

    $default  reduce using rule 329 ($@14)

    $@14  go to state 914


State 674

  334 expr_cast: "upcast" '<' . $@16 type_declaration_no_options '>' $@17 expr

    $default  reduce using rule 332 ($@16)

    $@16  go to state 915


State 675

  499 expr: "addr" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 916
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 676

  257 expression_any: "pass" semicolon .

    $default  reduce using rule 257 (expression_any)


State 677

  337 expr_cast: "reinterpret" '<' . $@18 type_declaration_no_options '>' $@19 expr

    $default  reduce using rule 335 ($@18)

    $@18  go to state 917


State 678

   60 expression_label: "label" "integer constant" . ':'

    ':'  shift, and go to state 918


State 679

   61 expression_goto: "goto" "label" . "integer constant"

    "integer constant"  shift, and go to state 919


State 680

   62 expression_goto: "goto" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 62 (expression_goto)


State 681

  530 expr: "unsafe" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 920
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 682

   85 expression_unsafe: "unsafe" expression_block .

    $default  reduce using rule 85 (expression_unsafe)


State 683

  897 make_dim_decl: "fixed_array" '<' . $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 895 ($@107)

    $@107  go to state 921


State 684

  894 make_dim_decl: "fixed_array" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 922
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 685

  866 make_struct_decl: "default" '<' . $@95 type_declaration_no_options '>' $@96 use_initializer

    $default  reduce using rule 864 ($@95)

    $@95  go to state 923


State 686

  875 make_tuple_call: "tuple" '<' . $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 873 ($@97)

    $@97  go to state 924


State 687

  872 make_tuple_call: "tuple" '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 925
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 688

  863 make_struct_decl: "variant" '<' . $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 861 ($@93)

    $@93  go to state 926


State 689

  236 expr_call_pipe: "generator" '<' . type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped
  500 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  501     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 927


State 690

  305 expression_yield_no_pipe: "yield" "<-" . expr
  308 expression_yield: "yield" "<-" . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 928
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 929
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 691

  307 expression_yield: "yield" expr_pipe .

    $default  reduce using rule 307 (expression_yield)


State 692

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  304 expression_yield_no_pipe: "yield" expr .
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 758
    "as"    shift, and go to state 759
    "+="    shift, and go to state 890
    "-="    shift, and go to state 891
    "/="    shift, and go to state 892
    "*="    shift, and go to state 893
    "%="    shift, and go to state 894
    "&="    shift, and go to state 895
    "|="    shift, and go to state 896
    "^="    shift, and go to state 897
    "<<"    shift, and go to state 768
    ">>"    shift, and go to state 769
    "++"    shift, and go to state 770
    "--"    shift, and go to state 771
    "<="    shift, and go to state 772
    "<<="   shift, and go to state 898
    ">>="   shift, and go to state 899
    ">="    shift, and go to state 775
    "=="    shift, and go to state 776
    "!="    shift, and go to state 777
    "->"    shift, and go to state 778
    "<-"    shift, and go to state 900
    "??"    shift, and go to state 780
    "?."    shift, and go to state 781
    "?["    shift, and go to state 782
    "<|"    shift, and go to state 783
    "|>"    shift, and go to state 784
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 786
    ">>>"   shift, and go to state 787
    "<<<="  shift, and go to state 901
    ">>>="  shift, and go to state 902
    "&&"    shift, and go to state 790
    "||"    shift, and go to state 791
    "^^"    shift, and go to state 792
    "&&="   shift, and go to state 903
    "||="   shift, and go to state 904
    "^^="   shift, and go to state 905
    ".."    shift, and go to state 796
    '='     shift, and go to state 906
    '?'     shift, and go to state 798
    '|'     shift, and go to state 799
    '^'     shift, and go to state 800
    '&'     shift, and go to state 801
    '<'     shift, and go to state 802
    '>'     shift, and go to state 803
    '-'     shift, and go to state 804
    '+'     shift, and go to state 805
    '*'     shift, and go to state 806
    '/'     shift, and go to state 807
    '%'     shift, and go to state 808
    '.'     shift, and go to state 809
    '['     shift, and go to state 810
    '$'     shift, and go to state 516
    '@'     shift, and go to state 695

    " <|"     reduce using rule 377 (expr_assign)
    $default  reduce using rule 304 (expression_yield_no_pipe)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 693

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  483     | "++" expr .
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 483 (expr)


State 694

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  484     | "--" expr .
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 484 (expr)


State 695

  353 block_or_lambda: '@' .
  354                | '@' . '@'

    '@'  shift, and go to state 930

    $default  reduce using rule 353 (block_or_lambda)


State 696

  365 expr_block: expression_block .

    $default  reduce using rule 365 (expr_block)


State 697

  366 expr_block: block_or_lambda . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 931


State 698

  279 expr_pipe: "$ <|" expr_block .

    $default  reduce using rule 279 (expr_pipe)


State 699

  277 expr_pipe: "@ <|" expr_block .

    $default  reduce using rule 277 (expr_pipe)


State 700

  278 expr_pipe: "@@ <|" expr_block .

    $default  reduce using rule 278 (expr_pipe)


State 701

  532 expr_mtag: "$$" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 932
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 702

  533 expr_mtag: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 933
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 703

  534 expr_mtag: "$v" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 934
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 704

  535 expr_mtag: "$b" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 935
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 705

  536 expr_mtag: "$a" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 936
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 706

  538 expr_mtag: "$c" '(' . expr ')' '(' ')'
  539          | "$c" '(' . expr ')' '(' expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 937
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 707

  913 array_comprehension: "[[" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 938


State 708

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  849 make_struct_decl: "[[" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  850                 | "[[" type_declaration_no_options . optional_block optional_trailing_delim_sqr_sqr
  851                 | "[[" type_declaration_no_options . '(' ')' optional_block optional_trailing_delim_sqr_sqr
  852                 | "[[" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr
  879 make_dim_decl: "[[" type_declaration_no_options . make_dim optional_trailing_semicolon_sqr_sqr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "const"                           shift, and go to state 419
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "where"                           shift, and go to state 939
    "reinterpret"                     shift, and go to state 472
    "implicit"                        shift, and go to state 420
    "explicit"                        shift, and go to state 421
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "=="                              shift, and go to state 422
    "??"                              shift, and go to state 423
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '?'                               shift, and go to state 424
    '&'                               shift, and go to state 425
    '-'                               shift, and go to state 940
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 941
    '('                               shift, and go to state 942
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517
    '#'                               shift, and go to state 428

    $default  reduce using rule 833 (optional_block)

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 943
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    dim_list                go to state 429
    make_decl               go to state 565
    make_struct_fields      go to state 944
    make_struct_dim         go to state 945
    optional_block          go to state 946
    make_struct_decl        go to state 566
    make_tuple              go to state 947
    make_tuple_call         go to state 567
    make_dim                go to state 948
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 709

  914 array_comprehension: "[{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 949


State 710

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  853 make_struct_decl: "[{" type_declaration_no_options . make_struct_dim optional_block optional_trailing_delim_cur_sqr
  854                 | "[{" type_declaration_no_options . '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr
  880 make_dim_decl: "[{" type_declaration_no_options . make_dim optional_trailing_semicolon_cur_sqr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "const"                           shift, and go to state 419
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "implicit"                        shift, and go to state 420
    "explicit"                        shift, and go to state 421
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "=="                              shift, and go to state 422
    "??"                              shift, and go to state 423
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '?'                               shift, and go to state 424
    '&'                               shift, and go to state 425
    '-'                               shift, and go to state 940
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 941
    '('                               shift, and go to state 950
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517
    '#'                               shift, and go to state 428

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 943
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    dim_list                go to state 429
    make_decl               go to state 565
    make_struct_fields      go to state 944
    make_struct_dim         go to state 951
    make_struct_decl        go to state 566
    make_tuple              go to state 947
    make_tuple_call         go to state 567
    make_dim                go to state 952
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 711

  916 array_comprehension: "{{" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 953


State 712

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  870 make_map_tuple: expr . "=>" expr
  871               | expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "=>"   shift, and go to state 954
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 871 (make_map_tuple)


State 713

  898 make_table: make_map_tuple .

    $default  reduce using rule 898 (make_table)


State 714

  899 make_table: make_table . "end of expression" make_map_tuple
  903 make_table_decl: "{{" make_table . optional_trailing_semicolon_cur_cur

    "end of code block"  shift, and go to state 955
    "end of expression"  shift, and go to state 956
    ";}}"                shift, and go to state 957

    optional_trailing_semicolon_cur_cur  go to state 958


State 715

  272 expression_keyword: "keyword" '<' . $@8 type_declaration_no_options_list '>' $@9 expr

    $default  reduce using rule 270 ($@8)

    $@8  go to state 959


State 716

  261 expr_keyword: "keyword" expr . expression_block
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 758
    "as"                   shift, and go to state 759
    "<<"                   shift, and go to state 768
    ">>"                   shift, and go to state 769
    "++"                   shift, and go to state 770
    "--"                   shift, and go to state 771
    "<="                   shift, and go to state 772
    ">="                   shift, and go to state 775
    "=="                   shift, and go to state 776
    "!="                   shift, and go to state 777
    "->"                   shift, and go to state 778
    "??"                   shift, and go to state 780
    "?."                   shift, and go to state 781
    "?["                   shift, and go to state 782
    "<|"                   shift, and go to state 783
    "|>"                   shift, and go to state 784
    "<<<"                  shift, and go to state 786
    ">>>"                  shift, and go to state 787
    "&&"                   shift, and go to state 790
    "||"                   shift, and go to state 791
    "^^"                   shift, and go to state 792
    ".."                   shift, and go to state 796
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 798
    '|'                    shift, and go to state 799
    '^'                    shift, and go to state 800
    '&'                    shift, and go to state 801
    '<'                    shift, and go to state 802
    '>'                    shift, and go to state 803
    '-'                    shift, and go to state 804
    '+'                    shift, and go to state 805
    '*'                    shift, and go to state 806
    '/'                    shift, and go to state 807
    '%'                    shift, and go to state 808
    '.'                    shift, and go to state 809
    '['                    shift, and go to state 810

    open_block        go to state 297
    expression_block  go to state 960


State 717

  275 expression_keyword: "type function" '<' . $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    $default  reduce using rule 273 ($@10)

    $@10  go to state 961


State 718

   35 string_builder_body: string_builder_body . character_sequence
   36                    | string_builder_body . "{" expr optional_format_string "}"
   37 string_builder: "start of the string" string_builder_body . "end of the string"

    STRING_CHARACTER      shift, and go to state 172
    STRING_CHARACTER_ESC  shift, and go to state 173
    "end of the string"   shift, and go to state 962
    "{"                   shift, and go to state 963

    character_sequence  go to state 964


State 719

  915 array_comprehension: "begin of code block" "for" . variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 965


State 720

  902 make_table_decl: "begin of code block" optional_expr_map_tuple_list . "end of code block"

    "end of code block"  shift, and go to state 966


State 721

  900 expr_map_tuple_list: make_map_tuple .

    $default  reduce using rule 900 (expr_map_tuple_list)


State 722

  267 optional_expr_map_tuple_list: expr_map_tuple_list . optional_comma
  901 expr_map_tuple_list: expr_map_tuple_list . ',' make_map_tuple

    ','  shift, and go to state 967

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 968


State 723

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  460 expr: '-' expr .
  461     | expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 460 (expr)


State 724

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  459 expr: '+' expr .
  461     | expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 459 (expr)


State 725

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  497     | '*' expr .
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 497 (expr)


State 726

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  458 expr: '~' expr .
  461     | expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 458 (expr)


State 727

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  457 expr: '!' expr .
  461     | expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 457 (expr)


State 728

  911 array_comprehension: '[' "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 969


State 729

  912 array_comprehension: '[' "iterator" . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "for"  shift, and go to state 970


State 730

  878 make_dim_decl: '[' optional_expr_list . ']'

    ']'  shift, and go to state 971


State 731

  263 optional_expr_list: expr_list . optional_comma
  348 expr_list: expr_list . ',' expr

    ','  shift, and go to state 972

    ','       [reduce using rule 909 (optional_comma)]
    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 973


State 732

  347 expr_list: expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 347 (expr_list)


State 733

  818 make_struct_fields: "$f" . '(' expr ')' copy_or_move expr
  819                   | "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 974


State 734

  281 name_in_namespace: "name" .
  282                  | "name" . "::" "name"
  814 make_struct_fields: "name" . copy_or_move expr
  815                   | "name" . ":=" expr

    "<-"  shift, and go to state 866
    ":="  shift, and go to state 975
    "::"  shift, and go to state 104
    '='   shift, and go to state 868

    $default  reduce using rule 281 (name_in_namespace)

    copy_or_move  go to state 976


State 735

  348 expr_list: expr_list . ',' expr
  487 expr: '(' expr_list . optional_comma ')'

    ','  shift, and go to state 972

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 977


State 736

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  824 make_struct_single: make_struct_fields .

    ','  shift, and go to state 978

    $default  reduce using rule 824 (make_struct_single)


State 737

  488 expr: '(' make_struct_single . ')'

    ')'  shift, and go to state 979


State 738

  354 block_or_lambda: '@' '@' .
  423 func_addr_expr: '@' '@' . func_addr_name
  426               | '@' '@' . '<' $@23 type_declaration_no_options '>' $@24 func_addr_name
  429               | '@' '@' . '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name
  547 expr_mtag: '@' '@' . "$c" '(' expr ')'

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 980
    "$c"    shift, and go to state 981
    "name"  shift, and go to state 63
    '<'     shift, and go to state 982

    $default  reduce using rule 354 (block_or_lambda)

    name_in_namespace  go to state 983
    func_addr_name     go to state 984


State 739

  255 expression_any: expression_label semicolon .

    $default  reduce using rule 255 (expression_any)


State 740

  256 expression_any: expression_goto semicolon .

    $default  reduce using rule 256 (expression_any)


State 741

   80 expression_if_then_else: if_or_static_if expr . expression_block expression_else
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 758
    "as"                   shift, and go to state 759
    "<<"                   shift, and go to state 768
    ">>"                   shift, and go to state 769
    "++"                   shift, and go to state 770
    "--"                   shift, and go to state 771
    "<="                   shift, and go to state 772
    ">="                   shift, and go to state 775
    "=="                   shift, and go to state 776
    "!="                   shift, and go to state 777
    "->"                   shift, and go to state 778
    "??"                   shift, and go to state 780
    "?."                   shift, and go to state 781
    "?["                   shift, and go to state 782
    "<|"                   shift, and go to state 783
    "|>"                   shift, and go to state 784
    "<<<"                  shift, and go to state 786
    ">>>"                  shift, and go to state 787
    "&&"                   shift, and go to state 790
    "||"                   shift, and go to state 791
    "^^"                   shift, and go to state 792
    ".."                   shift, and go to state 796
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 798
    '|'                    shift, and go to state 799
    '^'                    shift, and go to state 800
    '&'                    shift, and go to state 801
    '<'                    shift, and go to state 802
    '>'                    shift, and go to state 803
    '-'                    shift, and go to state 804
    '+'                    shift, and go to state 805
    '*'                    shift, and go to state 806
    '/'                    shift, and go to state 807
    '%'                    shift, and go to state 808
    '.'                    shift, and go to state 809
    '['                    shift, and go to state 810

    open_block        go to state 297
    expression_block  go to state 985


State 742

   82 expression_if_then_else: expression_if_one_liner "if" . $@4 expr expression_else_one_liner semicolon

    $default  reduce using rule 81 ($@4)

    $@4  go to state 986


State 743

  233 expression_block: open_block expressions close_block "finally" . open_block expressions close_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block  go to state 987


State 744

  369 expr_full_block_assumed_piped: block_or_lambda . $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    $default  reduce using rule 368 ($@22)

    $@22  go to state 988


State 745

  235 expr_call_pipe: expression_keyword expr_full_block_assumed_piped .

    $default  reduce using rule 235 (expr_call_pipe)


State 746

  529 expr: name_in_namespace "name" .

    $default  reduce using rule 529 (expr)


State 747

  417 expr_named_call: name_in_namespace '(' . '[' make_struct_fields ']' ')'
  418                | name_in_namespace '(' . expr_list ',' '[' make_struct_fields ']' ')'
  440 expr_call: name_in_namespace '(' . ')'
  441          | name_in_namespace '(' . "uninitialized" ')'
  442          | name_in_namespace '(' . make_struct_single ')'
  443          | name_in_namespace '(' . "uninitialized" make_struct_single ')'
  444          | name_in_namespace '(' . expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "uninitialized"                   shift, and go to state 989
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 990
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 991
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 992
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 736
    make_struct_single      go to state 993
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 748

  242 expression_any: expression_delete semicolon .

    $default  reduce using rule 242 (expression_any)


State 749

  249 expression_any: expression_break semicolon .

    $default  reduce using rule 249 (expression_any)


State 750

  250 expression_any: expression_continue semicolon .

    $default  reduce using rule 250 (expression_any)


State 751

  301 expression_return: expression_return_no_pipe semicolon .

    $default  reduce using rule 301 (expression_return)


State 752

  306 expression_yield: expression_yield_no_pipe semicolon .

    $default  reduce using rule 306 (expression_yield)


State 753

  315 optional_in_scope: "inscope" .

    $default  reduce using rule 315 (optional_in_scope)


State 754

  327 expression_let: kwd_let optional_in_scope . let_variable_declaration
  328               | kwd_let optional_in_scope . tuple_expansion_variable_declaration

    "$i"    shift, and go to state 317
    "[["    shift, and go to state 994
    "name"  shift, and go to state 318
    '('     shift, and go to state 995

    tuple_expansion_variable_declaration  go to state 996
    let_variable_name_with_pos_list       go to state 319
    let_variable_declaration              go to state 997


State 755

  367 expr_full_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 998
    "[["       shift, and go to state 999

    $default  reduce using rule 362 (optional_capture_list)

    optional_capture_list  go to state 1000


State 756

  276 expr_pipe: expr_assign " <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 1001


State 757

  241 expression_any: expr_assign semicolon .

    $default  reduce using rule 241 (expression_any)


State 758

  506 expr: expr "is" . "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr "is" . basic_type_declaration
  508     | expr "is" . "name"
  546 expr_mtag: expr "is" . "$f" '(' expr ')'

    "type"      shift, and go to state 1002
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 478
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1003
    "name"      shift, and go to state 1004

    basic_type_declaration  go to state 1005


State 759

  509 expr: expr "as" . "name"
  512     | expr "as" . "type" '<' $@31 type_declaration '>' $@32
  513     | expr "as" . basic_type_declaration
  544 expr_mtag: expr "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1006
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 478
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1007
    "name"      shift, and go to state 1008

    basic_type_declaration  go to state 1009


State 760

  387 expr_assign: expr "+=" . expr
  408 expr_assign_pipe: expr "+=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1014
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1015
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 761

  388 expr_assign: expr "-=" . expr
  409 expr_assign_pipe: expr "-=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1016
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1017
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 762

  390 expr_assign: expr "/=" . expr
  411 expr_assign_pipe: expr "/=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1018
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1019
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 763

  389 expr_assign: expr "*=" . expr
  410 expr_assign_pipe: expr "*=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1020
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1021
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 764

  391 expr_assign: expr "%=" . expr
  412 expr_assign_pipe: expr "%=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1022
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1023
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 765

  381 expr_assign: expr "&=" . expr
  402 expr_assign_pipe: expr "&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1024
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1025
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 766

  382 expr_assign: expr "|=" . expr
  403 expr_assign_pipe: expr "|=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1026
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1027
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 767

  383 expr_assign: expr "^=" . expr
  404 expr_assign_pipe: expr "^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1028
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1029
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 768

  461 expr: expr "<<" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1030
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 769

  462 expr: expr ">>" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1031
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 770

  485 expr: expr "++" .

    $default  reduce using rule 485 (expr)


State 771

  486 expr: expr "--" .

    $default  reduce using rule 486 (expr)


State 772

  474 expr: expr "<=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1032
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 773

  392 expr_assign: expr "<<=" . expr
  413 expr_assign_pipe: expr "<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1033
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1034
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 774

  393 expr_assign: expr ">>=" . expr
  414 expr_assign_pipe: expr ">>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1035
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1036
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 775

  475 expr: expr ">=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1037
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 776

  472 expr: expr "==" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1038
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 777

  473 expr: expr "!=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1039
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 778

  419 expr_method_call: expr "->" . "name" '(' ')'
  420                 | expr "->" . "name" '(' expr_list ')'

    "name"  shift, and go to state 1040


State 779

  379 expr_assign: expr "<-" . expr
  401 expr_assign_pipe: expr "<-" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1041
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1042
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 780

  502 expr: expr "??" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1043
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 781

  493 expr: expr "?." . "name"
  541 expr_mtag: expr "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1044
    "name"  shift, and go to state 1045


State 782

  491 expr: expr "?[" . expr ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1046
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 783

  526 expr: expr "<|" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1047
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 784

  527 expr: expr "|>" . expr
  528     | expr "|>" . basic_type_declaration

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1048
    expr_mtag               go to state 563
    basic_type_declaration  go to state 1049
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 785

  380 expr_assign: expr ":=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1050
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 786

  463 expr: expr "<<<" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1051
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 787

  464 expr: expr ">>>" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1052
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 788

  394 expr_assign: expr "<<<=" . expr
  415 expr_assign_pipe: expr "<<<=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1053
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1054
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 789

  395 expr_assign: expr ">>>=" . expr
  416 expr_assign_pipe: expr ">>>=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1055
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1056
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 790

  479 expr: expr "&&" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1057
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 791

  480 expr: expr "||" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1058
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 792

  481 expr: expr "^^" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1059
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 793

  384 expr_assign: expr "&&=" . expr
  405 expr_assign_pipe: expr "&&=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1060
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1061
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 794

  385 expr_assign: expr "||=" . expr
  406 expr_assign_pipe: expr "||=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1062
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1063
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 795

  386 expr_assign: expr "^^=" . expr
  407 expr_assign_pipe: expr "^^=" . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1064
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1065
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 796

  482 expr: expr ".." . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1066
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 797

  378 expr_assign: expr '=' . expr
  400 expr_assign_pipe: expr '=' . expr_assign_pipe_right

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 1010
    "@ <|"                            shift, and go to state 1011
    "@@ <|"                           shift, and go to state 1012
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 1013
    expression_keyword      go to state 535
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign_pipe_right  go to state 1067
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1068
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 798

  503 expr: expr '?' . expr ':' expr
  514     | expr '?' . "as" "name"
  517     | expr '?' . "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr '?' . "as" basic_type_declaration
  545 expr_mtag: expr '?' . "as" "$f" '(' expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "as"                              shift, and go to state 1069
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1070
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 799

  477 expr: expr '|' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1071
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 800

  478 expr: expr '^' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1072
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 801

  476 expr: expr '&' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1073
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 802

  470 expr: expr '<' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1074
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 803

  471 expr: expr '>' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1075
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 804

  466 expr: expr '-' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1076
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 805

  465 expr: expr '+' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1077
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 806

  467 expr: expr '*' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1078
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 807

  468 expr: expr '/' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1079
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 808

  469 expr: expr '%' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1080
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 809

  430 expr_field: expr '.' . "name"
  431           | expr '.' . '.' "name"
  432           | expr '.' . "name" '(' ')'
  433           | expr '.' . "name" '(' expr_list ')'
  434           | expr '.' . "name" '(' '[' make_struct_fields ']' ')'
  435           | expr '.' . basic_type_declaration '(' ')'
  436           | expr '.' . basic_type_declaration '(' expr_list ')'
  439           | expr '.' . $@27 error $@28
  490 expr: expr '.' . '[' expr ']'
  492     | expr '.' . "?[" expr ']'
  494     | expr '.' . "?." "name"
  540 expr_mtag: expr '.' . "$f" '(' expr ')'
  542          | expr '.' . '.' "$f" '(' expr ')'
  543          | expr '.' . "?." "$f" '(' expr ')'

    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 478
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "?."        shift, and go to state 1081
    "?["        shift, and go to state 1082
    "$f"        shift, and go to state 1083
    "name"      shift, and go to state 1084
    '.'         shift, and go to state 1085
    '['         shift, and go to state 1086

    $default  reduce using rule 437 ($@27)

    $@27                    go to state 1087
    basic_type_declaration  go to state 1088


State 810

  489 expr: expr '[' . expr ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1089
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 811

  234 expr_call_pipe: expr expr_full_block_assumed_piped .

    $default  reduce using rule 234 (expr_call_pipe)


State 812

  445 expr_call: basic_type_declaration '(' . ')'
  446          | basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1090
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1091
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 813

  628 enum_list: enum_list . semicolon
  629          | enum_list . "name" semicolon
  630          | enum_list . "name" '=' expr semicolon
  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list . $@45 close_block

    "end of line"        shift, and go to state 13
    "name"               shift, and go to state 572
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 649 ($@45)

    semicolon  go to state 573
    $@45       go to state 1092


State 814

  630 enum_list: enum_list "name" '=' . expr semicolon

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1093
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 815

  629 enum_list: enum_list "name" semicolon .

    $default  reduce using rule 629 (enum_list)


State 816

  647 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name open_block $@42 enum_list $@43 close_block .

    $default  reduce using rule 647 (enum_declaration)


State 817

  130 optional_annotation_list: '[' . annotation_list ']'
  570 struct_variable_declaration_list: struct_variable_declaration_list '[' . annotation_list ']' semicolon

    "require"   shift, and go to state 65
    "private"   shift, and go to state 66
    "template"  shift, and go to state 67
    "|>"        shift, and go to state 68
    "::"        shift, and go to state 62
    "name"      shift, and go to state 63
    '!'         shift, and go to state 69
    '('         shift, and go to state 70

    annotation_declaration_name   go to state 71
    annotation_declaration_basic  go to state 72
    annotation_declaration        go to state 73
    annotation_list               go to state 1094
    name_in_namespace             go to state 75


State 818

  563 struct_variable_declaration_list: struct_variable_declaration_list semicolon .

    $default  reduce using rule 563 (struct_variable_declaration_list)


State 819

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  569                                 | struct_variable_declaration_list optional_annotation_list . "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "def"  shift, and go to state 1095


State 820

  664 optional_struct_variable_declaration_list: open_block struct_variable_declaration_list close_block .

    $default  reduce using rule 664 (optional_struct_variable_declaration_list)


State 821

  565 struct_variable_declaration_list: struct_variable_declaration_list $@35 . structure_variable_declaration semicolon

    "[["  shift, and go to state 229
    '@'   shift, and go to state 230

    $default  reduce using rule 548 (optional_field_annotation)

    metadata_argument_list          go to state 231
    optional_field_annotation       go to state 1096
    structure_variable_declaration  go to state 1097


State 822

  500 expr: "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' ')'
  501     | "generator" '<' . type_declaration_no_options '>' optional_capture_list '(' expr ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1098


State 823

  607 let_variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 607 (let_variable_name_with_pos_list)


State 824

  610 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1099


State 825

  611 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options semicolon .

    $default  reduce using rule 611 (let_variable_declaration)


State 826

  612 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  613                         | let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 1100
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1101
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 827

  615 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 615 (let_variable_declaration)


State 828

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  614 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1102
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 829

  734 type_declaration_no_options: "type" '<' $@50 type_declaration . '>' $@51
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1103


State 830

  757 type_declaration_no_options: "array" '<' $@55 type_declaration . '>' $@56
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1104


State 831

  760 type_declaration_no_options: "table" '<' $@57 table_type_pair . '>' $@58

    '>'  shift, and go to state 1105


State 832

  722 table_type_pair: type_declaration .
  723                | type_declaration . c_or_s type_declaration
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '|'                  shift, and go to state 430

    $default  reduce using rule 722 (table_type_pair)

    semicolon  go to state 626
    c_or_s     go to state 1106


State 833

  735 type_declaration_no_options: "typedecl" '(' expr ')' .

    $default  reduce using rule 735 (type_declaration_no_options)


State 834

  763 type_declaration_no_options: "iterator" '<' $@59 type_declaration . '>' $@60
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1107


State 835

  753 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration . '>' $@54
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1108


State 836

  710 auto_type_declaration: "auto" '(' "name" ')' .

    $default  reduce using rule 710 (auto_type_declaration)


State 837

  712 bitfield_bits: "name" .

    $default  reduce using rule 712 (bitfield_bits)


State 838

  713 bitfield_bits: bitfield_bits . semicolon "name"
  719 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits . '>' $@49

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '>'                  shift, and go to state 1109

    semicolon  go to state 1110


State 839

  767 type_declaration_no_options: "block" '<' $@61 type_declaration . '>' $@62
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1111


State 840

  770 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list . optional_function_type '>' $@64

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1112


State 841

  774 type_declaration_no_options: "function" '<' $@65 type_declaration . '>' $@66
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1113


State 842

  777 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list . optional_function_type '>' $@68

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1114


State 843

  781 type_declaration_no_options: "lambda" '<' $@69 type_declaration . '>' $@70
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1115


State 844

  784 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list . optional_function_type '>' $@72

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1116


State 845

  581 tuple_type_list: tuple_type .

    $default  reduce using rule 581 (tuple_type_list)


State 846

  582 tuple_type_list: tuple_type_list . c_or_s tuple_type
  787 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list . '>' $@74

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1117

    semicolon  go to state 626
    c_or_s     go to state 1118


State 847

  587 variant_type_list: variant_type .

    $default  reduce using rule 587 (variant_type_list)


State 848

  588 variant_type_list: variant_type_list . c_or_s variant_type
  790 type_declaration_no_options: "variant" '<' $@75 variant_type_list . '>' $@76

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1119

    semicolon  go to state 626
    c_or_s     go to state 1120


State 849

  711 auto_type_declaration: "$t" '(' expr ')' .

    $default  reduce using rule 711 (auto_type_declaration)


State 850

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 . type_declaration_no_options_list '>' '(' optional_expr_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1121
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1122


State 851

  736 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list . ')'

    ')'  shift, and go to state 1123


State 852

  739 type_declaration_no_options: type_declaration_no_options '-' '[' ']' .

    $default  reduce using rule 739 (type_declaration_no_options)


State 853

  724 dim_list: '[' expr ']' .

    $default  reduce using rule 724 (dim_list)


State 854

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  725 dim_list: dim_list '[' expr . ']'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 1124


State 855

  716 bitfield_alias_bits: bitfield_alias_bits "name" semicolon .

    $default  reduce using rule 716 (bitfield_alias_bits)


State 856

  808 bitfield_alias_declaration: "bitfield" optional_public_or_private_alias $@85 "name" $@86 open_block $@87 bitfield_alias_bits $@88 close_block .

    $default  reduce using rule 808 (bitfield_alias_declaration)


State 857

  580 tuple_type: "name" ':' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1125


State 858

  585 tuple_alias_type_list: tuple_alias_type_list tuple_type c_or_s .

    $default  reduce using rule 585 (tuple_alias_type_list)


State 859

  798 tuple_alias_declaration: "tuple" optional_public_or_private_alias $@77 "name" $@78 open_block $@79 tuple_alias_type_list $@80 close_block .

    $default  reduce using rule 798 (tuple_alias_declaration)


State 860

  586 variant_type: "name" ':' . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1126


State 861

  591 variant_alias_type_list: variant_alias_type_list variant_type c_or_s .

    $default  reduce using rule 591 (variant_alias_type_list)


State 862

  803 variant_alias_declaration: "variant" optional_public_or_private_alias $@81 "name" $@82 open_block $@83 variant_alias_type_list $@84 close_block .

    $default  reduce using rule 803 (variant_alias_declaration)


State 863

  573 function_argument_declaration_type: "$a" '(' expr ')' .

    $default  reduce using rule 573 (function_argument_declaration_type)


State 864

  669 variable_name_with_pos_list: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1127
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 865

  670 variable_name_with_pos_list: "name" "aka" . "name"

    "name"  shift, and go to state 1128


State 866

  593 copy_or_move: "<-" .

    $default  reduce using rule 593 (copy_or_move)


State 867

  671 variable_name_with_pos_list: variable_name_with_pos_list ',' . "name"
  672                            | variable_name_with_pos_list ',' . "name" "aka" "name"

    "name"  shift, and go to state 1129


State 868

  592 copy_or_move: '=' .

    $default  reduce using rule 592 (copy_or_move)


State 869

  597 variable_declaration_type: variable_name_with_pos_list ':' . type_declaration
  598                          | variable_name_with_pos_list ':' . type_declaration copy_or_move expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1130


State 870

  595 variable_declaration_no_type: variable_name_with_pos_list '&' .

    $default  reduce using rule 595 (variable_declaration_no_type)


State 871

  596 variable_declaration_no_type: variable_name_with_pos_list copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1131
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 872

  857 make_struct_decl: "struct" '<' $@89 . type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1132


State 873

  860 make_struct_decl: "class" '<' $@91 . type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1133


State 874

   86 expression_while_loop: "while" expr expression_block .

    $default  reduce using rule 86 (expression_while_loop)


State 875

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list . "in" expr_list expression_block
  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"

    "in"  shift, and go to state 1134
    ','   shift, and go to state 867


State 876

  288 new_type_declaration: '<' $@12 . type_declaration '>' $@13

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1135


State 877

  291 expr_new: "new" new_type_declaration '(' . use_initializer ')'
  292         | "new" new_type_declaration '(' . expr_list ')'
  293         | "new" new_type_declaration '(' . make_struct_single ')'
  294         | "new" new_type_declaration '(' . "uninitialized" make_struct_single ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "uninitialized"                   shift, and go to state 1136
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 847 (use_initializer)

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1137
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 736
    make_struct_single      go to state 1138
    use_initializer         go to state 1139
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 878

  341 expr_type_info: "typeinfo" '(' name_in_namespace . expr ')'
  342               | "typeinfo" '(' name_in_namespace . '<' "name" '>' expr ')'
  343               | "typeinfo" '(' name_in_namespace . '<' "name" c_or_s "name" '>' expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '<'                               shift, and go to state 1140
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1141
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 879

  345 expr_type_info: "typeinfo" name_in_namespace '<' . "name" '>' '(' expr ')'
  346               | "typeinfo" name_in_namespace '<' . "name" "end of expression" "name" '>' '(' expr ')'

    "name"  shift, and go to state 1142


State 880

  344 expr_type_info: "typeinfo" name_in_namespace '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1143
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 881

  340 expr_type_decl: "type" '<' $@20 . type_declaration '>' $@21

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1144


State 882

  883 make_dim_decl: "array" "struct" '<' . $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 881 ($@99)

    $@99  go to state 1145


State 883

  886 make_dim_decl: "array" "tuple" '<' . $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 884 ($@101)

    $@101  go to state 1146


State 884

  889 make_dim_decl: "array" "variant" '<' . $@103 variant_type_list '>' $@104 '(' make_variant_dim ')'

    $default  reduce using rule 887 ($@103)

    $@103  go to state 1147


State 885

  893 make_dim_decl: "array" '<' $@105 . type_declaration_no_options '>' $@106 '(' optional_expr_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1148


State 886

  348 expr_list: expr_list . ',' expr
  890 make_dim_decl: "array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 972

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1149


State 887

  303 expression_return: "return" "<-" expr_pipe .

    $default  reduce using rule 303 (expression_return)


State 888

  300 expression_return_no_pipe: "return" "<-" expr_list .
  348 expr_list: expr_list . ',' expr

    ','  shift, and go to state 889

    $default  reduce using rule 300 (expression_return_no_pipe)


State 889

  348 expr_list: expr_list ',' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1150
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 890

  387 expr_assign: expr "+=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1151
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 891

  388 expr_assign: expr "-=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1152
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 892

  390 expr_assign: expr "/=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1153
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 893

  389 expr_assign: expr "*=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1154
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 894

  391 expr_assign: expr "%=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1155
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 895

  381 expr_assign: expr "&=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1156
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 896

  382 expr_assign: expr "|=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1157
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 897

  383 expr_assign: expr "^=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1158
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 898

  392 expr_assign: expr "<<=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1159
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 899

  393 expr_assign: expr ">>=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1160
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 900

  379 expr_assign: expr "<-" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1161
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 901

  394 expr_assign: expr "<<<=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1162
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 902

  395 expr_assign: expr ">>>=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1163
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 903

  384 expr_assign: expr "&&=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1164
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 904

  385 expr_assign: expr "||=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1165
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 905

  386 expr_assign: expr "^^=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1166
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 906

  378 expr_assign: expr '=' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1167
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 907

  309 expression_try_catch: "try" expression_block "recover" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1168


State 908

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  905 make_table_decl: "table" '<' type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'
  906                | "table" '<' type_declaration_no_options . c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "const"              shift, and go to state 419
    "implicit"           shift, and go to state 420
    "explicit"           shift, and go to state 421
    "=="                 shift, and go to state 422
    "??"                 shift, and go to state 423
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '?'                  shift, and go to state 424
    '&'                  shift, and go to state 425
    '>'                  shift, and go to state 1169
    '-'                  shift, and go to state 426
    '['                  shift, and go to state 427
    '#'                  shift, and go to state 428

    semicolon  go to state 626
    c_or_s     go to state 1170
    dim_list   go to state 429


State 909

  904 make_table_decl: "table" '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1171


State 910

  285 expression_delete: "delete" "explicit" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 285 (expression_delete)


State 911

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  498     | "deref" '(' expr . ')'
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1172


State 912

   87 expression_with: "with" expr expression_block .

    $default  reduce using rule 87 (expression_with)


State 913

   89 expression_with_alias: "assume" "name" '=' . $@6 expr

    $default  reduce using rule 88 ($@6)

    $@6  go to state 1173


State 914

  331 expr_cast: "cast" '<' $@14 . type_declaration_no_options '>' $@15 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1174


State 915

  334 expr_cast: "upcast" '<' $@16 . type_declaration_no_options '>' $@17 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1175


State 916

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  499     | "addr" '(' expr . ')'
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1176


State 917

  337 expr_cast: "reinterpret" '<' $@18 . type_declaration_no_options '>' $@19 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1177


State 918

   60 expression_label: "label" "integer constant" ':' .

    $default  reduce using rule 60 (expression_label)


State 919

   61 expression_goto: "goto" "label" "integer constant" .

    $default  reduce using rule 61 (expression_goto)


State 920

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  530     | "unsafe" '(' expr . ')'
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1178


State 921

  897 make_dim_decl: "fixed_array" '<' $@107 . type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1179


State 922

  348 expr_list: expr_list . ',' expr
  894 make_dim_decl: "fixed_array" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 972

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1180


State 923

  866 make_struct_decl: "default" '<' $@95 . type_declaration_no_options '>' $@96 use_initializer

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1181


State 924

  875 make_tuple_call: "tuple" '<' $@97 . tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 624
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 845
    tuple_type_list              go to state 1182
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 629


State 925

  348 expr_list: expr_list . ',' expr
  872 make_tuple_call: "tuple" '(' expr_list . optional_comma ')'

    ','  shift, and go to state 972

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1183


State 926

  863 make_struct_decl: "variant" '<' $@93 . variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')'

    "name"  shift, and go to state 631

    variant_type       go to state 847
    variant_type_list  go to state 1184


State 927

  236 expr_call_pipe: "generator" '<' type_declaration_no_options . '>' optional_capture_list expr_full_block_assumed_piped
  500 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  501     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1185
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 928

  308 expression_yield: "yield" "<-" expr_pipe .

    $default  reduce using rule 308 (expression_yield)


State 929

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  305 expression_yield_no_pipe: "yield" "<-" expr .
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"    shift, and go to state 758
    "as"    shift, and go to state 759
    "+="    shift, and go to state 890
    "-="    shift, and go to state 891
    "/="    shift, and go to state 892
    "*="    shift, and go to state 893
    "%="    shift, and go to state 894
    "&="    shift, and go to state 895
    "|="    shift, and go to state 896
    "^="    shift, and go to state 897
    "<<"    shift, and go to state 768
    ">>"    shift, and go to state 769
    "++"    shift, and go to state 770
    "--"    shift, and go to state 771
    "<="    shift, and go to state 772
    "<<="   shift, and go to state 898
    ">>="   shift, and go to state 899
    ">="    shift, and go to state 775
    "=="    shift, and go to state 776
    "!="    shift, and go to state 777
    "->"    shift, and go to state 778
    "<-"    shift, and go to state 900
    "??"    shift, and go to state 780
    "?."    shift, and go to state 781
    "?["    shift, and go to state 782
    "<|"    shift, and go to state 783
    "|>"    shift, and go to state 784
    ":="    shift, and go to state 785
    "<<<"   shift, and go to state 786
    ">>>"   shift, and go to state 787
    "<<<="  shift, and go to state 901
    ">>>="  shift, and go to state 902
    "&&"    shift, and go to state 790
    "||"    shift, and go to state 791
    "^^"    shift, and go to state 792
    "&&="   shift, and go to state 903
    "||="   shift, and go to state 904
    "^^="   shift, and go to state 905
    ".."    shift, and go to state 796
    '='     shift, and go to state 906
    '?'     shift, and go to state 798
    '|'     shift, and go to state 799
    '^'     shift, and go to state 800
    '&'     shift, and go to state 801
    '<'     shift, and go to state 802
    '>'     shift, and go to state 803
    '-'     shift, and go to state 804
    '+'     shift, and go to state 805
    '*'     shift, and go to state 806
    '/'     shift, and go to state 807
    '%'     shift, and go to state 808
    '.'     shift, and go to state 809
    '['     shift, and go to state 810
    '$'     shift, and go to state 516
    '@'     shift, and go to state 695

    " <|"     reduce using rule 377 (expr_assign)
    $default  reduce using rule 305 (expression_yield_no_pipe)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 930

  354 block_or_lambda: '@' '@' .

    $default  reduce using rule 354 (block_or_lambda)


State 931

  366 expr_block: block_or_lambda optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block

    "capture"  shift, and go to state 998
    "[["       shift, and go to state 999

    $default  reduce using rule 362 (optional_capture_list)

    optional_capture_list  go to state 1186


State 932

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  532 expr_mtag: "$$" '(' expr . ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1187


State 933

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  533 expr_mtag: "$i" '(' expr . ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1188


State 934

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  534 expr_mtag: "$v" '(' expr . ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1189


State 935

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  535 expr_mtag: "$b" '(' expr . ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1190


State 936

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  536 expr_mtag: "$a" '(' expr . ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1191


State 937

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  538 expr_mtag: "$c" '(' expr . ')' '(' ')'
  539          | "$c" '(' expr . ')' '(' expr_list ')'
  540          | expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1192


State 938

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  913 array_comprehension: "[[" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']' ']'

    "in"  shift, and go to state 1193
    ','   shift, and go to state 867


State 939

  834 optional_block: "where" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 1194


State 940

  460 expr: '-' . expr
  739 type_declaration_no_options: type_declaration_no_options '-' . '[' ']'
  742                            | type_declaration_no_options '-' . "const"
  744                            | type_declaration_no_options '-' . '&'
  747                            | type_declaration_no_options '-' . '#'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "const"                           shift, and go to state 612
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '&'                               shift, and go to state 613
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 1195
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517
    '#'                               shift, and go to state 615

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 723
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 941

  724 dim_list: '[' . expr ']'
  731 type_declaration_no_options: type_declaration_no_options '[' . ']'
  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    ']'                               shift, and go to state 616
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    ']'  [reduce using rule 262 (optional_expr_list)]

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1196
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 942

  487 expr: '(' . expr_list optional_comma ')'
  488     | '(' . make_struct_single ')'
  851 make_struct_decl: "[[" type_declaration_no_options '(' . ')' optional_block optional_trailing_delim_sqr_sqr
  852                 | "[[" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1197
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 735
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 736
    make_struct_single      go to state 737
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 943

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  867 make_tuple: expr .
  868           | expr . "=>" expr

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "=>"   shift, and go to state 1198
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 867 (make_tuple)


State 944

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  825 make_struct_dim: make_struct_fields .

    ','  shift, and go to state 978

    $default  reduce using rule 825 (make_struct_dim)


State 945

  826 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  849 make_struct_decl: "[[" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 939
    "end of expression"  shift, and go to state 1199

    $default  reduce using rule 833 (optional_block)

    optional_block  go to state 1200


State 946

  850 make_struct_decl: "[[" type_declaration_no_options optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1201
    ",]]"  shift, and go to state 1202
    ']'    shift, and go to state 1203

    optional_trailing_delim_sqr_sqr  go to state 1204


State 947

  869 make_tuple: make_tuple . ',' expr
  876 make_dim: make_tuple .

    ','  shift, and go to state 1205

    $default  reduce using rule 876 (make_dim)


State 948

  877 make_dim: make_dim . "end of expression" make_tuple
  879 make_dim_decl: "[[" type_declaration_no_options make_dim . optional_trailing_semicolon_sqr_sqr

    "end of expression"  shift, and go to state 1206
    ";]]"                shift, and go to state 1207
    ']'                  shift, and go to state 1208

    optional_trailing_semicolon_sqr_sqr  go to state 1209


State 949

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  914 array_comprehension: "[{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "in"  shift, and go to state 1210
    ','   shift, and go to state 867


State 950

  487 expr: '(' . expr_list optional_comma ')'
  488     | '(' . make_struct_single ')'
  854 make_struct_decl: "[{" type_declaration_no_options '(' . ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1211
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 735
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 736
    make_struct_single      go to state 737
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 951

  826 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  853 make_struct_decl: "[{" type_declaration_no_options make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 939
    "end of expression"  shift, and go to state 1199

    $default  reduce using rule 833 (optional_block)

    optional_block  go to state 1212


State 952

  877 make_dim: make_dim . "end of expression" make_tuple
  880 make_dim_decl: "[{" type_declaration_no_options make_dim . optional_trailing_semicolon_cur_sqr

    "end of code block"  shift, and go to state 1213
    "end of expression"  shift, and go to state 1206
    ";}]"                shift, and go to state 1214

    optional_trailing_semicolon_cur_sqr  go to state 1215


State 953

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  916 array_comprehension: "{{" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "in"  shift, and go to state 1216
    ','   shift, and go to state 867


State 954

  870 make_map_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1217
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 955

  835 optional_trailing_semicolon_cur_cur: "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1218


State 956

  899 make_table: make_table "end of expression" . make_map_tuple

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 712
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_map_tuple          go to state 1219
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 957

  836 optional_trailing_semicolon_cur_cur: ";}}" .

    $default  reduce using rule 836 (optional_trailing_semicolon_cur_cur)


State 958

  903 make_table_decl: "{{" make_table optional_trailing_semicolon_cur_cur .

    $default  reduce using rule 903 (make_table_decl)


State 959

  272 expression_keyword: "keyword" '<' $@8 . type_declaration_no_options_list '>' $@9 expr

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1220
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1122


State 960

  261 expr_keyword: "keyword" expr expression_block .

    $default  reduce using rule 261 (expr_keyword)


State 961

  275 expression_keyword: "type function" '<' $@10 . type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    type_declaration_no_options_list  go to state 1221
    name_in_namespace                 go to state 363
    basic_type_declaration            go to state 364
    structure_type_declaration        go to state 365
    auto_type_declaration             go to state 366
    bitfield_type_declaration         go to state 367
    type_declaration_no_options       go to state 368
    type_declaration                  go to state 1122


State 962

   37 string_builder: "start of the string" string_builder_body "end of the string" .

    $default  reduce using rule 37 (string_builder)


State 963

   36 string_builder_body: string_builder_body "{" . expr optional_format_string "}"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1222
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 964

   25 character_sequence: character_sequence . STRING_CHARACTER
   26                   | character_sequence . STRING_CHARACTER_ESC
   35 string_builder_body: string_builder_body character_sequence .

    STRING_CHARACTER      shift, and go to state 233
    STRING_CHARACTER_ESC  shift, and go to state 234

    $default  reduce using rule 35 (string_builder_body)


State 965

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list . "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "in"  shift, and go to state 1223
    ','   shift, and go to state 867


State 966

  902 make_table_decl: "begin of code block" optional_expr_map_tuple_list "end of code block" .

    $default  reduce using rule 902 (make_table_decl)


State 967

  901 expr_map_tuple_list: expr_map_tuple_list ',' . make_map_tuple
  910 optional_comma: ',' .

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 910 (optional_comma)

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 712
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_map_tuple          go to state 1224
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 968

  267 optional_expr_map_tuple_list: expr_map_tuple_list optional_comma .

    $default  reduce using rule 267 (optional_expr_map_tuple_list)


State 969

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  911 array_comprehension: '[' "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1225
    ','   shift, and go to state 867


State 970

  912 array_comprehension: '[' "iterator" "for" . variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_name_with_pos_list  go to state 1226


State 971

  878 make_dim_decl: '[' optional_expr_list ']' .

    $default  reduce using rule 878 (make_dim_decl)


State 972

  348 expr_list: expr_list ',' . expr
  910 optional_comma: ',' .

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 910 (optional_comma)

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1150
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 973

  263 optional_expr_list: expr_list optional_comma .

    $default  reduce using rule 263 (optional_expr_list)


State 974

  818 make_struct_fields: "$f" '(' . expr ')' copy_or_move expr
  819                   | "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1227
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 975

  815 make_struct_fields: "name" ":=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1228
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 976

  814 make_struct_fields: "name" copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1229
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 977

  487 expr: '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1230


State 978

  816 make_struct_fields: make_struct_fields ',' . "name" copy_or_move expr
  817                   | make_struct_fields ',' . "name" ":=" expr
  820                   | make_struct_fields ',' . "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields ',' . "$f" '(' expr ')' ":=" expr

    "$f"    shift, and go to state 1231
    "name"  shift, and go to state 1232


State 979

  488 expr: '(' make_struct_single ')' .

    $default  reduce using rule 488 (expr)


State 980

  422 func_addr_name: "$i" . '(' expr ')'

    '('  shift, and go to state 1233


State 981

  547 expr_mtag: '@' '@' "$c" . '(' expr ')'

    '('  shift, and go to state 1234


State 982

  426 func_addr_expr: '@' '@' '<' . $@23 type_declaration_no_options '>' $@24 func_addr_name
  429               | '@' '@' '<' . $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    ':'       reduce using rule 427 ($@25)
    '>'       reduce using rule 427 ($@25)
    '('       reduce using rule 427 ($@25)
    $default  reduce using rule 424 ($@23)

    $@23  go to state 1235
    $@25  go to state 1236


State 983

  421 func_addr_name: name_in_namespace .

    $default  reduce using rule 421 (func_addr_name)


State 984

  423 func_addr_expr: '@' '@' func_addr_name .

    $default  reduce using rule 423 (func_addr_expr)


State 985

   80 expression_if_then_else: if_or_static_if expr expression_block . expression_else

    "else"         shift, and go to state 1237
    "elif"         shift, and go to state 1238
    "static_elif"  shift, and go to state 1239

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1240
    expression_else      go to state 1241


State 986

   82 expression_if_then_else: expression_if_one_liner "if" $@4 . expr expression_else_one_liner semicolon

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1242
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 987

  233 expression_block: open_block expressions close_block "finally" open_block . expressions close_block

    $default  reduce using rule 258 (expressions)

    expressions  go to state 1243


State 988

  369 expr_full_block_assumed_piped: block_or_lambda $@22 . optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block

    '['  shift, and go to state 16

    $default  reduce using rule 129 (optional_annotation_list)

    optional_annotation_list  go to state 1244


State 989

  441 expr_call: name_in_namespace '(' "uninitialized" . ')'
  443          | name_in_namespace '(' "uninitialized" . make_struct_single ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    ')'     shift, and go to state 1246

    make_struct_fields  go to state 736
    make_struct_single  go to state 1247


State 990

  417 expr_named_call: name_in_namespace '(' '[' . make_struct_fields ']' ')'
  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 1248
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 991

  440 expr_call: name_in_namespace '(' ')' .

    $default  reduce using rule 440 (expr_call)


State 992

  348 expr_list: expr_list . ',' expr
  418 expr_named_call: name_in_namespace '(' expr_list . ',' '[' make_struct_fields ']' ')'
  444 expr_call: name_in_namespace '(' expr_list . ')'

    ','  shift, and go to state 1249
    ')'  shift, and go to state 1250


State 993

  442 expr_call: name_in_namespace '(' make_struct_single . ')'

    ')'  shift, and go to state 1251


State 994

  319 tuple_expansion_variable_declaration: "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" . tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  324                                     | "[[" . tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1252

    tuple_expansion  go to state 1253


State 995

  321 tuple_expansion_variable_declaration: '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | '(' . tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | '(' . tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe

    "name"  shift, and go to state 1252

    tuple_expansion  go to state 1254


State 996

  328 expression_let: kwd_let optional_in_scope tuple_expansion_variable_declaration .

    $default  reduce using rule 328 (expression_let)


State 997

  327 expression_let: kwd_let optional_in_scope let_variable_declaration .

    $default  reduce using rule 327 (expression_let)


State 998

  364 optional_capture_list: "capture" . '(' capture_list ')'

    '('  shift, and go to state 1255


State 999

  363 optional_capture_list: "[[" . capture_list ']' ']'

    "<-"    shift, and go to state 1256
    ":="    shift, and go to state 1257
    "name"  shift, and go to state 1258
    '='     shift, and go to state 1259
    '&'     shift, and go to state 1260

    capture_entry  go to state 1261
    capture_list   go to state 1262


State 1000

  367 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1263


State 1001

  276 expr_pipe: expr_assign " <|" expr_block .

    $default  reduce using rule 276 (expr_pipe)


State 1002

  506 expr: expr "is" "type" . '<' $@29 type_declaration_no_options '>' $@30

    '<'  shift, and go to state 1264


State 1003

  546 expr_mtag: expr "is" "$f" . '(' expr ')'

    '('  shift, and go to state 1265


State 1004

  508 expr: expr "is" "name" .

    $default  reduce using rule 508 (expr)


State 1005

  507 expr: expr "is" basic_type_declaration .

    $default  reduce using rule 507 (expr)


State 1006

  512 expr: expr "as" "type" . '<' $@31 type_declaration '>' $@32

    '<'  shift, and go to state 1266


State 1007

  544 expr_mtag: expr "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1267


State 1008

  509 expr: expr "as" "name" .

    $default  reduce using rule 509 (expr)


State 1009

  513 expr: expr "as" basic_type_declaration .

    $default  reduce using rule 513 (expr)


State 1010

  398 expr_assign_pipe_right: "$ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 1268


State 1011

  396 expr_assign_pipe_right: "@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 1269


State 1012

  397 expr_assign_pipe_right: "@@ <|" . expr_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '$'                    shift, and go to state 516
    '@'                    shift, and go to state 695

    open_block        go to state 297
    expression_block  go to state 696
    block_or_lambda   go to state 697
    expr_block        go to state 1270


State 1013

  399 expr_assign_pipe_right: expr_call_pipe .

    $default  reduce using rule 399 (expr_assign_pipe_right)


State 1014

  408 expr_assign_pipe: expr "+=" expr_assign_pipe_right .

    $default  reduce using rule 408 (expr_assign_pipe)


State 1015

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  387 expr_assign: expr "+=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 387 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1016

  409 expr_assign_pipe: expr "-=" expr_assign_pipe_right .

    $default  reduce using rule 409 (expr_assign_pipe)


State 1017

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  388 expr_assign: expr "-=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 388 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1018

  411 expr_assign_pipe: expr "/=" expr_assign_pipe_right .

    $default  reduce using rule 411 (expr_assign_pipe)


State 1019

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  390 expr_assign: expr "/=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 390 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1020

  410 expr_assign_pipe: expr "*=" expr_assign_pipe_right .

    $default  reduce using rule 410 (expr_assign_pipe)


State 1021

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  389 expr_assign: expr "*=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 389 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1022

  412 expr_assign_pipe: expr "%=" expr_assign_pipe_right .

    $default  reduce using rule 412 (expr_assign_pipe)


State 1023

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  391 expr_assign: expr "%=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 391 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1024

  402 expr_assign_pipe: expr "&=" expr_assign_pipe_right .

    $default  reduce using rule 402 (expr_assign_pipe)


State 1025

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  381 expr_assign: expr "&=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 381 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1026

  403 expr_assign_pipe: expr "|=" expr_assign_pipe_right .

    $default  reduce using rule 403 (expr_assign_pipe)


State 1027

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  382 expr_assign: expr "|=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 382 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1028

  404 expr_assign_pipe: expr "^=" expr_assign_pipe_right .

    $default  reduce using rule 404 (expr_assign_pipe)


State 1029

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  383 expr_assign: expr "^=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 383 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1030

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  461     | expr "<<" expr .
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '-'   shift, and go to state 804
    '+'   shift, and go to state 805
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 461 (expr)


State 1031

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  462     | expr ">>" expr .
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '-'   shift, and go to state 804
    '+'   shift, and go to state 805
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 462 (expr)


State 1032

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  474     | expr "<=" expr .
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 474 (expr)


State 1033

  413 expr_assign_pipe: expr "<<=" expr_assign_pipe_right .

    $default  reduce using rule 413 (expr_assign_pipe)


State 1034

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  392 expr_assign: expr "<<=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 392 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1035

  414 expr_assign_pipe: expr ">>=" expr_assign_pipe_right .

    $default  reduce using rule 414 (expr_assign_pipe)


State 1036

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  393 expr_assign: expr ">>=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 393 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1037

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  475     | expr ">=" expr .
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 475 (expr)


State 1038

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  472     | expr "==" expr .
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 472 (expr)


State 1039

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  473     | expr "!=" expr .
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 473 (expr)


State 1040

  419 expr_method_call: expr "->" "name" . '(' ')'
  420                 | expr "->" "name" . '(' expr_list ')'

    '('  shift, and go to state 1271


State 1041

  401 expr_assign_pipe: expr "<-" expr_assign_pipe_right .

    $default  reduce using rule 401 (expr_assign_pipe)


State 1042

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  379 expr_assign: expr "<-" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 379 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1043

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  502     | expr "??" expr .
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 502 (expr)


State 1044

  541 expr_mtag: expr "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1272


State 1045

  493 expr: expr "?." "name" .

    $default  reduce using rule 493 (expr)


State 1046

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  491     | expr "?[" expr . ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 1273


State 1047

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  526     | expr "<|" expr .
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 526 (expr)


State 1048

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  527     | expr "|>" expr .
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "->"  shift, and go to state 778
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 527 (expr)


State 1049

  445 expr_call: basic_type_declaration . '(' ')'
  446          | basic_type_declaration . '(' expr_list ')'
  528 expr: expr "|>" basic_type_declaration .

    '('  shift, and go to state 812

    $default  reduce using rule 528 (expr)


State 1050

  380 expr_assign: expr ":=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 380 (expr_assign)


State 1051

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  463     | expr "<<<" expr .
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '-'   shift, and go to state 804
    '+'   shift, and go to state 805
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 463 (expr)


State 1052

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  464     | expr ">>>" expr .
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '-'   shift, and go to state 804
    '+'   shift, and go to state 805
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 464 (expr)


State 1053

  415 expr_assign_pipe: expr "<<<=" expr_assign_pipe_right .

    $default  reduce using rule 415 (expr_assign_pipe)


State 1054

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  394 expr_assign: expr "<<<=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 394 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1055

  416 expr_assign_pipe: expr ">>>=" expr_assign_pipe_right .

    $default  reduce using rule 416 (expr_assign_pipe)


State 1056

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  395 expr_assign: expr ">>>=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 395 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1057

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  479     | expr "&&" expr .
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 479 (expr)


State 1058

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  480     | expr "||" expr .
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "^^"   shift, and go to state 792
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 480 (expr)


State 1059

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  481     | expr "^^" expr .
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 481 (expr)


State 1060

  405 expr_assign_pipe: expr "&&=" expr_assign_pipe_right .

    $default  reduce using rule 405 (expr_assign_pipe)


State 1061

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  384 expr_assign: expr "&&=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 384 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1062

  406 expr_assign_pipe: expr "||=" expr_assign_pipe_right .

    $default  reduce using rule 406 (expr_assign_pipe)


State 1063

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  385 expr_assign: expr "||=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 385 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1064

  407 expr_assign_pipe: expr "^^=" expr_assign_pipe_right .

    $default  reduce using rule 407 (expr_assign_pipe)


State 1065

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  386 expr_assign: expr "^^=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 386 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1066

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  482     | expr ".." expr .
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    ".."  error (nonassociative)

    $default  reduce using rule 482 (expr)


State 1067

  400 expr_assign_pipe: expr '=' expr_assign_pipe_right .

    $default  reduce using rule 400 (expr_assign_pipe)


State 1068

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  378 expr_assign: expr '=' expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    '$'    shift, and go to state 516
    '@'    shift, and go to state 695

    $default  reduce using rule 378 (expr_assign)

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1069

  514 expr: expr '?' "as" . "name"
  517     | expr '?' "as" . "type" '<' $@33 type_declaration '>' $@34
  518     | expr '?' "as" . basic_type_declaration
  545 expr_mtag: expr '?' "as" . "$f" '(' expr ')'

    "type"      shift, and go to state 1274
    "bool"      shift, and go to state 328
    "void"      shift, and go to state 329
    "string"    shift, and go to state 330
    "int"       shift, and go to state 332
    "int2"      shift, and go to state 333
    "int3"      shift, and go to state 334
    "int4"      shift, and go to state 335
    "uint"      shift, and go to state 336
    "bitfield"  shift, and go to state 478
    "uint2"     shift, and go to state 338
    "uint3"     shift, and go to state 339
    "uint4"     shift, and go to state 340
    "float"     shift, and go to state 341
    "float2"    shift, and go to state 342
    "float3"    shift, and go to state 343
    "float4"    shift, and go to state 344
    "range"     shift, and go to state 345
    "urange"    shift, and go to state 346
    "range64"   shift, and go to state 347
    "urange64"  shift, and go to state 348
    "int64"     shift, and go to state 350
    "uint64"    shift, and go to state 351
    "double"    shift, and go to state 352
    "int8"      shift, and go to state 355
    "uint8"     shift, and go to state 356
    "int16"     shift, and go to state 357
    "uint16"    shift, and go to state 358
    "$f"        shift, and go to state 1275
    "name"      shift, and go to state 1276

    basic_type_declaration  go to state 1277


State 1070

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  503     | expr '?' expr . ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    ':'    shift, and go to state 1278
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810


State 1071

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  477     | expr '|' expr .
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 477 (expr)


State 1072

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  478     | expr '^' expr .
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 478 (expr)


State 1073

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  476     | expr '&' expr .
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 476 (expr)


State 1074

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  470     | expr '<' expr .
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 470 (expr)


State 1075

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  471     | expr '>' expr .
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 471 (expr)


State 1076

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  466     | expr '-' expr .
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 466 (expr)


State 1077

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  465     | expr '+' expr .
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '*'   shift, and go to state 806
    '/'   shift, and go to state 807
    '%'   shift, and go to state 808
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 465 (expr)


State 1078

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  467     | expr '*' expr .
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 467 (expr)


State 1079

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  468     | expr '/' expr .
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 468 (expr)


State 1080

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  469     | expr '%' expr .
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"  shift, and go to state 758
    "as"  shift, and go to state 759
    "++"  shift, and go to state 770
    "--"  shift, and go to state 771
    "->"  shift, and go to state 778
    "??"  shift, and go to state 780
    "?."  shift, and go to state 781
    "?["  shift, and go to state 782
    "<|"  shift, and go to state 783
    "|>"  shift, and go to state 784
    '.'   shift, and go to state 809
    '['   shift, and go to state 810

    $default  reduce using rule 469 (expr)


State 1081

  494 expr: expr '.' "?." . "name"
  543 expr_mtag: expr '.' "?." . "$f" '(' expr ')'

    "$f"    shift, and go to state 1279
    "name"  shift, and go to state 1280


State 1082

  492 expr: expr '.' "?[" . expr ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1281
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1083

  540 expr_mtag: expr '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1282


State 1084

  430 expr_field: expr '.' "name" .
  432           | expr '.' "name" . '(' ')'
  433           | expr '.' "name" . '(' expr_list ')'
  434           | expr '.' "name" . '(' '[' make_struct_fields ']' ')'

    '('  shift, and go to state 1283

    '('       [reduce using rule 430 (expr_field)]
    $default  reduce using rule 430 (expr_field)


State 1085

  431 expr_field: expr '.' '.' . "name"
  542 expr_mtag: expr '.' '.' . "$f" '(' expr ')'

    "$f"    shift, and go to state 1284
    "name"  shift, and go to state 1285


State 1086

  490 expr: expr '.' '[' . expr ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1286
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1087

  439 expr_field: expr '.' $@27 . error $@28

    error  shift, and go to state 1287


State 1088

  435 expr_field: expr '.' basic_type_declaration . '(' ')'
  436           | expr '.' basic_type_declaration . '(' expr_list ')'

    '('  shift, and go to state 1288


State 1089

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  489     | expr '[' expr . ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 1289


State 1090

  445 expr_call: basic_type_declaration '(' ')' .

    $default  reduce using rule 445 (expr_call)


State 1091

  348 expr_list: expr_list . ',' expr
  446 expr_call: basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 889
    ')'  shift, and go to state 1290


State 1092

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 . close_block

    "close scope"        shift, and go to state 146
    "end of code block"  shift, and go to state 147

    close_block  go to state 1291


State 1093

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  630 enum_list: enum_list "name" '=' expr . semicolon

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810

    semicolon  go to state 1292


State 1094

  128 annotation_list: annotation_list . ',' annotation_declaration
  130 optional_annotation_list: '[' annotation_list . ']'
  570 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list . ']' semicolon

    ','  shift, and go to state 113
    ']'  shift, and go to state 1293


State 1095

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon
  569                                 | struct_variable_declaration_list optional_annotation_list "def" . optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "public"   shift, and go to state 1294
    "private"  shift, and go to state 1295

    $default  reduce using rule 556 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1296


State 1096

  561 structure_variable_declaration: optional_field_annotation . optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration

    "static"  shift, and go to state 1297

    $default  reduce using rule 559 (optional_static_member_variable)

    optional_static_member_variable  go to state 1298


State 1097

  565 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1299


State 1098

  500 expr: "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' ')'
  501     | "generator" '<' type_declaration_no_options . '>' optional_capture_list '(' expr ')'
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1300
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1099

  610 let_variable_name_with_pos_list: let_variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 610 (let_variable_name_with_pos_list)


State 1100

  613 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 613 (let_variable_declaration)


State 1101

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  612 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1301
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1102

  614 let_variable_declaration: let_variable_name_with_pos_list optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 614 (let_variable_declaration)


State 1103

  734 type_declaration_no_options: "type" '<' $@50 type_declaration '>' . $@51

    $default  reduce using rule 733 ($@51)

    $@51  go to state 1302


State 1104

  757 type_declaration_no_options: "array" '<' $@55 type_declaration '>' . $@56

    $default  reduce using rule 756 ($@56)

    $@56  go to state 1303


State 1105

  760 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' . $@58

    $default  reduce using rule 759 ($@58)

    $@58  go to state 1304


State 1106

  723 table_type_pair: type_declaration c_or_s . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1305


State 1107

  763 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' . $@60

    $default  reduce using rule 762 ($@60)

    $@60  go to state 1306


State 1108

  753 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' . $@54

    $default  reduce using rule 752 ($@54)

    $@54  go to state 1307


State 1109

  719 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' . $@49

    $default  reduce using rule 718 ($@49)

    $@49  go to state 1308


State 1110

  713 bitfield_bits: bitfield_bits semicolon . "name"

    "name"  shift, and go to state 1309


State 1111

  767 type_declaration_no_options: "block" '<' $@61 type_declaration '>' . $@62

    $default  reduce using rule 766 ($@62)

    $@62  go to state 1310


State 1112

  770 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type . '>' $@64

    '>'  shift, and go to state 1311


State 1113

  774 type_declaration_no_options: "function" '<' $@65 type_declaration '>' . $@66

    $default  reduce using rule 773 ($@66)

    $@66  go to state 1312


State 1114

  777 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type . '>' $@68

    '>'  shift, and go to state 1313


State 1115

  781 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' . $@70

    $default  reduce using rule 780 ($@70)

    $@70  go to state 1314


State 1116

  784 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type . '>' $@72

    '>'  shift, and go to state 1315


State 1117

  787 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' . $@74

    $default  reduce using rule 786 ($@74)

    $@74  go to state 1316


State 1118

  582 tuple_type_list: tuple_type_list c_or_s . tuple_type

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 624
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 1317
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 629


State 1119

  790 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' . $@76

    $default  reduce using rule 789 ($@76)

    $@76  go to state 1318


State 1120

  588 variant_type_list: variant_type_list c_or_s . variant_type

    "name"  shift, and go to state 631

    variant_type  go to state 1319


State 1121

  269 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list . '>' '(' optional_expr_list ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1320

    semicolon  go to state 626
    c_or_s     go to state 1321


State 1122

  268 type_declaration_no_options_list: type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 268 (type_declaration_no_options_list)


State 1123

  736 type_declaration_no_options: '$' name_in_namespace '(' optional_expr_list ')' .

    $default  reduce using rule 736 (type_declaration_no_options)


State 1124

  725 dim_list: dim_list '[' expr ']' .

    $default  reduce using rule 725 (dim_list)


State 1125

  580 tuple_type: "name" ':' type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 580 (tuple_type)


State 1126

  586 variant_type: "name" ':' type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 586 (variant_type)


State 1127

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  669 variable_name_with_pos_list: "$i" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1322


State 1128

  670 variable_name_with_pos_list: "name" "aka" "name" .

    $default  reduce using rule 670 (variable_name_with_pos_list)


State 1129

  671 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" .
  672                            | variable_name_with_pos_list ',' "name" . "aka" "name"

    "aka"  shift, and go to state 1323

    $default  reduce using rule 671 (variable_name_with_pos_list)


State 1130

  597 variable_declaration_type: variable_name_with_pos_list ':' type_declaration .
  598                          | variable_name_with_pos_list ':' type_declaration . copy_or_move expr
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    "<-"  shift, and go to state 866
    '='   shift, and go to state 868
    '|'   shift, and go to state 430

    $default  reduce using rule 597 (variable_declaration_type)

    copy_or_move  go to state 1324


State 1131

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  596 variable_declaration_no_type: variable_name_with_pos_list copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 596 (variable_declaration_no_type)


State 1132

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options . '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1325
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1133

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options . '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1326
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1134

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" . expr_list expression_block

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1327
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1135

  288 new_type_declaration: '<' $@12 type_declaration . '>' $@13
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1328


State 1136

  294 expr_new: "new" new_type_declaration '(' "uninitialized" . make_struct_single ')'
  848 use_initializer: "uninitialized" .

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    $default  reduce using rule 848 (use_initializer)

    make_struct_fields  go to state 736
    make_struct_single  go to state 1329


State 1137

  292 expr_new: "new" new_type_declaration '(' expr_list . ')'
  348 expr_list: expr_list . ',' expr

    ','  shift, and go to state 889
    ')'  shift, and go to state 1330


State 1138

  293 expr_new: "new" new_type_declaration '(' make_struct_single . ')'

    ')'  shift, and go to state 1331


State 1139

  291 expr_new: "new" new_type_declaration '(' use_initializer . ')'

    ')'  shift, and go to state 1332


State 1140

  342 expr_type_info: "typeinfo" '(' name_in_namespace '<' . "name" '>' expr ')'
  343               | "typeinfo" '(' name_in_namespace '<' . "name" c_or_s "name" '>' expr ')'

    "name"  shift, and go to state 1333


State 1141

  341 expr_type_info: "typeinfo" '(' name_in_namespace expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1334


State 1142

  345 expr_type_info: "typeinfo" name_in_namespace '<' "name" . '>' '(' expr ')'
  346               | "typeinfo" name_in_namespace '<' "name" . "end of expression" "name" '>' '(' expr ')'

    "end of expression"  shift, and go to state 1335
    '>'                  shift, and go to state 1336


State 1143

  344 expr_type_info: "typeinfo" name_in_namespace '(' expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1337


State 1144

  340 expr_type_decl: "type" '<' $@20 type_declaration . '>' $@21
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1338


State 1145

  883 make_dim_decl: "array" "struct" '<' $@99 . type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1339


State 1146

  886 make_dim_decl: "array" "tuple" '<' $@101 . tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 624
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    tuple_type                   go to state 845
    tuple_type_list              go to state 1340
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 629


State 1147

  889 make_dim_decl: "array" "variant" '<' $@103 . variant_type_list '>' $@104 '(' make_variant_dim ')'

    "name"  shift, and go to state 631

    variant_type       go to state 847
    variant_type_list  go to state 1341


State 1148

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options . '>' $@106 '(' optional_expr_list ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1342
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1149

  890 make_dim_decl: "array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1343


State 1150

  348 expr_list: expr_list ',' expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 348 (expr_list)


State 1151

  387 expr_assign: expr "+=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 387 (expr_assign)


State 1152

  388 expr_assign: expr "-=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 388 (expr_assign)


State 1153

  390 expr_assign: expr "/=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 390 (expr_assign)


State 1154

  389 expr_assign: expr "*=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 389 (expr_assign)


State 1155

  391 expr_assign: expr "%=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 391 (expr_assign)


State 1156

  381 expr_assign: expr "&=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 381 (expr_assign)


State 1157

  382 expr_assign: expr "|=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 382 (expr_assign)


State 1158

  383 expr_assign: expr "^=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 383 (expr_assign)


State 1159

  392 expr_assign: expr "<<=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 392 (expr_assign)


State 1160

  393 expr_assign: expr ">>=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 393 (expr_assign)


State 1161

  379 expr_assign: expr "<-" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 379 (expr_assign)


State 1162

  394 expr_assign: expr "<<<=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 394 (expr_assign)


State 1163

  395 expr_assign: expr ">>>=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 395 (expr_assign)


State 1164

  384 expr_assign: expr "&&=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 384 (expr_assign)


State 1165

  385 expr_assign: expr "||=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 385 (expr_assign)


State 1166

  386 expr_assign: expr "^^=" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 386 (expr_assign)


State 1167

  378 expr_assign: expr '=' expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 378 (expr_assign)


State 1168

  309 expression_try_catch: "try" expression_block "recover" expression_block .

    $default  reduce using rule 309 (expression_try_catch)


State 1169

  905 make_table_decl: "table" '<' type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1344


State 1170

  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s . type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')'

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1345


State 1171

  904 make_table_decl: "table" '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 904 (make_table_decl)


State 1172

  498 expr: "deref" '(' expr ')' .

    $default  reduce using rule 498 (expr)


State 1173

   89 expression_with_alias: "assume" "name" '=' $@6 . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1346
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1174

  331 expr_cast: "cast" '<' $@14 type_declaration_no_options . '>' $@15 expr
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1347
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1175

  334 expr_cast: "upcast" '<' $@16 type_declaration_no_options . '>' $@17 expr
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1348
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1176

  499 expr: "addr" '(' expr ')' .

    $default  reduce using rule 499 (expr)


State 1177

  337 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options . '>' $@19 expr
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1349
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1178

  530 expr: "unsafe" '(' expr ')' .

    $default  reduce using rule 530 (expr)


State 1179

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options . '>' $@108 '(' expr_list optional_comma ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1350
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1180

  894 make_dim_decl: "fixed_array" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1351


State 1181

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  866 make_struct_decl: "default" '<' $@95 type_declaration_no_options . '>' $@96 use_initializer

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1352
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1182

  582 tuple_type_list: tuple_type_list . c_or_s tuple_type
  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list . '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1353

    semicolon  go to state 626
    c_or_s     go to state 1118


State 1183

  872 make_tuple_call: "tuple" '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1354


State 1184

  588 variant_type_list: variant_type_list . c_or_s variant_type
  863 make_struct_decl: "variant" '<' $@93 variant_type_list . '>' $@94 '(' use_initializer make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1355

    semicolon  go to state 626
    c_or_s     go to state 1120


State 1185

  236 expr_call_pipe: "generator" '<' type_declaration_no_options '>' . optional_capture_list expr_full_block_assumed_piped
  500 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  501     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 998
    "[["       shift, and go to state 999

    $default  reduce using rule 362 (optional_capture_list)

    optional_capture_list  go to state 1356


State 1186

  366 expr_block: block_or_lambda optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type block_or_simple_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1357


State 1187

  532 expr_mtag: "$$" '(' expr ')' .

    $default  reduce using rule 532 (expr_mtag)


State 1188

  533 expr_mtag: "$i" '(' expr ')' .

    $default  reduce using rule 533 (expr_mtag)


State 1189

  534 expr_mtag: "$v" '(' expr ')' .

    $default  reduce using rule 534 (expr_mtag)


State 1190

  535 expr_mtag: "$b" '(' expr ')' .

    $default  reduce using rule 535 (expr_mtag)


State 1191

  536 expr_mtag: "$a" '(' expr ')' .

    $default  reduce using rule 536 (expr_mtag)


State 1192

  538 expr_mtag: "$c" '(' expr ')' . '(' ')'
  539          | "$c" '(' expr ')' . '(' expr_list ')'

    '('  shift, and go to state 1358


State 1193

  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1359
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1194

  834 optional_block: "where" expr_block .

    $default  reduce using rule 834 (optional_block)


State 1195

  739 type_declaration_no_options: type_declaration_no_options '-' '[' . ']'
  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    ']'                               shift, and go to state 852
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    ']'  [reduce using rule 262 (optional_expr_list)]

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1196

  347 expr_list: expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  724 dim_list: '[' expr . ']'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 853

    ']'       [reduce using rule 347 (expr_list)]
    $default  reduce using rule 347 (expr_list)


State 1197

  851 make_struct_decl: "[[" type_declaration_no_options '(' ')' . optional_block optional_trailing_delim_sqr_sqr
  852                 | "[[" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_sqr_sqr

    "where"  shift, and go to state 939
    "$f"     shift, and go to state 733
    "name"   shift, and go to state 1245

    $default  reduce using rule 833 (optional_block)

    make_struct_fields  go to state 944
    make_struct_dim     go to state 1360
    optional_block      go to state 1361


State 1198

  868 make_tuple: expr "=>" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1362
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1199

  826 make_struct_dim: make_struct_dim "end of expression" . make_struct_fields

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    make_struct_fields  go to state 1363


State 1200

  849 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1201
    ",]]"  shift, and go to state 1202
    ']'    shift, and go to state 1203

    optional_trailing_delim_sqr_sqr  go to state 1364


State 1201

  842 optional_trailing_delim_sqr_sqr: ";]]" .

    $default  reduce using rule 842 (optional_trailing_delim_sqr_sqr)


State 1202

  843 optional_trailing_delim_sqr_sqr: ",]]" .

    $default  reduce using rule 843 (optional_trailing_delim_sqr_sqr)


State 1203

  841 optional_trailing_delim_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1365


State 1204

  850 make_struct_decl: "[[" type_declaration_no_options optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 850 (make_struct_decl)


State 1205

  869 make_tuple: make_tuple ',' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1366
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1206

  877 make_dim: make_dim "end of expression" . make_tuple

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 943
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple              go to state 1367
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1207

  840 optional_trailing_semicolon_sqr_sqr: ";]]" .

    $default  reduce using rule 840 (optional_trailing_semicolon_sqr_sqr)


State 1208

  839 optional_trailing_semicolon_sqr_sqr: ']' . ']'

    ']'  shift, and go to state 1368


State 1209

  879 make_dim_decl: "[[" type_declaration_no_options make_dim optional_trailing_semicolon_sqr_sqr .

    $default  reduce using rule 879 (make_dim_decl)


State 1210

  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1369
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1211

  854 make_struct_decl: "[{" type_declaration_no_options '(' ')' . make_struct_dim optional_block optional_trailing_delim_cur_sqr

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    make_struct_fields  go to state 944
    make_struct_dim     go to state 1370


State 1212

  853 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1371
    ";}]"                shift, and go to state 1372
    ",}]"                shift, and go to state 1373

    optional_trailing_delim_cur_sqr  go to state 1374


State 1213

  837 optional_trailing_semicolon_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1375


State 1214

  838 optional_trailing_semicolon_cur_sqr: ";}]" .

    $default  reduce using rule 838 (optional_trailing_semicolon_cur_sqr)


State 1215

  880 make_dim_decl: "[{" type_declaration_no_options make_dim optional_trailing_semicolon_cur_sqr .

    $default  reduce using rule 880 (make_dim_decl)


State 1216

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1376
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1217

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  870 make_map_tuple: expr "=>" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 870 (make_map_tuple)


State 1218

  835 optional_trailing_semicolon_cur_cur: "end of code block" "end of code block" .

    $default  reduce using rule 835 (optional_trailing_semicolon_cur_cur)


State 1219

  899 make_table: make_table "end of expression" make_map_tuple .

    $default  reduce using rule 899 (make_table)


State 1220

  269 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  272 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list . '>' $@9 expr

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1377

    semicolon  go to state 626
    c_or_s     go to state 1321


State 1221

  269 type_declaration_no_options_list: type_declaration_no_options_list . c_or_s type_declaration
  275 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list . '>' $@11 optional_expr_list_in_braces

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1378

    semicolon  go to state 626
    c_or_s     go to state 1321


State 1222

   36 string_builder_body: string_builder_body "{" expr . optional_format_string "}"
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    ':'    shift, and go to state 1379
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 31 (optional_format_string)

    optional_format_string  go to state 1380


State 1223

  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" . expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1381
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1224

  901 expr_map_tuple_list: expr_map_tuple_list ',' make_map_tuple .

    $default  reduce using rule 901 (expr_map_tuple_list)


State 1225

  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1382
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1226

  671 variable_name_with_pos_list: variable_name_with_pos_list . ',' "name"
  672                            | variable_name_with_pos_list . ',' "name" "aka" "name"
  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list . "in" expr_list "end of expression" expr array_comprehension_where ']'

    "in"  shift, and go to state 1383
    ','   shift, and go to state 867


State 1227

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  818 make_struct_fields: "$f" '(' expr . ')' copy_or_move expr
  819                   | "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1384


State 1228

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  815 make_struct_fields: "name" ":=" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 815 (make_struct_fields)


State 1229

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  814 make_struct_fields: "name" copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 814 (make_struct_fields)


State 1230

  487 expr: '(' expr_list optional_comma ')' .

    $default  reduce using rule 487 (expr)


State 1231

  820 make_struct_fields: make_struct_fields ',' "$f" . '(' expr ')' copy_or_move expr
  821                   | make_struct_fields ',' "$f" . '(' expr ')' ":=" expr

    '('  shift, and go to state 1385


State 1232

  816 make_struct_fields: make_struct_fields ',' "name" . copy_or_move expr
  817                   | make_struct_fields ',' "name" . ":=" expr

    "<-"  shift, and go to state 866
    ":="  shift, and go to state 1386
    '='   shift, and go to state 868

    copy_or_move  go to state 1387


State 1233

  422 func_addr_name: "$i" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1388
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1234

  547 expr_mtag: '@' '@' "$c" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1389
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1235

  426 func_addr_expr: '@' '@' '<' $@23 . type_declaration_no_options '>' $@24 func_addr_name

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1390


State 1236

  429 func_addr_expr: '@' '@' '<' $@25 . optional_function_argument_list optional_function_type '>' $@26 func_addr_name

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1391


State 1237

   66 expression_else: "else" . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1392


State 1238

   63 elif_or_static_elif: "elif" .

    $default  reduce using rule 63 (elif_or_static_elif)


State 1239

   64 elif_or_static_elif: "static_elif" .

    $default  reduce using rule 64 (elif_or_static_elif)


State 1240

   67 expression_else: elif_or_static_elif . expr expression_block expression_else

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1393
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1241

   80 expression_if_then_else: if_or_static_if expr expression_block expression_else .

    $default  reduce using rule 80 (expression_if_then_else)


State 1242

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr . expression_else_one_liner semicolon
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "else"  shift, and go to state 1394
    "is"    shift, and go to state 758
    "as"    shift, and go to state 759
    "<<"    shift, and go to state 768
    ">>"    shift, and go to state 769
    "++"    shift, and go to state 770
    "--"    shift, and go to state 771
    "<="    shift, and go to state 772
    ">="    shift, and go to state 775
    "=="    shift, and go to state 776
    "!="    shift, and go to state 777
    "->"    shift, and go to state 778
    "??"    shift, and go to state 780
    "?."    shift, and go to state 781
    "?["    shift, and go to state 782
    "<|"    shift, and go to state 783
    "|>"    shift, and go to state 784
    "<<<"   shift, and go to state 786
    ">>>"   shift, and go to state 787
    "&&"    shift, and go to state 790
    "||"    shift, and go to state 791
    "^^"    shift, and go to state 792
    ".."    shift, and go to state 796
    '?'     shift, and go to state 798
    '|'     shift, and go to state 799
    '^'     shift, and go to state 800
    '&'     shift, and go to state 801
    '<'     shift, and go to state 802
    '>'     shift, and go to state 803
    '-'     shift, and go to state 804
    '+'     shift, and go to state 805
    '*'     shift, and go to state 806
    '/'     shift, and go to state 807
    '%'     shift, and go to state 808
    '.'     shift, and go to state 809
    '['     shift, and go to state 810

    $default  reduce using rule 72 (expression_else_one_liner)

    expression_else_one_liner  go to state 1395


State 1243

  233 expression_block: open_block expressions close_block "finally" open_block expressions . close_block
  259 expressions: expressions . expression_any
  260            | expressions . error

    error                             shift, and go to state 445
    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "let"                             shift, and go to state 3
    "while"                           shift, and go to state 448
    "if"                              shift, and go to state 449
    "static_if"                       shift, and go to state 450
    "for"                             shift, and go to state 451
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "return"                          shift, and go to state 458
    "null"                            shift, and go to state 459
    "break"                           shift, and go to state 460
    "try"                             shift, and go to state 461
    "table"                           shift, and go to state 462
    "delete"                          shift, and go to state 463
    "deref"                           shift, and go to state 464
    "with"                            shift, and go to state 465
    "assume"                          shift, and go to state 466
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "var"                             shift, and go to state 8
    "addr"                            shift, and go to state 469
    "continue"                        shift, and go to state 470
    "pass"                            shift, and go to state 471
    "reinterpret"                     shift, and go to state 472
    "label"                           shift, and go to state 473
    "goto"                            shift, and go to state 474
    "unsafe"                          shift, and go to state 475
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "yield"                           shift, and go to state 482
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "close scope"                     shift, and go to state 146
    "end of line"                     shift, and go to state 13
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 505
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    "end of code block"               shift, and go to state 147
    "end of expression"               shift, and go to state 14
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder             go to state 518
    expr_reader                go to state 519
    expression_label           go to state 520
    expression_goto            go to state 521
    semicolon                  go to state 522
    if_or_static_if            go to state 523
    expression_if_one_liner    go to state 524
    expression_if_then_else    go to state 525
    expression_for_loop        go to state 526
    expression_unsafe          go to state 527
    expression_while_loop      go to state 528
    expression_with            go to state 529
    expression_with_alias      go to state 530
    close_block                go to state 1396
    expr_call_pipe             go to state 532
    expression_any             go to state 533
    expr_keyword               go to state 534
    expression_keyword         go to state 535
    expr_pipe                  go to state 536
    name_in_namespace          go to state 537
    expression_delete          go to state 538
    expr_new                   go to state 539
    expression_break           go to state 540
    expression_continue        go to state 541
    expression_return_no_pipe  go to state 542
    expression_return          go to state 543
    expression_yield_no_pipe   go to state 544
    expression_yield           go to state 545
    expression_try_catch       go to state 546
    kwd_let                    go to state 547
    expression_let             go to state 548
    expr_cast                  go to state 549
    expr_type_decl             go to state 550
    expr_type_info             go to state 551
    block_or_lambda            go to state 552
    expr_full_block            go to state 553
    expr_numeric_const         go to state 554
    expr_assign                go to state 555
    expr_assign_pipe           go to state 556
    expr_named_call            go to state 557
    expr_method_call           go to state 558
    func_addr_expr             go to state 559
    expr_field                 go to state 560
    expr_call                  go to state 561
    expr                       go to state 562
    expr_mtag                  go to state 563
    basic_type_declaration     go to state 564
    make_decl                  go to state 565
    make_struct_decl           go to state 566
    make_tuple_call            go to state 567
    make_dim_decl              go to state 568
    make_table_decl            go to state 569
    array_comprehension        go to state 570


State 1244

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list . optional_capture_list optional_function_argument_list optional_function_type expression_block

    "capture"  shift, and go to state 998
    "[["       shift, and go to state 999

    $default  reduce using rule 362 (optional_capture_list)

    optional_capture_list  go to state 1397


State 1245

  814 make_struct_fields: "name" . copy_or_move expr
  815                   | "name" . ":=" expr

    "<-"  shift, and go to state 866
    ":="  shift, and go to state 975
    '='   shift, and go to state 868

    copy_or_move  go to state 976


State 1246

  441 expr_call: name_in_namespace '(' "uninitialized" ')' .

    $default  reduce using rule 441 (expr_call)


State 1247

  443 expr_call: name_in_namespace '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1398


State 1248

  417 expr_named_call: name_in_namespace '(' '[' make_struct_fields . ']' ')'
  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 978
    ']'  shift, and go to state 1399


State 1249

  348 expr_list: expr_list ',' . expr
  418 expr_named_call: name_in_namespace '(' expr_list ',' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 1400
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1150
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1250

  444 expr_call: name_in_namespace '(' expr_list ')' .

    $default  reduce using rule 444 (expr_call)


State 1251

  442 expr_call: name_in_namespace '(' make_struct_single ')' .

    $default  reduce using rule 442 (expr_call)


State 1252

  317 tuple_expansion: "name" .

    $default  reduce using rule 317 (tuple_expansion)


State 1253

  318 tuple_expansion: tuple_expansion . ',' "name"
  319 tuple_expansion_variable_declaration: "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion . ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr semicolon
  324                                     | "[[" tuple_expansion . ']' ']' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1401
    ']'  shift, and go to state 1402


State 1254

  318 tuple_expansion: tuple_expansion . ',' "name"
  321 tuple_expansion_variable_declaration: '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | '(' tuple_expansion . ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr semicolon
  326                                     | '(' tuple_expansion . ')' optional_ref copy_or_move_or_clone expr_pipe

    ','  shift, and go to state 1401
    ')'  shift, and go to state 1403


State 1255

  364 optional_capture_list: "capture" '(' . capture_list ')'

    "<-"    shift, and go to state 1256
    ":="    shift, and go to state 1257
    "name"  shift, and go to state 1258
    '='     shift, and go to state 1259
    '&'     shift, and go to state 1260

    capture_entry  go to state 1261
    capture_list   go to state 1404


State 1256

  357 capture_entry: "<-" . "name"

    "name"  shift, and go to state 1405


State 1257

  358 capture_entry: ":=" . "name"

    "name"  shift, and go to state 1406


State 1258

  359 capture_entry: "name" . '(' "name" ')'

    '('  shift, and go to state 1407


State 1259

  356 capture_entry: '=' . "name"

    "name"  shift, and go to state 1408


State 1260

  355 capture_entry: '&' . "name"

    "name"  shift, and go to state 1409


State 1261

  360 capture_list: capture_entry .

    $default  reduce using rule 360 (capture_list)


State 1262

  361 capture_list: capture_list . ',' capture_entry
  363 optional_capture_list: "[[" capture_list . ']' ']'

    ','  shift, and go to state 1410
    ']'  shift, and go to state 1411


State 1263

  367 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1412


State 1264

  506 expr: expr "is" "type" '<' . $@29 type_declaration_no_options '>' $@30

    $default  reduce using rule 504 ($@29)

    $@29  go to state 1413


State 1265

  546 expr_mtag: expr "is" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1414
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1266

  512 expr: expr "as" "type" '<' . $@31 type_declaration '>' $@32

    $default  reduce using rule 510 ($@31)

    $@31  go to state 1415


State 1267

  544 expr_mtag: expr "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1416
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1268

  398 expr_assign_pipe_right: "$ <|" expr_block .

    $default  reduce using rule 398 (expr_assign_pipe_right)


State 1269

  396 expr_assign_pipe_right: "@ <|" expr_block .

    $default  reduce using rule 396 (expr_assign_pipe_right)


State 1270

  397 expr_assign_pipe_right: "@@ <|" expr_block .

    $default  reduce using rule 397 (expr_assign_pipe_right)


State 1271

  419 expr_method_call: expr "->" "name" '(' . ')'
  420                 | expr "->" "name" '(' . expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1417
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1418
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1272

  541 expr_mtag: expr "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1419
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1273

  491 expr: expr "?[" expr ']' .

    $default  reduce using rule 491 (expr)


State 1274

  517 expr: expr '?' "as" "type" . '<' $@33 type_declaration '>' $@34

    '<'  shift, and go to state 1420


State 1275

  545 expr_mtag: expr '?' "as" "$f" . '(' expr ')'

    '('  shift, and go to state 1421


State 1276

  514 expr: expr '?' "as" "name" .

    $default  reduce using rule 514 (expr)


State 1277

  518 expr: expr '?' "as" basic_type_declaration .

    $default  reduce using rule 518 (expr)


State 1278

  503 expr: expr '?' expr ':' . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1422
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1279

  543 expr_mtag: expr '.' "?." "$f" . '(' expr ')'

    '('  shift, and go to state 1423


State 1280

  494 expr: expr '.' "?." "name" .

    $default  reduce using rule 494 (expr)


State 1281

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  492     | expr '.' "?[" expr . ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 1424


State 1282

  540 expr_mtag: expr '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1425
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1283

  432 expr_field: expr '.' "name" '(' . ')'
  433           | expr '.' "name" '(' . expr_list ')'
  434           | expr '.' "name" '(' . '[' make_struct_fields ']' ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 1426
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1427
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1428
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1284

  542 expr_mtag: expr '.' '.' "$f" . '(' expr ')'

    '('  shift, and go to state 1429


State 1285

  431 expr_field: expr '.' '.' "name" .

    $default  reduce using rule 431 (expr_field)


State 1286

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  490     | expr '.' '[' expr . ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ']'    shift, and go to state 1430


State 1287

  439 expr_field: expr '.' $@27 error . $@28

    $default  reduce using rule 438 ($@28)

    $@28  go to state 1431


State 1288

  435 expr_field: expr '.' basic_type_declaration '(' . ')'
  436           | expr '.' basic_type_declaration '(' . expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1432
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1433
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1289

  489 expr: expr '[' expr ']' .

    $default  reduce using rule 489 (expr)


State 1290

  446 expr_call: basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 446 (expr_call)


State 1291

  650 enum_declaration: optional_annotation_list "enum" optional_public_or_private_enum enum_name ':' enum_basic_type_declaration open_block $@44 enum_list $@45 close_block .

    $default  reduce using rule 650 (enum_declaration)


State 1292

  630 enum_list: enum_list "name" '=' expr semicolon .

    $default  reduce using rule 630 (enum_list)


State 1293

  130 optional_annotation_list: '[' annotation_list ']' .
  570 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    $default  reduce using rule 130 (optional_annotation_list)

    semicolon  go to state 1434


State 1294

  557 optional_public_or_private_member_variable: "public" .

    $default  reduce using rule 557 (optional_public_or_private_member_variable)


State 1295

  558 optional_public_or_private_member_variable: "private" .

    $default  reduce using rule 558 (optional_public_or_private_member_variable)


State 1296

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . "abstract" optional_constant $@36 function_declaration_header semicolon
  569                                 | struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable . optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block

    "abstract"  shift, and go to state 1435
    "static"    shift, and go to state 1297

    $default  reduce using rule 559 (optional_static_member_variable)

    optional_static_member_variable  go to state 1436


State 1297

  560 optional_static_member_variable: "static" .

    $default  reduce using rule 560 (optional_static_member_variable)


State 1298

  561 structure_variable_declaration: optional_field_annotation optional_static_member_variable . optional_override optional_public_or_private_member_variable variable_declaration

    "override"  shift, and go to state 1437
    "sealed"    shift, and go to state 1438

    $default  reduce using rule 551 (optional_override)

    optional_override  go to state 1439


State 1299

  565 struct_variable_declaration_list: struct_variable_declaration_list $@35 structure_variable_declaration semicolon .

    $default  reduce using rule 565 (struct_variable_declaration_list)


State 1300

  500 expr: "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' ')'
  501     | "generator" '<' type_declaration_no_options '>' . optional_capture_list '(' expr ')'

    "capture"  shift, and go to state 998
    "[["       shift, and go to state 999

    $default  reduce using rule 362 (optional_capture_list)

    optional_capture_list  go to state 1440


State 1301

  612 let_variable_declaration: let_variable_name_with_pos_list ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 612 (let_variable_declaration)


State 1302

  734 type_declaration_no_options: "type" '<' $@50 type_declaration '>' $@51 .

    $default  reduce using rule 734 (type_declaration_no_options)


State 1303

  757 type_declaration_no_options: "array" '<' $@55 type_declaration '>' $@56 .

    $default  reduce using rule 757 (type_declaration_no_options)


State 1304

  760 type_declaration_no_options: "table" '<' $@57 table_type_pair '>' $@58 .

    $default  reduce using rule 760 (type_declaration_no_options)


State 1305

  723 table_type_pair: type_declaration c_or_s type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 723 (table_type_pair)


State 1306

  763 type_declaration_no_options: "iterator" '<' $@59 type_declaration '>' $@60 .

    $default  reduce using rule 763 (type_declaration_no_options)


State 1307

  753 type_declaration_no_options: "smart_ptr" '<' $@53 type_declaration '>' $@54 .

    $default  reduce using rule 753 (type_declaration_no_options)


State 1308

  719 bitfield_type_declaration: "bitfield" '<' $@48 bitfield_bits '>' $@49 .

    $default  reduce using rule 719 (bitfield_type_declaration)


State 1309

  713 bitfield_bits: bitfield_bits semicolon "name" .

    $default  reduce using rule 713 (bitfield_bits)


State 1310

  767 type_declaration_no_options: "block" '<' $@61 type_declaration '>' $@62 .

    $default  reduce using rule 767 (type_declaration_no_options)


State 1311

  770 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' . $@64

    $default  reduce using rule 769 ($@64)

    $@64  go to state 1441


State 1312

  774 type_declaration_no_options: "function" '<' $@65 type_declaration '>' $@66 .

    $default  reduce using rule 774 (type_declaration_no_options)


State 1313

  777 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' . $@68

    $default  reduce using rule 776 ($@68)

    $@68  go to state 1442


State 1314

  781 type_declaration_no_options: "lambda" '<' $@69 type_declaration '>' $@70 .

    $default  reduce using rule 781 (type_declaration_no_options)


State 1315

  784 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' . $@72

    $default  reduce using rule 783 ($@72)

    $@72  go to state 1443


State 1316

  787 type_declaration_no_options: "tuple" '<' $@73 tuple_type_list '>' $@74 .

    $default  reduce using rule 787 (type_declaration_no_options)


State 1317

  582 tuple_type_list: tuple_type_list c_or_s tuple_type .

    $default  reduce using rule 582 (tuple_type_list)


State 1318

  790 type_declaration_no_options: "variant" '<' $@75 variant_type_list '>' $@76 .

    $default  reduce using rule 790 (type_declaration_no_options)


State 1319

  588 variant_type_list: variant_type_list c_or_s variant_type .

    $default  reduce using rule 588 (variant_type_list)


State 1320

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' . '(' optional_expr_list ')'

    '('  shift, and go to state 1444


State 1321

  269 type_declaration_no_options_list: type_declaration_no_options_list c_or_s . type_declaration

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1445


State 1322

  669 variable_name_with_pos_list: "$i" '(' expr ')' .

    $default  reduce using rule 669 (variable_name_with_pos_list)


State 1323

  672 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" . "name"

    "name"  shift, and go to state 1446


State 1324

  598 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1447
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1325

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' . $@90 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 856 ($@90)

    $@90  go to state 1448


State 1326

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' . $@92 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 859 ($@92)

    $@92  go to state 1449


State 1327

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list . expression_block
  348 expr_list: expr_list . ',' expr

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    ','                    shift, and go to state 889

    open_block        go to state 297
    expression_block  go to state 1450


State 1328

  288 new_type_declaration: '<' $@12 type_declaration '>' . $@13

    $default  reduce using rule 287 ($@13)

    $@13  go to state 1451


State 1329

  294 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single . ')'

    ')'  shift, and go to state 1452


State 1330

  292 expr_new: "new" new_type_declaration '(' expr_list ')' .

    $default  reduce using rule 292 (expr_new)


State 1331

  293 expr_new: "new" new_type_declaration '(' make_struct_single ')' .

    $default  reduce using rule 293 (expr_new)


State 1332

  291 expr_new: "new" new_type_declaration '(' use_initializer ')' .

    $default  reduce using rule 291 (expr_new)


State 1333

  342 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" . '>' expr ')'
  343               | "typeinfo" '(' name_in_namespace '<' "name" . c_or_s "name" '>' expr ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1453

    semicolon  go to state 626
    c_or_s     go to state 1454


State 1334

  341 expr_type_info: "typeinfo" '(' name_in_namespace expr ')' .

    $default  reduce using rule 341 (expr_type_info)


State 1335

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" . "name" '>' '(' expr ')'

    "name"  shift, and go to state 1455


State 1336

  345 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' . '(' expr ')'

    '('  shift, and go to state 1456


State 1337

  344 expr_type_info: "typeinfo" name_in_namespace '(' expr ')' .

    $default  reduce using rule 344 (expr_type_info)


State 1338

  340 expr_type_decl: "type" '<' $@20 type_declaration '>' . $@21

    $default  reduce using rule 339 ($@21)

    $@21  go to state 1457


State 1339

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options . '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1458
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1340

  582 tuple_type_list: tuple_type_list . c_or_s tuple_type
  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list . '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1459

    semicolon  go to state 626
    c_or_s     go to state 1118


State 1341

  588 variant_type_list: variant_type_list . c_or_s variant_type
  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list . '>' $@104 '(' make_variant_dim ')'

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    ','                  shift, and go to state 625
    '>'                  shift, and go to state 1460

    semicolon  go to state 626
    c_or_s     go to state 1120


State 1342

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' . $@106 '(' optional_expr_list ')'

    $default  reduce using rule 892 ($@106)

    $@106  go to state 1461


State 1343

  890 make_dim_decl: "array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 890 (make_dim_decl)


State 1344

  905 make_table_decl: "table" '<' type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 266 (optional_expr_map_tuple_list)

    string_builder                go to state 518
    expr_reader                   go to state 519
    optional_expr_map_tuple_list  go to state 1462
    expression_keyword            go to state 582
    name_in_namespace             go to state 537
    expr_new                      go to state 539
    expr_cast                     go to state 549
    expr_type_decl                go to state 550
    expr_type_info                go to state 551
    block_or_lambda               go to state 552
    expr_full_block               go to state 553
    expr_numeric_const            go to state 554
    expr_named_call               go to state 557
    expr_method_call              go to state 558
    func_addr_expr                go to state 559
    expr_field                    go to state 560
    expr_call                     go to state 561
    expr                          go to state 712
    expr_mtag                     go to state 563
    basic_type_declaration        go to state 564
    make_decl                     go to state 565
    make_struct_decl              go to state 566
    make_map_tuple                go to state 721
    make_tuple_call               go to state 567
    make_dim_decl                 go to state 568
    expr_map_tuple_list           go to state 722
    make_table_decl               go to state 569
    array_comprehension           go to state 570


State 1345

  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"
  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options . '>' '(' optional_expr_map_tuple_list ')'

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1463
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1346

   89 expression_with_alias: "assume" "name" '=' $@6 expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 89 (expression_with_alias)


State 1347

  331 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' . $@15 expr

    $default  reduce using rule 330 ($@15)

    $@15  go to state 1464


State 1348

  334 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' . $@17 expr

    $default  reduce using rule 333 ($@17)

    $@17  go to state 1465


State 1349

  337 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' . $@19 expr

    $default  reduce using rule 336 ($@19)

    $@19  go to state 1466


State 1350

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' . $@108 '(' expr_list optional_comma ')'

    $default  reduce using rule 896 ($@108)

    $@108  go to state 1467


State 1351

  894 make_dim_decl: "fixed_array" '(' expr_list optional_comma ')' .

    $default  reduce using rule 894 (make_dim_decl)


State 1352

  866 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' . $@96 use_initializer

    $default  reduce using rule 865 ($@96)

    $@96  go to state 1468


State 1353

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' . $@98 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 874 ($@98)

    $@98  go to state 1469


State 1354

  872 make_tuple_call: "tuple" '(' expr_list optional_comma ')' .

    $default  reduce using rule 872 (make_tuple_call)


State 1355

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' . $@94 '(' use_initializer make_variant_dim ')'

    $default  reduce using rule 862 ($@94)

    $@94  go to state 1470


State 1356

  236 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list . expr_full_block_assumed_piped
  500 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1471
    '$'  shift, and go to state 516
    '@'  shift, and go to state 695

    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 1472


State 1357

  366 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type block_or_simple_block

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1473


State 1358

  538 expr_mtag: "$c" '(' expr ')' '(' . ')'
  539          | "$c" '(' expr ')' '(' . expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1474
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1475
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1359

  348 expr_list: expr_list . ',' expr
  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']' ']'

    "end of expression"  shift, and go to state 1476
    ','                  shift, and go to state 889


State 1360

  826 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  852 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_sqr_sqr

    "where"              shift, and go to state 939
    "end of expression"  shift, and go to state 1199

    $default  reduce using rule 833 (optional_block)

    optional_block  go to state 1477


State 1361

  851 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1201
    ",]]"  shift, and go to state 1202
    ']'    shift, and go to state 1203

    optional_trailing_delim_sqr_sqr  go to state 1478


State 1362

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  868 make_tuple: expr "=>" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 868 (make_tuple)


State 1363

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  826 make_struct_dim: make_struct_dim "end of expression" make_struct_fields .

    ','  shift, and go to state 978

    $default  reduce using rule 826 (make_struct_dim)


State 1364

  849 make_struct_decl: "[[" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 849 (make_struct_decl)


State 1365

  841 optional_trailing_delim_sqr_sqr: ']' ']' .

    $default  reduce using rule 841 (optional_trailing_delim_sqr_sqr)


State 1366

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  869 make_tuple: make_tuple ',' expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 869 (make_tuple)


State 1367

  869 make_tuple: make_tuple . ',' expr
  877 make_dim: make_dim "end of expression" make_tuple .

    ','  shift, and go to state 1205

    $default  reduce using rule 877 (make_dim)


State 1368

  839 optional_trailing_semicolon_sqr_sqr: ']' ']' .

    $default  reduce using rule 839 (optional_trailing_semicolon_sqr_sqr)


State 1369

  348 expr_list: expr_list . ',' expr
  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where "end of code block" ']'

    "end of expression"  shift, and go to state 1479
    ','                  shift, and go to state 889


State 1370

  826 make_struct_dim: make_struct_dim . "end of expression" make_struct_fields
  854 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim . optional_block optional_trailing_delim_cur_sqr

    "where"              shift, and go to state 939
    "end of expression"  shift, and go to state 1199

    $default  reduce using rule 833 (optional_block)

    optional_block  go to state 1480


State 1371

  844 optional_trailing_delim_cur_sqr: "end of code block" . ']'

    ']'  shift, and go to state 1481


State 1372

  845 optional_trailing_delim_cur_sqr: ";}]" .

    $default  reduce using rule 845 (optional_trailing_delim_cur_sqr)


State 1373

  846 optional_trailing_delim_cur_sqr: ",}]" .

    $default  reduce using rule 846 (optional_trailing_delim_cur_sqr)


State 1374

  853 make_struct_decl: "[{" type_declaration_no_options make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 853 (make_struct_decl)


State 1375

  837 optional_trailing_semicolon_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 837 (optional_trailing_semicolon_cur_sqr)


State 1376

  348 expr_list: expr_list . ',' expr
  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1482
    ','                  shift, and go to state 889


State 1377

  272 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' . $@9 expr

    $default  reduce using rule 271 ($@9)

    $@9  go to state 1483


State 1378

  275 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' . $@11 optional_expr_list_in_braces

    $default  reduce using rule 274 ($@11)

    $@11  go to state 1484


State 1379

   33 optional_format_string: ':' . $@1 format_string

    $default  reduce using rule 32 ($@1)

    $@1  go to state 1485


State 1380

   36 string_builder_body: string_builder_body "{" expr optional_format_string . "}"

    "}"  shift, and go to state 1486


State 1381

  348 expr_list: expr_list . ',' expr
  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list . "end of expression" make_map_tuple array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1487
    ','                  shift, and go to state 889


State 1382

  348 expr_list: expr_list . ',' expr
  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1488
    ','                  shift, and go to state 889


State 1383

  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" . expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1489
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1384

  818 make_struct_fields: "$f" '(' expr ')' . copy_or_move expr
  819                   | "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 866
    ":="  shift, and go to state 1490
    '='   shift, and go to state 868

    copy_or_move  go to state 1491


State 1385

  820 make_struct_fields: make_struct_fields ',' "$f" '(' . expr ')' copy_or_move expr
  821                   | make_struct_fields ',' "$f" '(' . expr ')' ":=" expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1492
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1386

  817 make_struct_fields: make_struct_fields ',' "name" ":=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1493
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1387

  816 make_struct_fields: make_struct_fields ',' "name" copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1494
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1388

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  422 func_addr_name: "$i" '(' expr . ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1495


State 1389

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  547          | '@' '@' "$c" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1496


State 1390

  426 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options . '>' $@24 func_addr_name
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1497
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1391

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list . optional_function_type '>' $@26 func_addr_name

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1498


State 1392

   66 expression_else: "else" expression_block .

    $default  reduce using rule 66 (expression_else)


State 1393

   67 expression_else: elif_or_static_elif expr . expression_block expression_else
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                   shift, and go to state 758
    "as"                   shift, and go to state 759
    "<<"                   shift, and go to state 768
    ">>"                   shift, and go to state 769
    "++"                   shift, and go to state 770
    "--"                   shift, and go to state 771
    "<="                   shift, and go to state 772
    ">="                   shift, and go to state 775
    "=="                   shift, and go to state 776
    "!="                   shift, and go to state 777
    "->"                   shift, and go to state 778
    "??"                   shift, and go to state 780
    "?."                   shift, and go to state 781
    "?["                   shift, and go to state 782
    "<|"                   shift, and go to state 783
    "|>"                   shift, and go to state 784
    "<<<"                  shift, and go to state 786
    ">>>"                  shift, and go to state 787
    "&&"                   shift, and go to state 790
    "||"                   shift, and go to state 791
    "^^"                   shift, and go to state 792
    ".."                   shift, and go to state 796
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51
    '?'                    shift, and go to state 798
    '|'                    shift, and go to state 799
    '^'                    shift, and go to state 800
    '&'                    shift, and go to state 801
    '<'                    shift, and go to state 802
    '>'                    shift, and go to state 803
    '-'                    shift, and go to state 804
    '+'                    shift, and go to state 805
    '*'                    shift, and go to state 806
    '/'                    shift, and go to state 807
    '%'                    shift, and go to state 808
    '.'                    shift, and go to state 809
    '['                    shift, and go to state 810

    open_block        go to state 297
    expression_block  go to state 1499


State 1394

   74 expression_else_one_liner: "else" . $@3 expression_if_one_liner

    $default  reduce using rule 73 ($@3)

    $@3  go to state 1500


State 1395

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1501


State 1396

  233 expression_block: open_block expressions close_block "finally" open_block expressions close_block .

    $default  reduce using rule 233 (expression_block)


State 1397

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list . optional_function_argument_list optional_function_type expression_block

    '('  shift, and go to state 295

    $default  reduce using rule 131 (optional_function_argument_list)

    optional_function_argument_list  go to state 1502


State 1398

  443 expr_call: name_in_namespace '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 443 (expr_call)


State 1399

  417 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1503


State 1400

  418 expr_named_call: name_in_namespace '(' expr_list ',' '[' . make_struct_fields ']' ')'
  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 1504
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1401

  318 tuple_expansion: tuple_expansion ',' . "name"

    "name"  shift, and go to state 1505


State 1402

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion ']' . ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr semicolon
  324                                     | "[[" tuple_expansion ']' . ']' optional_ref copy_or_move_or_clone expr_pipe

    ']'  shift, and go to state 1506


State 1403

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | '(' tuple_expansion ')' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  325                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr semicolon
  326                                     | '(' tuple_expansion ')' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1507
    '&'  shift, and go to state 402

    $default  reduce using rule 604 (optional_ref)

    optional_ref  go to state 1508


State 1404

  361 capture_list: capture_list . ',' capture_entry
  364 optional_capture_list: "capture" '(' capture_list . ')'

    ','  shift, and go to state 1410
    ')'  shift, and go to state 1509


State 1405

  357 capture_entry: "<-" "name" .

    $default  reduce using rule 357 (capture_entry)


State 1406

  358 capture_entry: ":=" "name" .

    $default  reduce using rule 358 (capture_entry)


State 1407

  359 capture_entry: "name" '(' . "name" ')'

    "name"  shift, and go to state 1510


State 1408

  356 capture_entry: '=' "name" .

    $default  reduce using rule 356 (capture_entry)


State 1409

  355 capture_entry: '&' "name" .

    $default  reduce using rule 355 (capture_entry)


State 1410

  361 capture_list: capture_list ',' . capture_entry

    "<-"    shift, and go to state 1256
    ":="    shift, and go to state 1257
    "name"  shift, and go to state 1258
    '='     shift, and go to state 1259
    '&'     shift, and go to state 1260

    capture_entry  go to state 1511


State 1411

  363 optional_capture_list: "[[" capture_list ']' . ']'

    ']'  shift, and go to state 1512


State 1412

  367 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1513
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1514
    block_or_simple_block  go to state 1515


State 1413

  506 expr: expr "is" "type" '<' $@29 . type_declaration_no_options '>' $@30

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1516


State 1414

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  546          | expr "is" "$f" '(' expr . ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1517


State 1415

  512 expr: expr "as" "type" '<' $@31 . type_declaration '>' $@32

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1518


State 1416

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  544          | expr "as" "$f" '(' expr . ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1519


State 1417

  419 expr_method_call: expr "->" "name" '(' ')' .

    $default  reduce using rule 419 (expr_method_call)


State 1418

  348 expr_list: expr_list . ',' expr
  420 expr_method_call: expr "->" "name" '(' expr_list . ')'

    ','  shift, and go to state 889
    ')'  shift, and go to state 1520


State 1419

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  541          | expr "?." "$f" '(' expr . ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1521


State 1420

  517 expr: expr '?' "as" "type" '<' . $@33 type_declaration '>' $@34

    $default  reduce using rule 515 ($@33)

    $@33  go to state 1522


State 1421

  545 expr_mtag: expr '?' "as" "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1523
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1422

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  503     | expr '?' expr ':' expr .
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 503 (expr)


State 1423

  543 expr_mtag: expr '.' "?." "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1524
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1424

  492 expr: expr '.' "?[" expr ']' .

    $default  reduce using rule 492 (expr)


State 1425

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  540          | expr '.' "$f" '(' expr . ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1525


State 1426

  434 expr_field: expr '.' "name" '(' '[' . make_struct_fields ']' ')'
  878 make_dim_decl: '[' . optional_expr_list ']'
  911 array_comprehension: '[' . "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'
  912                    | '[' . "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "for"                             shift, and go to state 728
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "iterator"                        shift, and go to state 729
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "$f"                              shift, and go to state 733
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 734
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 730
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_fields      go to state 1526
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1427

  432 expr_field: expr '.' "name" '(' ')' .

    $default  reduce using rule 432 (expr_field)


State 1428

  348 expr_list: expr_list . ',' expr
  433 expr_field: expr '.' "name" '(' expr_list . ')'

    ','  shift, and go to state 889
    ')'  shift, and go to state 1527


State 1429

  542 expr_mtag: expr '.' '.' "$f" '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1528
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1430

  490 expr: expr '.' '[' expr ']' .

    $default  reduce using rule 490 (expr)


State 1431

  439 expr_field: expr '.' $@27 error $@28 .

    $default  reduce using rule 439 (expr_field)


State 1432

  435 expr_field: expr '.' basic_type_declaration '(' ')' .

    $default  reduce using rule 435 (expr_field)


State 1433

  348 expr_list: expr_list . ',' expr
  436 expr_field: expr '.' basic_type_declaration '(' expr_list . ')'

    ','  shift, and go to state 889
    ')'  shift, and go to state 1529


State 1434

  570 struct_variable_declaration_list: struct_variable_declaration_list '[' annotation_list ']' semicolon .

    $default  reduce using rule 570 (struct_variable_declaration_list)


State 1435

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" . optional_constant $@36 function_declaration_header semicolon

    "const"  shift, and go to state 1530

    $default  reduce using rule 554 (optional_constant)

    optional_constant  go to state 1531


State 1436

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable . optional_override optional_constant $@37 function_declaration_header expression_block

    "override"  shift, and go to state 1437
    "sealed"    shift, and go to state 1438

    $default  reduce using rule 551 (optional_override)

    optional_override  go to state 1532


State 1437

  552 optional_override: "override" .

    $default  reduce using rule 552 (optional_override)


State 1438

  553 optional_override: "sealed" .

    $default  reduce using rule 553 (optional_override)


State 1439

  561 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override . optional_public_or_private_member_variable variable_declaration

    "public"   shift, and go to state 1294
    "private"  shift, and go to state 1295

    $default  reduce using rule 556 (optional_public_or_private_member_variable)

    optional_public_or_private_member_variable  go to state 1533


State 1440

  500 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' ')'
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list . '(' expr ')'

    '('  shift, and go to state 1471


State 1441

  770 type_declaration_no_options: "block" '<' $@63 optional_function_argument_list optional_function_type '>' $@64 .

    $default  reduce using rule 770 (type_declaration_no_options)


State 1442

  777 type_declaration_no_options: "function" '<' $@67 optional_function_argument_list optional_function_type '>' $@68 .

    $default  reduce using rule 777 (type_declaration_no_options)


State 1443

  784 type_declaration_no_options: "lambda" '<' $@71 optional_function_argument_list optional_function_type '>' $@72 .

    $default  reduce using rule 784 (type_declaration_no_options)


State 1444

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 1534
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1445

  269 type_declaration_no_options_list: type_declaration_no_options_list c_or_s type_declaration .
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430

    $default  reduce using rule 269 (type_declaration_no_options_list)


State 1446

  672 variable_name_with_pos_list: variable_name_with_pos_list ',' "name" "aka" "name" .

    $default  reduce using rule 672 (variable_name_with_pos_list)


State 1447

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  598 variable_declaration_type: variable_name_with_pos_list ':' type_declaration copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 598 (variable_declaration_type)


State 1448

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1535


State 1449

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1536


State 1450

   84 expression_for_loop: "for" $@5 variable_name_with_pos_list "in" expr_list expression_block .

    $default  reduce using rule 84 (expression_for_loop)


State 1451

  288 new_type_declaration: '<' $@12 type_declaration '>' $@13 .

    $default  reduce using rule 288 (new_type_declaration)


State 1452

  294 expr_new: "new" new_type_declaration '(' "uninitialized" make_struct_single ')' .

    $default  reduce using rule 294 (expr_new)


State 1453

  342 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1537
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1454

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s . "name" '>' expr ')'

    "name"  shift, and go to state 1538


State 1455

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" . '>' '(' expr ')'

    '>'  shift, and go to state 1539


State 1456

  345 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1540
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1457

  340 expr_type_decl: "type" '<' $@20 type_declaration '>' $@21 .

    $default  reduce using rule 340 (expr_type_decl)


State 1458

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' . $@100 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 882 ($@100)

    $@100  go to state 1541


State 1459

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' . $@102 '(' use_initializer optional_make_struct_dim_decl ')'

    $default  reduce using rule 885 ($@102)

    $@102  go to state 1542


State 1460

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' . $@104 '(' make_variant_dim ')'

    $default  reduce using rule 888 ($@104)

    $@104  go to state 1543


State 1461

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 . '(' optional_expr_list ')'

    '('  shift, and go to state 1544


State 1462

  905 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1545


State 1463

  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' . '(' optional_expr_map_tuple_list ')'

    '('  shift, and go to state 1546


State 1464

  331 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1547
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1465

  334 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1548
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1466

  337 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1549
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1467

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 . '(' expr_list optional_comma ')'

    '('  shift, and go to state 1550


State 1468

  866 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 . use_initializer

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1552


State 1469

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1553


State 1470

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 . '(' use_initializer make_variant_dim ')'

    '('  shift, and go to state 1554


State 1471

  500 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . ')'
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    ')'                               shift, and go to state 1555
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1556
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1472

  236 expr_call_pipe: "generator" '<' type_declaration_no_options '>' optional_capture_list expr_full_block_assumed_piped .

    $default  reduce using rule 236 (expr_call_pipe)


State 1473

  366 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . block_or_simple_block

    "=>"                   shift, and go to state 1513
    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block             go to state 297
    expression_block       go to state 1514
    block_or_simple_block  go to state 1557


State 1474

  538 expr_mtag: "$c" '(' expr ')' '(' ')' .

    $default  reduce using rule 538 (expr_mtag)


State 1475

  348 expr_list: expr_list . ',' expr
  539 expr_mtag: "$c" '(' expr ')' '(' expr_list . ')'

    ','  shift, and go to state 889
    ')'  shift, and go to state 1558


State 1476

  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']' ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1559
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1477

  852 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_sqr_sqr

    ";]]"  shift, and go to state 1201
    ",]]"  shift, and go to state 1202
    ']'    shift, and go to state 1203

    optional_trailing_delim_sqr_sqr  go to state 1560


State 1478

  851 make_struct_decl: "[[" type_declaration_no_options '(' ')' optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 851 (make_struct_decl)


State 1479

  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where "end of code block" ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1561
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1480

  854 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block . optional_trailing_delim_cur_sqr

    "end of code block"  shift, and go to state 1371
    ";}]"                shift, and go to state 1372
    ",}]"                shift, and go to state 1373

    optional_trailing_delim_cur_sqr  go to state 1562


State 1481

  844 optional_trailing_delim_cur_sqr: "end of code block" ']' .

    $default  reduce using rule 844 (optional_trailing_delim_cur_sqr)


State 1482

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block" "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 712
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_map_tuple          go to state 1563
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1483

  272 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1564
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1484

  275 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 . optional_expr_list_in_braces

    '('  shift, and go to state 1565

    '('       [reduce using rule 264 (optional_expr_list_in_braces)]
    $default  reduce using rule 264 (optional_expr_list_in_braces)

    optional_expr_list_in_braces  go to state 1566


State 1485

   33 optional_format_string: ':' $@1 . format_string

    $default  reduce using rule 29 (format_string)

    format_string  go to state 1567


State 1486

   36 string_builder_body: string_builder_body "{" expr optional_format_string "}" .

    $default  reduce using rule 36 (string_builder_body)


State 1487

  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" . make_map_tuple array_comprehension_where "end of code block"

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 712
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_map_tuple          go to state 1568
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1488

  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1569
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1489

  348 expr_list: expr_list . ',' expr
  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list . "end of expression" expr array_comprehension_where ']'

    "end of expression"  shift, and go to state 1570
    ','                  shift, and go to state 889


State 1490

  819 make_struct_fields: "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1571
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1491

  818 make_struct_fields: "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1572
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1492

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr . ')' copy_or_move expr
  821                   | make_struct_fields ',' "$f" '(' expr . ')' ":=" expr

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1573


State 1493

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  817 make_struct_fields: make_struct_fields ',' "name" ":=" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 817 (make_struct_fields)


State 1494

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  816 make_struct_fields: make_struct_fields ',' "name" copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 816 (make_struct_fields)


State 1495

  422 func_addr_name: "$i" '(' expr ')' .

    $default  reduce using rule 422 (func_addr_name)


State 1496

  547 expr_mtag: '@' '@' "$c" '(' expr ')' .

    $default  reduce using rule 547 (expr_mtag)


State 1497

  426 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' . $@24 func_addr_name

    $default  reduce using rule 425 ($@24)

    $@24  go to state 1574


State 1498

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type . '>' $@26 func_addr_name

    '>'  shift, and go to state 1575


State 1499

   67 expression_else: elif_or_static_elif expr expression_block . expression_else

    "else"         shift, and go to state 1237
    "elif"         shift, and go to state 1238
    "static_elif"  shift, and go to state 1239

    $default  reduce using rule 65 (expression_else)

    elif_or_static_elif  go to state 1240
    expression_else      go to state 1576


State 1500

   74 expression_else_one_liner: "else" $@3 . expression_if_one_liner

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "return"                          shift, and go to state 1577
    "null"                            shift, and go to state 459
    "break"                           shift, and go to state 460
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "continue"                        shift, and go to state 470
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "yield"                           shift, and go to state 1578
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder             go to state 518
    expr_reader                go to state 519
    expression_if_one_liner    go to state 1579
    expression_keyword         go to state 582
    name_in_namespace          go to state 537
    expr_new                   go to state 539
    expression_break           go to state 1580
    expression_continue        go to state 1581
    expression_return_no_pipe  go to state 1582
    expression_yield_no_pipe   go to state 1583
    expr_cast                  go to state 549
    expr_type_decl             go to state 550
    expr_type_info             go to state 551
    block_or_lambda            go to state 552
    expr_full_block            go to state 553
    expr_numeric_const         go to state 554
    expr_named_call            go to state 557
    expr_method_call           go to state 558
    func_addr_expr             go to state 559
    expr_field                 go to state 560
    expr_call                  go to state 561
    expr                       go to state 1584
    expr_mtag                  go to state 563
    basic_type_declaration     go to state 564
    make_decl                  go to state 565
    make_struct_decl           go to state 566
    make_tuple_call            go to state 567
    make_dim_decl              go to state 568
    make_table_decl            go to state 569
    array_comprehension        go to state 570


State 1501

   82 expression_if_then_else: expression_if_one_liner "if" $@4 expr expression_else_one_liner semicolon .

    $default  reduce using rule 82 (expression_if_then_else)


State 1502

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list . optional_function_type expression_block

    ':'  shift, and go to state 386

    $default  reduce using rule 134 (optional_function_type)

    optional_function_type  go to state 1585


State 1503

  417 expr_named_call: name_in_namespace '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 417 (expr_named_call)


State 1504

  418 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields . ']' ')'
  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 978
    ']'  shift, and go to state 1586


State 1505

  318 tuple_expansion: tuple_expansion ',' "name" .

    $default  reduce using rule 318 (tuple_expansion)


State 1506

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion ']' ']' . ':' type_declaration_no_options copy_or_move_or_clone expr_pipe
  323                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr semicolon
  324                                     | "[[" tuple_expansion ']' ']' . optional_ref copy_or_move_or_clone expr_pipe

    ':'  shift, and go to state 1587
    '&'  shift, and go to state 402

    $default  reduce using rule 604 (optional_ref)

    optional_ref  go to state 1588


State 1507

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  322                                     | '(' tuple_expansion ')' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1589


State 1508

  325 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr semicolon
  326                                     | '(' tuple_expansion ')' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 587
    ":="  shift, and go to state 588
    '='   shift, and go to state 589

    copy_or_move_or_clone  go to state 1590


State 1509

  364 optional_capture_list: "capture" '(' capture_list ')' .

    $default  reduce using rule 364 (optional_capture_list)


State 1510

  359 capture_entry: "name" '(' "name" . ')'

    ')'  shift, and go to state 1591


State 1511

  361 capture_list: capture_list ',' capture_entry .

    $default  reduce using rule 361 (capture_list)


State 1512

  363 optional_capture_list: "[[" capture_list ']' ']' .

    $default  reduce using rule 363 (optional_capture_list)


State 1513

  350 block_or_simple_block: "=>" . expr
  351                      | "=>" . "<-" expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "<-"                              shift, and go to state 1592
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1593
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1514

  349 block_or_simple_block: expression_block .

    $default  reduce using rule 349 (block_or_simple_block)


State 1515

  367 expr_full_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 367 (expr_full_block)


State 1516

  506 expr: expr "is" "type" '<' $@29 type_declaration_no_options . '>' $@30
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "??"        shift, and go to state 423
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '>'         shift, and go to state 1594
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    dim_list  go to state 429


State 1517

  546 expr_mtag: expr "is" "$f" '(' expr ')' .

    $default  reduce using rule 546 (expr_mtag)


State 1518

  512 expr: expr "as" "type" '<' $@31 type_declaration . '>' $@32
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1595


State 1519

  544 expr_mtag: expr "as" "$f" '(' expr ')' .

    $default  reduce using rule 544 (expr_mtag)


State 1520

  420 expr_method_call: expr "->" "name" '(' expr_list ')' .

    $default  reduce using rule 420 (expr_method_call)


State 1521

  541 expr_mtag: expr "?." "$f" '(' expr ')' .

    $default  reduce using rule 541 (expr_mtag)


State 1522

  517 expr: expr '?' "as" "type" '<' $@33 . type_declaration '>' $@34

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 368
    type_declaration             go to state 1596


State 1523

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  545          | expr '?' "as" "$f" '(' expr . ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1597


State 1524

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  543          | expr '.' "?." "$f" '(' expr . ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1598


State 1525

  540 expr_mtag: expr '.' "$f" '(' expr ')' .

    $default  reduce using rule 540 (expr_mtag)


State 1526

  434 expr_field: expr '.' "name" '(' '[' make_struct_fields . ']' ')'
  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr

    ','  shift, and go to state 978
    ']'  shift, and go to state 1599


State 1527

  433 expr_field: expr '.' "name" '(' expr_list ')' .

    $default  reduce using rule 433 (expr_field)


State 1528

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  542          | expr '.' '.' "$f" '(' expr . ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1600


State 1529

  436 expr_field: expr '.' basic_type_declaration '(' expr_list ')' .

    $default  reduce using rule 436 (expr_field)


State 1530

  555 optional_constant: "const" .

    $default  reduce using rule 555 (optional_constant)


State 1531

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant . $@36 function_declaration_header semicolon

    $default  reduce using rule 566 ($@36)

    $@36  go to state 1601


State 1532

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override . optional_constant $@37 function_declaration_header expression_block

    "const"  shift, and go to state 1530

    $default  reduce using rule 554 (optional_constant)

    optional_constant  go to state 1602


State 1533

  561 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable . variable_declaration

    "$i"    shift, and go to state 636
    "name"  shift, and go to state 637

    variable_declaration_no_type  go to state 1603
    variable_declaration_type     go to state 1604
    variable_declaration          go to state 1605
    variable_name_with_pos_list   go to state 640


State 1534

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list . ')'

    ')'  shift, and go to state 1606


State 1535

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1607


State 1536

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1608


State 1537

  342 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1609


State 1538

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" . '>' expr ')'

    '>'  shift, and go to state 1610


State 1539

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' . '(' expr ')'

    '('  shift, and go to state 1611


State 1540

  345 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1612


State 1541

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1613


State 1542

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 . '(' use_initializer optional_make_struct_dim_decl ')'

    '('  shift, and go to state 1614


State 1543

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 . '(' make_variant_dim ')'

    '('  shift, and go to state 1615


State 1544

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' . optional_expr_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 1616
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1545

  905 make_table_decl: "table" '<' type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 905 (make_table_decl)


State 1546

  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' . optional_expr_map_tuple_list ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 266 (optional_expr_map_tuple_list)

    string_builder                go to state 518
    expr_reader                   go to state 519
    optional_expr_map_tuple_list  go to state 1617
    expression_keyword            go to state 582
    name_in_namespace             go to state 537
    expr_new                      go to state 539
    expr_cast                     go to state 549
    expr_type_decl                go to state 550
    expr_type_info                go to state 551
    block_or_lambda               go to state 552
    expr_full_block               go to state 553
    expr_numeric_const            go to state 554
    expr_named_call               go to state 557
    expr_method_call              go to state 558
    func_addr_expr                go to state 559
    expr_field                    go to state 560
    expr_call                     go to state 561
    expr                          go to state 712
    expr_mtag                     go to state 563
    basic_type_declaration        go to state 564
    make_decl                     go to state 565
    make_struct_decl              go to state 566
    make_map_tuple                go to state 721
    make_tuple_call               go to state 567
    make_dim_decl                 go to state 568
    expr_map_tuple_list           go to state 722
    make_table_decl               go to state 569
    array_comprehension           go to state 570


State 1547

  331 expr_cast: "cast" '<' $@14 type_declaration_no_options '>' $@15 expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 331 (expr_cast)


State 1548

  334 expr_cast: "upcast" '<' $@16 type_declaration_no_options '>' $@17 expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 334 (expr_cast)


State 1549

  337 expr_cast: "reinterpret" '<' $@18 type_declaration_no_options '>' $@19 expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 337 (expr_cast)


State 1550

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' . expr_list optional_comma ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 1618
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1551

  848 use_initializer: "uninitialized" .

    $default  reduce using rule 848 (use_initializer)


State 1552

  866 make_struct_decl: "default" '<' $@95 type_declaration_no_options '>' $@96 use_initializer .

    $default  reduce using rule 866 (make_struct_decl)


State 1553

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1619


State 1554

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' . use_initializer make_variant_dim ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1620


State 1555

  500 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' ')' .

    $default  reduce using rule 500 (expr)


State 1556

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  501     | "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr . ')'
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1621


State 1557

  366 expr_block: block_or_lambda optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type block_or_simple_block .

    $default  reduce using rule 366 (expr_block)


State 1558

  539 expr_mtag: "$c" '(' expr ')' '(' expr_list ')' .

    $default  reduce using rule 539 (expr_mtag)


State 1559

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']' ']'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    ".."                 shift, and go to state 796
    "end of expression"  shift, and go to state 1622
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1623


State 1560

  852 make_struct_decl: "[[" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_sqr_sqr .

    $default  reduce using rule 852 (make_struct_decl)


State 1561

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where "end of code block" ']'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    ".."                 shift, and go to state 796
    "end of expression"  shift, and go to state 1622
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1624


State 1562

  854 make_struct_decl: "[{" type_declaration_no_options '(' ')' make_struct_dim optional_block optional_trailing_delim_cur_sqr .

    $default  reduce using rule 854 (make_struct_decl)


State 1563

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block" "end of code block"

    "end of expression"  shift, and go to state 1622

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1625


State 1564

  272 expression_keyword: "keyword" '<' $@8 type_declaration_no_options_list '>' $@9 expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 272 (expression_keyword)


State 1565

  265 optional_expr_list_in_braces: '(' . optional_expr_list optional_comma ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 262 (optional_expr_list)

    string_builder          go to state 518
    expr_reader             go to state 519
    optional_expr_list      go to state 1626
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 731
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1566

  275 expression_keyword: "type function" '<' $@10 type_declaration_no_options_list '>' $@11 optional_expr_list_in_braces .

    $default  reduce using rule 275 (expression_keyword)


State 1567

   30 format_string: format_string . STRING_CHARACTER
   33 optional_format_string: ':' $@1 format_string .

    STRING_CHARACTER  shift, and go to state 1627

    $default  reduce using rule 33 (optional_format_string)


State 1568

  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple . array_comprehension_where "end of code block"

    "end of expression"  shift, and go to state 1622

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1628


State 1569

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    ".."                 shift, and go to state 796
    "end of expression"  shift, and go to state 1622
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1629


State 1570

  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" . expr array_comprehension_where ']'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1630
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1571

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  819 make_struct_fields: "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 819 (make_struct_fields)


State 1572

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  818 make_struct_fields: "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 818 (make_struct_fields)


State 1573

  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' . copy_or_move expr
  821                   | make_struct_fields ',' "$f" '(' expr ')' . ":=" expr

    "<-"  shift, and go to state 866
    ":="  shift, and go to state 1631
    '='   shift, and go to state 868

    copy_or_move  go to state 1632


State 1574

  426 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 980
    "name"  shift, and go to state 63

    name_in_namespace  go to state 983
    func_addr_name     go to state 1633


State 1575

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' . $@26 func_addr_name

    $default  reduce using rule 428 ($@26)

    $@26  go to state 1634


State 1576

   67 expression_else: elif_or_static_elif expr expression_block expression_else .

    $default  reduce using rule 67 (expression_else)


State 1577

  298 expression_return_no_pipe: "return" .
  299                          | "return" . expr_list
  300                          | "return" . "<-" expr_list

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "<-"                              shift, and go to state 1635
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    $default  reduce using rule 298 (expression_return_no_pipe)

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 662
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1578

  304 expression_yield_no_pipe: "yield" . expr
  305                         | "yield" . "<-" expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "<-"                              shift, and go to state 1636
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1637
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1579

   74 expression_else_one_liner: "else" $@3 expression_if_one_liner .

    $default  reduce using rule 74 (expression_else_one_liner)


State 1580

   78 expression_if_one_liner: expression_break .

    $default  reduce using rule 78 (expression_if_one_liner)


State 1581

   79 expression_if_one_liner: expression_continue .

    $default  reduce using rule 79 (expression_if_one_liner)


State 1582

   76 expression_if_one_liner: expression_return_no_pipe .

    $default  reduce using rule 76 (expression_if_one_liner)


State 1583

   77 expression_if_one_liner: expression_yield_no_pipe .

    $default  reduce using rule 77 (expression_if_one_liner)


State 1584

   75 expression_if_one_liner: expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 75 (expression_if_one_liner)


State 1585

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1638


State 1586

  418 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1639


State 1587

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion ']' ']' ':' . type_declaration_no_options copy_or_move_or_clone expr_pipe

    "type"       shift, and go to state 322
    "array"      shift, and go to state 323
    "table"      shift, and go to state 324
    "typedecl"   shift, and go to state 325
    "iterator"   shift, and go to state 326
    "smart_ptr"  shift, and go to state 327
    "bool"       shift, and go to state 328
    "void"       shift, and go to state 329
    "string"     shift, and go to state 330
    "auto"       shift, and go to state 331
    "int"        shift, and go to state 332
    "int2"       shift, and go to state 333
    "int3"       shift, and go to state 334
    "int4"       shift, and go to state 335
    "uint"       shift, and go to state 336
    "bitfield"   shift, and go to state 337
    "uint2"      shift, and go to state 338
    "uint3"      shift, and go to state 339
    "uint4"      shift, and go to state 340
    "float"      shift, and go to state 341
    "float2"     shift, and go to state 342
    "float3"     shift, and go to state 343
    "float4"     shift, and go to state 344
    "range"      shift, and go to state 345
    "urange"     shift, and go to state 346
    "range64"    shift, and go to state 347
    "urange64"   shift, and go to state 348
    "block"      shift, and go to state 349
    "int64"      shift, and go to state 350
    "uint64"     shift, and go to state 351
    "double"     shift, and go to state 352
    "function"   shift, and go to state 353
    "lambda"     shift, and go to state 354
    "int8"       shift, and go to state 355
    "uint8"      shift, and go to state 356
    "int16"      shift, and go to state 357
    "uint16"     shift, and go to state 358
    "tuple"      shift, and go to state 359
    "variant"    shift, and go to state 360
    "::"         shift, and go to state 62
    "$t"         shift, and go to state 361
    "name"       shift, and go to state 63
    '$'          shift, and go to state 362

    name_in_namespace            go to state 363
    basic_type_declaration       go to state 364
    structure_type_declaration   go to state 365
    auto_type_declaration        go to state 366
    bitfield_type_declaration    go to state 367
    type_declaration_no_options  go to state 1640


State 1588

  323 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr semicolon
  324                                     | "[[" tuple_expansion ']' ']' optional_ref . copy_or_move_or_clone expr_pipe

    "<-"  shift, and go to state 587
    ":="  shift, and go to state 588
    '='   shift, and go to state 589

    copy_or_move_or_clone  go to state 1641


State 1589

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  322                                     | '(' tuple_expansion ')' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "<-"        shift, and go to state 587
    "??"        shift, and go to state 423
    ":="        shift, and go to state 588
    '='         shift, and go to state 589
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    copy_or_move_or_clone  go to state 1642
    dim_list               go to state 429


State 1590

  325 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr semicolon
  326                                     | '(' tuple_expansion ')' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 1643
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1644
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1591

  359 capture_entry: "name" '(' "name" ')' .

    $default  reduce using rule 359 (capture_entry)


State 1592

  351 block_or_simple_block: "=>" "<-" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1645
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1593

  350 block_or_simple_block: "=>" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    ".."  error (nonassociative)

    $default  reduce using rule 350 (block_or_simple_block)


State 1594

  506 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' . $@30

    $default  reduce using rule 505 ($@30)

    $@30  go to state 1646


State 1595

  512 expr: expr "as" "type" '<' $@31 type_declaration '>' . $@32

    $default  reduce using rule 511 ($@32)

    $@32  go to state 1647


State 1596

  517 expr: expr '?' "as" "type" '<' $@33 type_declaration . '>' $@34
  792 type_declaration: type_declaration . '|' type_declaration_no_options
  793                 | type_declaration . '|' '#'

    '|'  shift, and go to state 430
    '>'  shift, and go to state 1648


State 1597

  545 expr_mtag: expr '?' "as" "$f" '(' expr ')' .

    $default  reduce using rule 545 (expr_mtag)


State 1598

  543 expr_mtag: expr '.' "?." "$f" '(' expr ')' .

    $default  reduce using rule 543 (expr_mtag)


State 1599

  434 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' . ')'

    ')'  shift, and go to state 1649


State 1600

  542 expr_mtag: expr '.' '.' "$f" '(' expr ')' .

    $default  reduce using rule 542 (expr_mtag)


State 1601

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 . function_declaration_header semicolon

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1650


State 1602

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant . $@37 function_declaration_header expression_block

    $default  reduce using rule 568 ($@37)

    $@37  go to state 1651


State 1603

  600 variable_declaration: variable_declaration_no_type .

    $default  reduce using rule 600 (variable_declaration)


State 1604

  599 variable_declaration: variable_declaration_type .

    $default  reduce using rule 599 (variable_declaration)


State 1605

  561 structure_variable_declaration: optional_field_annotation optional_static_member_variable optional_override optional_public_or_private_member_variable variable_declaration .

    $default  reduce using rule 561 (structure_variable_declaration)


State 1606

  738 type_declaration_no_options: '$' name_in_namespace '<' $@52 type_declaration_no_options_list '>' '(' optional_expr_list ')' .

    $default  reduce using rule 738 (type_declaration_no_options)


State 1607

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    '('     shift, and go to state 1652

    $default  reduce using rule 832 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1653
    make_struct_dim_list           go to state 1654
    make_struct_dim_decl           go to state 1655
    optional_make_struct_dim_decl  go to state 1656


State 1608

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    '('     shift, and go to state 1652

    $default  reduce using rule 832 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1653
    make_struct_dim_list           go to state 1654
    make_struct_dim_decl           go to state 1655
    optional_make_struct_dim_decl  go to state 1657


State 1609

  342 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" '>' expr ')' .

    $default  reduce using rule 342 (expr_type_info)


State 1610

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1658
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1611

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' . expr ')'

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1659
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1612

  345 expr_type_info: "typeinfo" name_in_namespace '<' "name" '>' '(' expr ')' .

    $default  reduce using rule 345 (expr_type_info)


State 1613

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1660


State 1614

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' . use_initializer optional_make_struct_dim_decl ')'

    "uninitialized"  shift, and go to state 1551

    $default  reduce using rule 847 (use_initializer)

    use_initializer  go to state 1661


State 1615

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' . make_variant_dim ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    $default  reduce using rule 822 (make_variant_dim)

    make_struct_fields  go to state 1662
    make_variant_dim    go to state 1663


State 1616

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list . ')'

    ')'  shift, and go to state 1664


State 1617

  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list . ')'

    ')'  shift, and go to state 1665


State 1618

  348 expr_list: expr_list . ',' expr
  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list . optional_comma ')'

    ','  shift, and go to state 972

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1666


State 1619

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    '('     shift, and go to state 1652

    $default  reduce using rule 832 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1653
    make_struct_dim_list           go to state 1654
    make_struct_dim_decl           go to state 1655
    optional_make_struct_dim_decl  go to state 1667


State 1620

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer . make_variant_dim ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    $default  reduce using rule 822 (make_variant_dim)

    make_struct_fields  go to state 1662
    make_variant_dim    go to state 1668


State 1621

  501 expr: "generator" '<' type_declaration_no_options '>' optional_capture_list '(' expr ')' .

    $default  reduce using rule 501 (expr)


State 1622

  908 array_comprehension_where: "end of expression" . "where" expr

    "where"  shift, and go to state 1669


State 1623

  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']' ']'

    ']'  shift, and go to state 1670


State 1624

  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . "end of code block" ']'

    "end of code block"  shift, and go to state 1671


State 1625

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block" "end of code block"

    "end of code block"  shift, and go to state 1672


State 1626

  265 optional_expr_list_in_braces: '(' optional_expr_list . optional_comma ')'

    ','  shift, and go to state 1673

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1674


State 1627

   30 format_string: format_string STRING_CHARACTER .

    $default  reduce using rule 30 (format_string)


State 1628

  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where . "end of code block"

    "end of code block"  shift, and go to state 1675


State 1629

  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1676


State 1630

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr . array_comprehension_where ']'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    ".."                 shift, and go to state 796
    "end of expression"  shift, and go to state 1622
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810

    $default  reduce using rule 907 (array_comprehension_where)

    array_comprehension_where  go to state 1677


State 1631

  821 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1678
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1632

  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1679
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1633

  426 func_addr_expr: '@' '@' '<' $@23 type_declaration_no_options '>' $@24 func_addr_name .

    $default  reduce using rule 426 (func_addr_expr)


State 1634

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 . func_addr_name

    "::"    shift, and go to state 62
    "$i"    shift, and go to state 980
    "name"  shift, and go to state 63

    name_in_namespace  go to state 983
    func_addr_name     go to state 1680


State 1635

  300 expression_return_no_pipe: "return" "<-" . expr_list

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    expr_list               go to state 888
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 732
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1636

  305 expression_yield_no_pipe: "yield" "<-" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1681
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1637

  304 expression_yield_no_pipe: "yield" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 304 (expression_yield_no_pipe)


State 1638

  369 expr_full_block_assumed_piped: block_or_lambda $@22 optional_annotation_list optional_capture_list optional_function_argument_list optional_function_type expression_block .

    $default  reduce using rule 369 (expr_full_block_assumed_piped)


State 1639

  418 expr_named_call: name_in_namespace '(' expr_list ',' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 418 (expr_named_call)


State 1640

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr semicolon
  320                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options . copy_or_move_or_clone expr_pipe
  730 type_declaration_no_options: type_declaration_no_options . dim_list
  731                            | type_declaration_no_options . '[' ']'
  739                            | type_declaration_no_options . '-' '[' ']'
  740                            | type_declaration_no_options . "explicit"
  741                            | type_declaration_no_options . "const"
  742                            | type_declaration_no_options . '-' "const"
  743                            | type_declaration_no_options . '&'
  744                            | type_declaration_no_options . '-' '&'
  745                            | type_declaration_no_options . '#'
  746                            | type_declaration_no_options . "implicit"
  747                            | type_declaration_no_options . '-' '#'
  748                            | type_declaration_no_options . "==" "const"
  749                            | type_declaration_no_options . "==" '&'
  750                            | type_declaration_no_options . '?'
  754                            | type_declaration_no_options . "??"

    "const"     shift, and go to state 419
    "implicit"  shift, and go to state 420
    "explicit"  shift, and go to state 421
    "=="        shift, and go to state 422
    "<-"        shift, and go to state 587
    "??"        shift, and go to state 423
    ":="        shift, and go to state 588
    '='         shift, and go to state 589
    '?'         shift, and go to state 424
    '&'         shift, and go to state 425
    '-'         shift, and go to state 426
    '['         shift, and go to state 427
    '#'         shift, and go to state 428

    copy_or_move_or_clone  go to state 1682
    dim_list               go to state 429


State 1641

  323 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr semicolon
  324                                     | "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 1683
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1684
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1642

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  322                                     | '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 1685
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1686
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1643

  326 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 326 (tuple_expansion_variable_declaration)


State 1644

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  325 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr . semicolon
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1687
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1645

  351 block_or_simple_block: "=>" "<-" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 351 (block_or_simple_block)


State 1646

  506 expr: expr "is" "type" '<' $@29 type_declaration_no_options '>' $@30 .

    $default  reduce using rule 506 (expr)


State 1647

  512 expr: expr "as" "type" '<' $@31 type_declaration '>' $@32 .

    $default  reduce using rule 512 (expr)


State 1648

  517 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' . $@34

    $default  reduce using rule 516 ($@34)

    $@34  go to state 1688


State 1649

  434 expr_field: expr '.' "name" '(' '[' make_struct_fields ']' ')' .

    $default  reduce using rule 434 (expr_field)


State 1650

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header . semicolon

    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14

    semicolon  go to state 1689


State 1651

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 . function_declaration_header expression_block

    "operator"  shift, and go to state 192
    "bool"      shift, and go to state 193
    "string"    shift, and go to state 194
    "int"       shift, and go to state 195
    "int2"      shift, and go to state 196
    "int3"      shift, and go to state 197
    "int4"      shift, and go to state 198
    "uint"      shift, and go to state 199
    "uint2"     shift, and go to state 200
    "uint3"     shift, and go to state 201
    "uint4"     shift, and go to state 202
    "float"     shift, and go to state 203
    "float2"    shift, and go to state 204
    "float3"    shift, and go to state 205
    "float4"    shift, and go to state 206
    "range"     shift, and go to state 207
    "urange"    shift, and go to state 208
    "range64"   shift, and go to state 209
    "urange64"  shift, and go to state 210
    "int64"     shift, and go to state 211
    "uint64"    shift, and go to state 212
    "double"    shift, and go to state 213
    "int8"      shift, and go to state 214
    "uint8"     shift, and go to state 215
    "int16"     shift, and go to state 216
    "uint16"    shift, and go to state 217
    "++"        shift, and go to state 218
    "--"        shift, and go to state 219
    "name"      shift, and go to state 220

    function_name                go to state 221
    function_declaration_header  go to state 1690


State 1652

  827 make_struct_dim_list: '(' . make_struct_fields ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    make_struct_fields  go to state 1691


State 1653

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  829 make_struct_dim_decl: make_struct_fields .

    ','  shift, and go to state 978

    $default  reduce using rule 829 (make_struct_dim_decl)


State 1654

  828 make_struct_dim_list: make_struct_dim_list . ',' '(' make_struct_fields ')'
  830 make_struct_dim_decl: make_struct_dim_list . optional_comma

    ','  shift, and go to state 1692

    $default  reduce using rule 909 (optional_comma)

    optional_comma  go to state 1693


State 1655

  831 optional_make_struct_dim_decl: make_struct_dim_decl .

    $default  reduce using rule 831 (optional_make_struct_dim_decl)


State 1656

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1694


State 1657

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1695


State 1658

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1696


State 1659

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr . ')'
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810
    ')'    shift, and go to state 1697


State 1660

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    '('     shift, and go to state 1652

    $default  reduce using rule 832 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1653
    make_struct_dim_list           go to state 1654
    make_struct_dim_decl           go to state 1655
    optional_make_struct_dim_decl  go to state 1698


State 1661

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer . optional_make_struct_dim_decl ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245
    '('     shift, and go to state 1652

    $default  reduce using rule 832 (optional_make_struct_dim_decl)

    make_struct_fields             go to state 1653
    make_struct_dim_list           go to state 1654
    make_struct_dim_decl           go to state 1655
    optional_make_struct_dim_decl  go to state 1699


State 1662

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  823 make_variant_dim: make_struct_fields .

    ','  shift, and go to state 978

    $default  reduce using rule 823 (make_variant_dim)


State 1663

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim . ')'

    ')'  shift, and go to state 1700


State 1664

  893 make_dim_decl: "array" '<' $@105 type_declaration_no_options '>' $@106 '(' optional_expr_list ')' .

    $default  reduce using rule 893 (make_dim_decl)


State 1665

  906 make_table_decl: "table" '<' type_declaration_no_options c_or_s type_declaration_no_options '>' '(' optional_expr_map_tuple_list ')' .

    $default  reduce using rule 906 (make_table_decl)


State 1666

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma . ')'

    ')'  shift, and go to state 1701


State 1667

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1702


State 1668

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim . ')'

    ')'  shift, and go to state 1703


State 1669

  908 array_comprehension_where: "end of expression" "where" . expr

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 580
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expression_keyword      go to state 582
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1704
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1670

  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' . ']'

    ']'  shift, and go to state 1705


State 1671

  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" . ']'

    ']'  shift, and go to state 1706


State 1672

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" . "end of code block"

    "end of code block"  shift, and go to state 1707


State 1673

  910 optional_comma: ',' .

    $default  reduce using rule 910 (optional_comma)


State 1674

  265 optional_expr_list_in_braces: '(' optional_expr_list optional_comma . ')'

    ')'  shift, and go to state 1708


State 1675

  915 array_comprehension: "begin of code block" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" .

    $default  reduce using rule 915 (array_comprehension)


State 1676

  911 array_comprehension: '[' "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 911 (array_comprehension)


State 1677

  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where . ']'

    ']'  shift, and go to state 1709


State 1678

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  821 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' ":=" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 821 (make_struct_fields)


State 1679

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  820 make_struct_fields: make_struct_fields ',' "$f" '(' expr ')' copy_or_move expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 820 (make_struct_fields)


State 1680

  429 func_addr_expr: '@' '@' '<' $@25 optional_function_argument_list optional_function_type '>' $@26 func_addr_name .

    $default  reduce using rule 429 (func_addr_expr)


State 1681

  305 expression_yield_no_pipe: "yield" "<-" expr .
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 305 (expression_yield_no_pipe)


State 1682

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr semicolon
  320                                     | "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone . expr_pipe

    "struct"                          shift, and go to state 446
    "class"                           shift, and go to state 447
    "true"                            shift, and go to state 452
    "false"                           shift, and go to state 453
    "new"                             shift, and go to state 454
    "typeinfo"                        shift, and go to state 455
    "type"                            shift, and go to state 456
    "array"                           shift, and go to state 457
    "null"                            shift, and go to state 459
    "table"                           shift, and go to state 462
    "deref"                           shift, and go to state 464
    "cast"                            shift, and go to state 467
    "upcast"                          shift, and go to state 468
    "addr"                            shift, and go to state 469
    "reinterpret"                     shift, and go to state 472
    "unsafe"                          shift, and go to state 579
    "fixed_array"                     shift, and go to state 476
    "default"                         shift, and go to state 477
    "bool"                            shift, and go to state 328
    "void"                            shift, and go to state 329
    "string"                          shift, and go to state 330
    "int"                             shift, and go to state 332
    "int2"                            shift, and go to state 333
    "int3"                            shift, and go to state 334
    "int4"                            shift, and go to state 335
    "uint"                            shift, and go to state 336
    "bitfield"                        shift, and go to state 478
    "uint2"                           shift, and go to state 338
    "uint3"                           shift, and go to state 339
    "uint4"                           shift, and go to state 340
    "float"                           shift, and go to state 341
    "float2"                          shift, and go to state 342
    "float3"                          shift, and go to state 343
    "float4"                          shift, and go to state 344
    "range"                           shift, and go to state 345
    "urange"                          shift, and go to state 346
    "range64"                         shift, and go to state 347
    "urange64"                        shift, and go to state 348
    "int64"                           shift, and go to state 350
    "uint64"                          shift, and go to state 351
    "double"                          shift, and go to state 352
    "int8"                            shift, and go to state 355
    "uint8"                           shift, and go to state 356
    "int16"                           shift, and go to state 357
    "uint16"                          shift, and go to state 358
    "tuple"                           shift, and go to state 479
    "variant"                         shift, and go to state 480
    "generator"                       shift, and go to state 481
    "++"                              shift, and go to state 483
    "--"                              shift, and go to state 484
    "$ <|"                            shift, and go to state 485
    "@ <|"                            shift, and go to state 486
    "@@ <|"                           shift, and go to state 487
    "::"                              shift, and go to state 62
    "$$"                              shift, and go to state 488
    "$i"                              shift, and go to state 489
    "$v"                              shift, and go to state 490
    "$b"                              shift, and go to state 491
    "$a"                              shift, and go to state 492
    "$c"                              shift, and go to state 493
    "..."                             shift, and go to state 494
    "[["                              shift, and go to state 495
    "[{"                              shift, and go to state 496
    "{{"                              shift, and go to state 497
    "integer constant"                shift, and go to state 498
    "long integer constant"           shift, and go to state 499
    "unsigned integer constant"       shift, and go to state 500
    "unsigned long integer constant"  shift, and go to state 501
    "unsigned int8 constant"          shift, and go to state 502
    "floating point constant"         shift, and go to state 503
    "double constant"                 shift, and go to state 504
    "name"                            shift, and go to state 63
    "keyword"                         shift, and go to state 581
    "type function"                   shift, and go to state 506
    "start of the string"             shift, and go to state 507
    "begin of code block"             shift, and go to state 508
    '-'                               shift, and go to state 509
    '+'                               shift, and go to state 510
    '*'                               shift, and go to state 511
    '%'                               shift, and go to state 15
    '~'                               shift, and go to state 512
    '!'                               shift, and go to state 513
    '['                               shift, and go to state 514
    '('                               shift, and go to state 515
    '$'                               shift, and go to state 516
    '@'                               shift, and go to state 517

    string_builder          go to state 518
    expr_reader             go to state 519
    expr_call_pipe          go to state 532
    expression_keyword      go to state 535
    expr_pipe               go to state 1710
    name_in_namespace       go to state 537
    expr_new                go to state 539
    expr_cast               go to state 549
    expr_type_decl          go to state 550
    expr_type_info          go to state 551
    block_or_lambda         go to state 552
    expr_full_block         go to state 553
    expr_numeric_const      go to state 554
    expr_assign             go to state 663
    expr_named_call         go to state 557
    expr_method_call        go to state 558
    func_addr_expr          go to state 559
    expr_field              go to state 560
    expr_call               go to state 561
    expr                    go to state 1711
    expr_mtag               go to state 563
    basic_type_declaration  go to state 564
    make_decl               go to state 565
    make_struct_decl        go to state 566
    make_tuple_call         go to state 567
    make_dim_decl           go to state 568
    make_table_decl         go to state 569
    array_comprehension     go to state 570


State 1683

  324 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 324 (tuple_expansion_variable_declaration)


State 1684

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  323 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr . semicolon
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1712
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1685

  322 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 322 (tuple_expansion_variable_declaration)


State 1686

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1713
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1687

  325 tuple_expansion_variable_declaration: '(' tuple_expansion ')' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 325 (tuple_expansion_variable_declaration)


State 1688

  517 expr: expr '?' "as" "type" '<' $@33 type_declaration '>' $@34 .

    $default  reduce using rule 517 (expr)


State 1689

  567 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable "abstract" optional_constant $@36 function_declaration_header semicolon .

    $default  reduce using rule 567 (struct_variable_declaration_list)


State 1690

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header . expression_block

    "new scope"            shift, and go to state 50
    "begin of code block"  shift, and go to state 51

    open_block        go to state 297
    expression_block  go to state 1714


State 1691

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  827 make_struct_dim_list: '(' make_struct_fields . ')'

    ','  shift, and go to state 978
    ')'  shift, and go to state 1715


State 1692

  828 make_struct_dim_list: make_struct_dim_list ',' . '(' make_struct_fields ')'
  910 optional_comma: ',' .

    '('  shift, and go to state 1716

    $default  reduce using rule 910 (optional_comma)


State 1693

  830 make_struct_dim_decl: make_struct_dim_list optional_comma .

    $default  reduce using rule 830 (make_struct_dim_decl)


State 1694

  857 make_struct_decl: "struct" '<' $@89 type_declaration_no_options '>' $@90 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 857 (make_struct_decl)


State 1695

  860 make_struct_decl: "class" '<' $@91 type_declaration_no_options '>' $@92 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 860 (make_struct_decl)


State 1696

  343 expr_type_info: "typeinfo" '(' name_in_namespace '<' "name" c_or_s "name" '>' expr ')' .

    $default  reduce using rule 343 (expr_type_info)


State 1697

  346 expr_type_info: "typeinfo" name_in_namespace '<' "name" "end of expression" "name" '>' '(' expr ')' .

    $default  reduce using rule 346 (expr_type_info)


State 1698

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1717


State 1699

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl . ')'

    ')'  shift, and go to state 1718


State 1700

  889 make_dim_decl: "array" "variant" '<' $@103 variant_type_list '>' $@104 '(' make_variant_dim ')' .

    $default  reduce using rule 889 (make_dim_decl)


State 1701

  897 make_dim_decl: "fixed_array" '<' $@107 type_declaration_no_options '>' $@108 '(' expr_list optional_comma ')' .

    $default  reduce using rule 897 (make_dim_decl)


State 1702

  875 make_tuple_call: "tuple" '<' $@97 tuple_type_list '>' $@98 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 875 (make_tuple_call)


State 1703

  863 make_struct_decl: "variant" '<' $@93 variant_type_list '>' $@94 '(' use_initializer make_variant_dim ')' .

    $default  reduce using rule 863 (make_struct_decl)


State 1704

  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'
  908 array_comprehension_where: "end of expression" "where" expr .

    "is"   shift, and go to state 758
    "as"   shift, and go to state 759
    "<<"   shift, and go to state 768
    ">>"   shift, and go to state 769
    "++"   shift, and go to state 770
    "--"   shift, and go to state 771
    "<="   shift, and go to state 772
    ">="   shift, and go to state 775
    "=="   shift, and go to state 776
    "!="   shift, and go to state 777
    "->"   shift, and go to state 778
    "??"   shift, and go to state 780
    "?."   shift, and go to state 781
    "?["   shift, and go to state 782
    "<|"   shift, and go to state 783
    "|>"   shift, and go to state 784
    "<<<"  shift, and go to state 786
    ">>>"  shift, and go to state 787
    "&&"   shift, and go to state 790
    "||"   shift, and go to state 791
    "^^"   shift, and go to state 792
    ".."   shift, and go to state 796
    '?'    shift, and go to state 798
    '|'    shift, and go to state 799
    '^'    shift, and go to state 800
    '&'    shift, and go to state 801
    '<'    shift, and go to state 802
    '>'    shift, and go to state 803
    '-'    shift, and go to state 804
    '+'    shift, and go to state 805
    '*'    shift, and go to state 806
    '/'    shift, and go to state 807
    '%'    shift, and go to state 808
    '.'    shift, and go to state 809
    '['    shift, and go to state 810

    $default  reduce using rule 908 (array_comprehension_where)


State 1705

  913 array_comprehension: "[[" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' ']' .

    $default  reduce using rule 913 (array_comprehension)


State 1706

  914 array_comprehension: "[{" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where "end of code block" ']' .

    $default  reduce using rule 914 (array_comprehension)


State 1707

  916 array_comprehension: "{{" "for" variable_name_with_pos_list "in" expr_list "end of expression" make_map_tuple array_comprehension_where "end of code block" "end of code block" .

    $default  reduce using rule 916 (array_comprehension)


State 1708

  265 optional_expr_list_in_braces: '(' optional_expr_list optional_comma ')' .

    $default  reduce using rule 265 (optional_expr_list_in_braces)


State 1709

  912 array_comprehension: '[' "iterator" "for" variable_name_with_pos_list "in" expr_list "end of expression" expr array_comprehension_where ']' .

    $default  reduce using rule 912 (array_comprehension)


State 1710

  320 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr_pipe .

    $default  reduce using rule 320 (tuple_expansion_variable_declaration)


State 1711

  234 expr_call_pipe: expr . expr_full_block_assumed_piped
  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr . semicolon
  377 expr_assign: expr .
  378            | expr . '=' expr
  379            | expr . "<-" expr
  380            | expr . ":=" expr
  381            | expr . "&=" expr
  382            | expr . "|=" expr
  383            | expr . "^=" expr
  384            | expr . "&&=" expr
  385            | expr . "||=" expr
  386            | expr . "^^=" expr
  387            | expr . "+=" expr
  388            | expr . "-=" expr
  389            | expr . "*=" expr
  390            | expr . "/=" expr
  391            | expr . "%=" expr
  392            | expr . "<<=" expr
  393            | expr . ">>=" expr
  394            | expr . "<<<=" expr
  395            | expr . ">>>=" expr
  419 expr_method_call: expr . "->" "name" '(' ')'
  420                 | expr . "->" "name" '(' expr_list ')'
  430 expr_field: expr . '.' "name"
  431           | expr . '.' '.' "name"
  432           | expr . '.' "name" '(' ')'
  433           | expr . '.' "name" '(' expr_list ')'
  434           | expr . '.' "name" '(' '[' make_struct_fields ']' ')'
  435           | expr . '.' basic_type_declaration '(' ')'
  436           | expr . '.' basic_type_declaration '(' expr_list ')'
  439           | expr . '.' $@27 error $@28
  461 expr: expr . "<<" expr
  462     | expr . ">>" expr
  463     | expr . "<<<" expr
  464     | expr . ">>>" expr
  465     | expr . '+' expr
  466     | expr . '-' expr
  467     | expr . '*' expr
  468     | expr . '/' expr
  469     | expr . '%' expr
  470     | expr . '<' expr
  471     | expr . '>' expr
  472     | expr . "==" expr
  473     | expr . "!=" expr
  474     | expr . "<=" expr
  475     | expr . ">=" expr
  476     | expr . '&' expr
  477     | expr . '|' expr
  478     | expr . '^' expr
  479     | expr . "&&" expr
  480     | expr . "||" expr
  481     | expr . "^^" expr
  482     | expr . ".." expr
  485     | expr . "++"
  486     | expr . "--"
  489     | expr . '[' expr ']'
  490     | expr . '.' '[' expr ']'
  491     | expr . "?[" expr ']'
  492     | expr . '.' "?[" expr ']'
  493     | expr . "?." "name"
  494     | expr . '.' "?." "name"
  502     | expr . "??" expr
  503     | expr . '?' expr ':' expr
  506     | expr . "is" "type" '<' $@29 type_declaration_no_options '>' $@30
  507     | expr . "is" basic_type_declaration
  508     | expr . "is" "name"
  509     | expr . "as" "name"
  512     | expr . "as" "type" '<' $@31 type_declaration '>' $@32
  513     | expr . "as" basic_type_declaration
  514     | expr . '?' "as" "name"
  517     | expr . '?' "as" "type" '<' $@33 type_declaration '>' $@34
  518     | expr . '?' "as" basic_type_declaration
  526     | expr . "<|" expr
  527     | expr . "|>" expr
  528     | expr . "|>" basic_type_declaration
  540 expr_mtag: expr . '.' "$f" '(' expr ')'
  541          | expr . "?." "$f" '(' expr ')'
  542          | expr . '.' '.' "$f" '(' expr ')'
  543          | expr . '.' "?." "$f" '(' expr ')'
  544          | expr . "as" "$f" '(' expr ')'
  545          | expr . '?' "as" "$f" '(' expr ')'
  546          | expr . "is" "$f" '(' expr ')'

    "is"                 shift, and go to state 758
    "as"                 shift, and go to state 759
    "+="                 shift, and go to state 890
    "-="                 shift, and go to state 891
    "/="                 shift, and go to state 892
    "*="                 shift, and go to state 893
    "%="                 shift, and go to state 894
    "&="                 shift, and go to state 895
    "|="                 shift, and go to state 896
    "^="                 shift, and go to state 897
    "<<"                 shift, and go to state 768
    ">>"                 shift, and go to state 769
    "++"                 shift, and go to state 770
    "--"                 shift, and go to state 771
    "<="                 shift, and go to state 772
    "<<="                shift, and go to state 898
    ">>="                shift, and go to state 899
    ">="                 shift, and go to state 775
    "=="                 shift, and go to state 776
    "!="                 shift, and go to state 777
    "->"                 shift, and go to state 778
    "<-"                 shift, and go to state 900
    "??"                 shift, and go to state 780
    "?."                 shift, and go to state 781
    "?["                 shift, and go to state 782
    "<|"                 shift, and go to state 783
    "|>"                 shift, and go to state 784
    ":="                 shift, and go to state 785
    "<<<"                shift, and go to state 786
    ">>>"                shift, and go to state 787
    "<<<="               shift, and go to state 901
    ">>>="               shift, and go to state 902
    "&&"                 shift, and go to state 790
    "||"                 shift, and go to state 791
    "^^"                 shift, and go to state 792
    "&&="                shift, and go to state 903
    "||="                shift, and go to state 904
    "^^="                shift, and go to state 905
    ".."                 shift, and go to state 796
    "end of line"        shift, and go to state 13
    "end of expression"  shift, and go to state 14
    '='                  shift, and go to state 906
    '?'                  shift, and go to state 798
    '|'                  shift, and go to state 799
    '^'                  shift, and go to state 800
    '&'                  shift, and go to state 801
    '<'                  shift, and go to state 802
    '>'                  shift, and go to state 803
    '-'                  shift, and go to state 804
    '+'                  shift, and go to state 805
    '*'                  shift, and go to state 806
    '/'                  shift, and go to state 807
    '%'                  shift, and go to state 808
    '.'                  shift, and go to state 809
    '['                  shift, and go to state 810
    '$'                  shift, and go to state 516
    '@'                  shift, and go to state 695

    $default  reduce using rule 377 (expr_assign)

    semicolon                      go to state 1719
    block_or_lambda                go to state 744
    expr_full_block_assumed_piped  go to state 811


State 1712

  323 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' optional_ref copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 323 (tuple_expansion_variable_declaration)


State 1713

  321 tuple_expansion_variable_declaration: '(' tuple_expansion ')' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 321 (tuple_expansion_variable_declaration)


State 1714

  569 struct_variable_declaration_list: struct_variable_declaration_list optional_annotation_list "def" optional_public_or_private_member_variable optional_static_member_variable optional_override optional_constant $@37 function_declaration_header expression_block .

    $default  reduce using rule 569 (struct_variable_declaration_list)


State 1715

  827 make_struct_dim_list: '(' make_struct_fields ')' .

    $default  reduce using rule 827 (make_struct_dim_list)


State 1716

  828 make_struct_dim_list: make_struct_dim_list ',' '(' . make_struct_fields ')'

    "$f"    shift, and go to state 733
    "name"  shift, and go to state 1245

    make_struct_fields  go to state 1720


State 1717

  883 make_dim_decl: "array" "struct" '<' $@99 type_declaration_no_options '>' $@100 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 883 (make_dim_decl)


State 1718

  886 make_dim_decl: "array" "tuple" '<' $@101 tuple_type_list '>' $@102 '(' use_initializer optional_make_struct_dim_decl ')' .

    $default  reduce using rule 886 (make_dim_decl)


State 1719

  319 tuple_expansion_variable_declaration: "[[" tuple_expansion ']' ']' ':' type_declaration_no_options copy_or_move_or_clone expr semicolon .

    $default  reduce using rule 319 (tuple_expansion_variable_declaration)


State 1720

  816 make_struct_fields: make_struct_fields . ',' "name" copy_or_move expr
  817                   | make_struct_fields . ',' "name" ":=" expr
  820                   | make_struct_fields . ',' "$f" '(' expr ')' copy_or_move expr
  821                   | make_struct_fields . ',' "$f" '(' expr ')' ":=" expr
  828 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields . ')'

    ','  shift, and go to state 978
    ')'  shift, and go to state 1721


State 1721

  828 make_struct_dim_list: make_struct_dim_list ',' '(' make_struct_fields ')' .

    $default  reduce using rule 828 (make_struct_dim_list)
