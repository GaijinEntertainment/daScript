let GL_DEPTH_BUFFER_BIT = uint(0x00000100u)
let GL_STENCIL_BUFFER_BIT = uint(0x00000400u)
let GL_COLOR_BUFFER_BIT = uint(0x00004000u)
let GL_POINTS = uint(0x0000u)
let GL_LINES = uint(0x0001u)
let GL_LINE_LOOP = uint(0x0002u)
let GL_LINE_STRIP = uint(0x0003u)
let GL_TRIANGLES = uint(0x0004u)
let GL_TRIANGLE_STRIP = uint(0x0005u)
let GL_TRIANGLE_FAN = uint(0x0006u)
let GL_QUADS = uint(0x0007u)
let GL_NEVER = uint(0x0200u)
let GL_LESS = uint(0x0201u)
let GL_EQUAL = uint(0x0202u)
let GL_LEQUAL = uint(0x0203u)
let GL_GREATER = uint(0x0204u)
let GL_NOTEQUAL = uint(0x0205u)
let GL_GEQUAL = uint(0x0206u)
let GL_ALWAYS = uint(0x0207u)
let GL_SRC_COLOR = uint(0x0300u)
let GL_ONE_MINUS_SRC_COLOR = uint(0x0301u)
let GL_SRC_ALPHA = uint(0x0302u)
let GL_ONE_MINUS_SRC_ALPHA = uint(0x0303u)
let GL_DST_ALPHA = uint(0x0304u)
let GL_ONE_MINUS_DST_ALPHA = uint(0x0305u)
let GL_DST_COLOR = uint(0x0306u)
let GL_ONE_MINUS_DST_COLOR = uint(0x0307u)
let GL_SRC_ALPHA_SATURATE = uint(0x0308u)
let GL_FRONT_LEFT = uint(0x0400u)
let GL_FRONT_RIGHT = uint(0x0401u)
let GL_BACK_LEFT = uint(0x0402u)
let GL_BACK_RIGHT = uint(0x0403u)
let GL_FRONT = uint(0x0404u)
let GL_BACK = uint(0x0405u)
let GL_LEFT = uint(0x0406u)
let GL_RIGHT = uint(0x0407u)
let GL_FRONT_AND_BACK = uint(0x0408u)
let GL_INVALID_ENUM = uint(0x0500u)
let GL_INVALID_VALUE = uint(0x0501u)
let GL_INVALID_OPERATION = uint(0x0502u)
let GL_OUT_OF_MEMORY = uint(0x0505u)
let GL_CW = uint(0x0900u)
let GL_CCW = uint(0x0901u)
let GL_POINT_SIZE = uint(0x0B11u)
let GL_POINT_SIZE_RANGE = uint(0x0B12u)
let GL_POINT_SIZE_GRANULARITY = uint(0x0B13u)
let GL_LINE_SMOOTH = uint(0x0B20u)
let GL_LINE_WIDTH = uint(0x0B21u)
let GL_LINE_WIDTH_RANGE = uint(0x0B22u)
let GL_LINE_WIDTH_GRANULARITY = uint(0x0B23u)
let GL_POLYGON_MODE = uint(0x0B40u)
let GL_POLYGON_SMOOTH = uint(0x0B41u)
let GL_CULL_FACE = uint(0x0B44u)
let GL_CULL_FACE_MODE = uint(0x0B45u)
let GL_FRONT_FACE = uint(0x0B46u)
let GL_DEPTH_RANGE = uint(0x0B70u)
let GL_DEPTH_TEST = uint(0x0B71u)
let GL_DEPTH_WRITEMASK = uint(0x0B72u)
let GL_DEPTH_CLEAR_VALUE = uint(0x0B73u)
let GL_DEPTH_FUNC = uint(0x0B74u)
let GL_STENCIL_TEST = uint(0x0B90u)
let GL_STENCIL_CLEAR_VALUE = uint(0x0B91u)
let GL_STENCIL_FUNC = uint(0x0B92u)
let GL_STENCIL_VALUE_MASK = uint(0x0B93u)
let GL_STENCIL_FAIL = uint(0x0B94u)
let GL_STENCIL_PASS_DEPTH_FAIL = uint(0x0B95u)
let GL_STENCIL_PASS_DEPTH_PASS = uint(0x0B96u)
let GL_STENCIL_REF = uint(0x0B97u)
let GL_STENCIL_WRITEMASK = uint(0x0B98u)
let GL_VIEWPORT = uint(0x0BA2u)
let GL_DITHER = uint(0x0BD0u)
let GL_BLEND_DST = uint(0x0BE0u)
let GL_BLEND_SRC = uint(0x0BE1u)
let GL_BLEND = uint(0x0BE2u)
let GL_LOGIC_OP_MODE = uint(0x0BF0u)
let GL_DRAW_BUFFER = uint(0x0C01u)
let GL_READ_BUFFER = uint(0x0C02u)
let GL_SCISSOR_BOX = uint(0x0C10u)
let GL_SCISSOR_TEST = uint(0x0C11u)
let GL_COLOR_CLEAR_VALUE = uint(0x0C22u)
let GL_COLOR_WRITEMASK = uint(0x0C23u)
let GL_DOUBLEBUFFER = uint(0x0C32u)
let GL_STEREO = uint(0x0C33u)
let GL_LINE_SMOOTH_HINT = uint(0x0C52u)
let GL_POLYGON_SMOOTH_HINT = uint(0x0C53u)
let GL_UNPACK_SWAP_BYTES = uint(0x0CF0u)
let GL_UNPACK_LSB_FIRST = uint(0x0CF1u)
let GL_UNPACK_ROW_LENGTH = uint(0x0CF2u)
let GL_UNPACK_SKIP_ROWS = uint(0x0CF3u)
let GL_UNPACK_SKIP_PIXELS = uint(0x0CF4u)
let GL_UNPACK_ALIGNMENT = uint(0x0CF5u)
let GL_PACK_SWAP_BYTES = uint(0x0D00u)
let GL_PACK_LSB_FIRST = uint(0x0D01u)
let GL_PACK_ROW_LENGTH = uint(0x0D02u)
let GL_PACK_SKIP_ROWS = uint(0x0D03u)
let GL_PACK_SKIP_PIXELS = uint(0x0D04u)
let GL_PACK_ALIGNMENT = uint(0x0D05u)
let GL_MAX_TEXTURE_SIZE = uint(0x0D33u)
let GL_MAX_VIEWPORT_DIMS = uint(0x0D3Au)
let GL_SUBPIXEL_BITS = uint(0x0D50u)
let GL_TEXTURE_1D = uint(0x0DE0u)
let GL_TEXTURE_2D = uint(0x0DE1u)
let GL_TEXTURE_WIDTH = uint(0x1000u)
let GL_TEXTURE_HEIGHT = uint(0x1001u)
let GL_TEXTURE_BORDER_COLOR = uint(0x1004u)
let GL_DONT_CARE = uint(0x1100u)
let GL_FASTEST = uint(0x1101u)
let GL_NICEST = uint(0x1102u)
let GL_BYTE = uint(0x1400u)
let GL_UNSIGNED_BYTE = uint(0x1401u)
let GL_SHORT = uint(0x1402u)
let GL_UNSIGNED_SHORT = uint(0x1403u)
let GL_INT = uint(0x1404u)
let GL_UNSIGNED_INT = uint(0x1405u)
let GL_FLOAT = uint(0x1406u)
let GL_STACK_OVERFLOW = uint(0x0503u)
let GL_STACK_UNDERFLOW = uint(0x0504u)
let GL_CLEAR = uint(0x1500u)
let GL_AND = uint(0x1501u)
let GL_AND_REVERSE = uint(0x1502u)
let GL_COPY = uint(0x1503u)
let GL_AND_INVERTED = uint(0x1504u)
let GL_NOOP = uint(0x1505u)
let GL_XOR = uint(0x1506u)
let GL_OR = uint(0x1507u)
let GL_NOR = uint(0x1508u)
let GL_EQUIV = uint(0x1509u)
let GL_INVERT = uint(0x150Au)
let GL_OR_REVERSE = uint(0x150Bu)
let GL_COPY_INVERTED = uint(0x150Cu)
let GL_OR_INVERTED = uint(0x150Du)
let GL_NAND = uint(0x150Eu)
let GL_SET = uint(0x150Fu)
let GL_TEXTURE = uint(0x1702u)
let GL_COLOR = uint(0x1800u)
let GL_DEPTH = uint(0x1801u)
let GL_STENCIL = uint(0x1802u)
let GL_STENCIL_INDEX = uint(0x1901u)
let GL_DEPTH_COMPONENT = uint(0x1902u)
let GL_RED = uint(0x1903u)
let GL_GREEN = uint(0x1904u)
let GL_BLUE = uint(0x1905u)
let GL_ALPHA = uint(0x1906u)
let GL_RGB = uint(0x1907u)
let GL_RGBA = uint(0x1908u)
let GL_POINT = uint(0x1B00u)
let GL_LINE = uint(0x1B01u)
let GL_FILL = uint(0x1B02u)
let GL_KEEP = uint(0x1E00u)
let GL_REPLACE = uint(0x1E01u)
let GL_INCR = uint(0x1E02u)
let GL_DECR = uint(0x1E03u)
let GL_VENDOR = uint(0x1F00u)
let GL_RENDERER = uint(0x1F01u)
let GL_VERSION = uint(0x1F02u)
let GL_EXTENSIONS = uint(0x1F03u)
let GL_NEAREST = uint(0x2600u)
let GL_LINEAR = uint(0x2601u)
let GL_NEAREST_MIPMAP_NEAREST = uint(0x2700u)
let GL_LINEAR_MIPMAP_NEAREST = uint(0x2701u)
let GL_NEAREST_MIPMAP_LINEAR = uint(0x2702u)
let GL_LINEAR_MIPMAP_LINEAR = uint(0x2703u)
let GL_TEXTURE_MAG_FILTER = uint(0x2800u)
let GL_TEXTURE_MIN_FILTER = uint(0x2801u)
let GL_TEXTURE_WRAP_S = uint(0x2802u)
let GL_TEXTURE_WRAP_T = uint(0x2803u)
let GL_REPEAT = uint(0x2901u)
let GL_COLOR_LOGIC_OP = uint(0x0BF2u)
let GL_POLYGON_OFFSET_UNITS = uint(0x2A00u)
let GL_POLYGON_OFFSET_POINT = uint(0x2A01u)
let GL_POLYGON_OFFSET_LINE = uint(0x2A02u)
let GL_POLYGON_OFFSET_FILL = uint(0x8037u)
let GL_POLYGON_OFFSET_FACTOR = uint(0x8038u)
let GL_TEXTURE_BINDING_1D = uint(0x8068u)
let GL_TEXTURE_BINDING_2D = uint(0x8069u)
let GL_TEXTURE_INTERNAL_FORMAT = uint(0x1003u)
let GL_TEXTURE_RED_SIZE = uint(0x805Cu)
let GL_TEXTURE_GREEN_SIZE = uint(0x805Du)
let GL_TEXTURE_BLUE_SIZE = uint(0x805Eu)
let GL_TEXTURE_ALPHA_SIZE = uint(0x805Fu)
let GL_DOUBLE = uint(0x140Au)
let GL_PROXY_TEXTURE_1D = uint(0x8063u)
let GL_PROXY_TEXTURE_2D = uint(0x8064u)
let GL_R3_G3_B2 = uint(0x2A10u)
let GL_RGB4 = uint(0x804Fu)
let GL_RGB5 = uint(0x8050u)
let GL_RGB8 = uint(0x8051u)
let GL_RGB10 = uint(0x8052u)
let GL_RGB12 = uint(0x8053u)
let GL_RGB16 = uint(0x8054u)
let GL_RGBA2 = uint(0x8055u)
let GL_RGBA4 = uint(0x8056u)
let GL_RGB5_A1 = uint(0x8057u)
let GL_RGBA8 = uint(0x8058u)
let GL_RGB10_A2 = uint(0x8059u)
let GL_RGBA12 = uint(0x805Au)
let GL_RGBA16 = uint(0x805Bu)
let GL_VERTEX_ARRAY = uint(0x8074u)
let GL_UNSIGNED_BYTE_3_3_2 = uint(0x8032u)
let GL_UNSIGNED_SHORT_4_4_4_4 = uint(0x8033u)
let GL_UNSIGNED_SHORT_5_5_5_1 = uint(0x8034u)
let GL_UNSIGNED_INT_8_8_8_8 = uint(0x8035u)
let GL_UNSIGNED_INT_10_10_10_2 = uint(0x8036u)
let GL_TEXTURE_BINDING_3D = uint(0x806Au)
let GL_PACK_SKIP_IMAGES = uint(0x806Bu)
let GL_PACK_IMAGE_HEIGHT = uint(0x806Cu)
let GL_UNPACK_SKIP_IMAGES = uint(0x806Du)
let GL_UNPACK_IMAGE_HEIGHT = uint(0x806Eu)
let GL_TEXTURE_3D = uint(0x806Fu)
let GL_PROXY_TEXTURE_3D = uint(0x8070u)
let GL_TEXTURE_DEPTH = uint(0x8071u)
let GL_TEXTURE_WRAP_R = uint(0x8072u)
let GL_MAX_3D_TEXTURE_SIZE = uint(0x8073u)
let GL_UNSIGNED_BYTE_2_3_3_REV = uint(0x8362u)
let GL_UNSIGNED_SHORT_5_6_5 = uint(0x8363u)
let GL_UNSIGNED_SHORT_5_6_5_REV = uint(0x8364u)
let GL_UNSIGNED_SHORT_4_4_4_4_REV = uint(0x8365u)
let GL_UNSIGNED_SHORT_1_5_5_5_REV = uint(0x8366u)
let GL_UNSIGNED_INT_8_8_8_8_REV = uint(0x8367u)
let GL_UNSIGNED_INT_2_10_10_10_REV = uint(0x8368u)
let GL_BGR = uint(0x80E0u)
let GL_BGRA = uint(0x80E1u)
let GL_MAX_ELEMENTS_VERTICES = uint(0x80E8u)
let GL_MAX_ELEMENTS_INDICES = uint(0x80E9u)
let GL_CLAMP_TO_EDGE = uint(0x812Fu)
let GL_TEXTURE_MIN_LOD = uint(0x813Au)
let GL_TEXTURE_MAX_LOD = uint(0x813Bu)
let GL_TEXTURE_BASE_LEVEL = uint(0x813Cu)
let GL_TEXTURE_MAX_LEVEL = uint(0x813Du)
let GL_SMOOTH_POINT_SIZE_RANGE = uint(0x0B12u)
let GL_SMOOTH_POINT_SIZE_GRANULARITY = uint(0x0B13u)
let GL_SMOOTH_LINE_WIDTH_RANGE = uint(0x0B22u)
let GL_SMOOTH_LINE_WIDTH_GRANULARITY = uint(0x0B23u)
let GL_ALIASED_LINE_WIDTH_RANGE = uint(0x846Eu)
let GL_TEXTURE0 = uint(0x84C0u)
let GL_TEXTURE1 = uint(0x84C1u)
let GL_TEXTURE2 = uint(0x84C2u)
let GL_TEXTURE3 = uint(0x84C3u)
let GL_TEXTURE4 = uint(0x84C4u)
let GL_TEXTURE5 = uint(0x84C5u)
let GL_TEXTURE6 = uint(0x84C6u)
let GL_TEXTURE7 = uint(0x84C7u)
let GL_TEXTURE8 = uint(0x84C8u)
let GL_TEXTURE9 = uint(0x84C9u)
let GL_TEXTURE10 = uint(0x84CAu)
let GL_TEXTURE11 = uint(0x84CBu)
let GL_TEXTURE12 = uint(0x84CCu)
let GL_TEXTURE13 = uint(0x84CDu)
let GL_TEXTURE14 = uint(0x84CEu)
let GL_TEXTURE15 = uint(0x84CFu)
let GL_TEXTURE16 = uint(0x84D0u)
let GL_TEXTURE17 = uint(0x84D1u)
let GL_TEXTURE18 = uint(0x84D2u)
let GL_TEXTURE19 = uint(0x84D3u)
let GL_TEXTURE20 = uint(0x84D4u)
let GL_TEXTURE21 = uint(0x84D5u)
let GL_TEXTURE22 = uint(0x84D6u)
let GL_TEXTURE23 = uint(0x84D7u)
let GL_TEXTURE24 = uint(0x84D8u)
let GL_TEXTURE25 = uint(0x84D9u)
let GL_TEXTURE26 = uint(0x84DAu)
let GL_TEXTURE27 = uint(0x84DBu)
let GL_TEXTURE28 = uint(0x84DCu)
let GL_TEXTURE29 = uint(0x84DDu)
let GL_TEXTURE30 = uint(0x84DEu)
let GL_TEXTURE31 = uint(0x84DFu)
let GL_ACTIVE_TEXTURE = uint(0x84E0u)
let GL_MULTISAMPLE = uint(0x809Du)
let GL_SAMPLE_ALPHA_TO_COVERAGE = uint(0x809Eu)
let GL_SAMPLE_ALPHA_TO_ONE = uint(0x809Fu)
let GL_SAMPLE_COVERAGE = uint(0x80A0u)
let GL_SAMPLE_BUFFERS = uint(0x80A8u)
let GL_SAMPLES = uint(0x80A9u)
let GL_SAMPLE_COVERAGE_VALUE = uint(0x80AAu)
let GL_SAMPLE_COVERAGE_INVERT = uint(0x80ABu)
let GL_TEXTURE_CUBE_MAP = uint(0x8513u)
let GL_TEXTURE_BINDING_CUBE_MAP = uint(0x8514u)
let GL_TEXTURE_CUBE_MAP_POSITIVE_X = uint(0x8515u)
let GL_TEXTURE_CUBE_MAP_NEGATIVE_X = uint(0x8516u)
let GL_TEXTURE_CUBE_MAP_POSITIVE_Y = uint(0x8517u)
let GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = uint(0x8518u)
let GL_TEXTURE_CUBE_MAP_POSITIVE_Z = uint(0x8519u)
let GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = uint(0x851Au)
let GL_PROXY_TEXTURE_CUBE_MAP = uint(0x851Bu)
let GL_MAX_CUBE_MAP_TEXTURE_SIZE = uint(0x851Cu)
let GL_COMPRESSED_RGB = uint(0x84EDu)
let GL_COMPRESSED_RGBA = uint(0x84EEu)
let GL_TEXTURE_COMPRESSION_HINT = uint(0x84EFu)
let GL_TEXTURE_COMPRESSED_IMAGE_SIZE = uint(0x86A0u)
let GL_TEXTURE_COMPRESSED = uint(0x86A1u)
let GL_NUM_COMPRESSED_TEXTURE_FORMATS = uint(0x86A2u)
let GL_COMPRESSED_TEXTURE_FORMATS = uint(0x86A3u)
let GL_CLAMP_TO_BORDER = uint(0x812Du)
let GL_BLEND_DST_RGB = uint(0x80C8u)
let GL_BLEND_SRC_RGB = uint(0x80C9u)
let GL_BLEND_DST_ALPHA = uint(0x80CAu)
let GL_BLEND_SRC_ALPHA = uint(0x80CBu)
let GL_POINT_FADE_THRESHOLD_SIZE = uint(0x8128u)
let GL_DEPTH_COMPONENT16 = uint(0x81A5u)
let GL_DEPTH_COMPONENT24 = uint(0x81A6u)
let GL_DEPTH_COMPONENT32 = uint(0x81A7u)
let GL_MIRRORED_REPEAT = uint(0x8370u)
let GL_MAX_TEXTURE_LOD_BIAS = uint(0x84FDu)
let GL_TEXTURE_LOD_BIAS = uint(0x8501u)
let GL_INCR_WRAP = uint(0x8507u)
let GL_DECR_WRAP = uint(0x8508u)
let GL_TEXTURE_DEPTH_SIZE = uint(0x884Au)
let GL_TEXTURE_COMPARE_MODE = uint(0x884Cu)
let GL_TEXTURE_COMPARE_FUNC = uint(0x884Du)
let GL_BLEND_COLOR = uint(0x8005u)
let GL_BLEND_EQUATION = uint(0x8009u)
let GL_CONSTANT_COLOR = uint(0x8001u)
let GL_ONE_MINUS_CONSTANT_COLOR = uint(0x8002u)
let GL_CONSTANT_ALPHA = uint(0x8003u)
let GL_ONE_MINUS_CONSTANT_ALPHA = uint(0x8004u)
let GL_FUNC_ADD = uint(0x8006u)
let GL_FUNC_REVERSE_SUBTRACT = uint(0x800Bu)
let GL_FUNC_SUBTRACT = uint(0x800Au)
let GL_MIN = uint(0x8007u)
let GL_MAX = uint(0x8008u)
let GL_BUFFER_SIZE = uint(0x8764u)
let GL_BUFFER_USAGE = uint(0x8765u)
let GL_QUERY_COUNTER_BITS = uint(0x8864u)
let GL_CURRENT_QUERY = uint(0x8865u)
let GL_QUERY_RESULT = uint(0x8866u)
let GL_QUERY_RESULT_AVAILABLE = uint(0x8867u)
let GL_ARRAY_BUFFER = uint(0x8892u)
let GL_ELEMENT_ARRAY_BUFFER = uint(0x8893u)
let GL_ARRAY_BUFFER_BINDING = uint(0x8894u)
let GL_ELEMENT_ARRAY_BUFFER_BINDING = uint(0x8895u)
let GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = uint(0x889Fu)
let GL_READ_ONLY = uint(0x88B8u)
let GL_WRITE_ONLY = uint(0x88B9u)
let GL_READ_WRITE = uint(0x88BAu)
let GL_BUFFER_ACCESS = uint(0x88BBu)
let GL_BUFFER_MAPPED = uint(0x88BCu)
let GL_BUFFER_MAP_POINTER = uint(0x88BDu)
let GL_STREAM_DRAW = uint(0x88E0u)
let GL_STREAM_READ = uint(0x88E1u)
let GL_STREAM_COPY = uint(0x88E2u)
let GL_STATIC_DRAW = uint(0x88E4u)
let GL_STATIC_READ = uint(0x88E5u)
let GL_STATIC_COPY = uint(0x88E6u)
let GL_DYNAMIC_DRAW = uint(0x88E8u)
let GL_DYNAMIC_READ = uint(0x88E9u)
let GL_DYNAMIC_COPY = uint(0x88EAu)
let GL_SAMPLES_PASSED = uint(0x8914u)
let GL_SRC1_ALPHA = uint(0x8589u)
let GL_BLEND_EQUATION_RGB = uint(0x8009u)
let GL_VERTEX_ATTRIB_ARRAY_ENABLED = uint(0x8622u)
let GL_VERTEX_ATTRIB_ARRAY_SIZE = uint(0x8623u)
let GL_VERTEX_ATTRIB_ARRAY_STRIDE = uint(0x8624u)
let GL_VERTEX_ATTRIB_ARRAY_TYPE = uint(0x8625u)
let GL_CURRENT_VERTEX_ATTRIB = uint(0x8626u)
let GL_VERTEX_PROGRAM_POINT_SIZE = uint(0x8642u)
let GL_VERTEX_ATTRIB_ARRAY_POINTER = uint(0x8645u)
let GL_STENCIL_BACK_FUNC = uint(0x8800u)
let GL_STENCIL_BACK_FAIL = uint(0x8801u)
let GL_STENCIL_BACK_PASS_DEPTH_FAIL = uint(0x8802u)
let GL_STENCIL_BACK_PASS_DEPTH_PASS = uint(0x8803u)
let GL_MAX_DRAW_BUFFERS = uint(0x8824u)
let GL_DRAW_BUFFER0 = uint(0x8825u)
let GL_DRAW_BUFFER1 = uint(0x8826u)
let GL_DRAW_BUFFER2 = uint(0x8827u)
let GL_DRAW_BUFFER3 = uint(0x8828u)
let GL_DRAW_BUFFER4 = uint(0x8829u)
let GL_DRAW_BUFFER5 = uint(0x882Au)
let GL_DRAW_BUFFER6 = uint(0x882Bu)
let GL_DRAW_BUFFER7 = uint(0x882Cu)
let GL_DRAW_BUFFER8 = uint(0x882Du)
let GL_DRAW_BUFFER9 = uint(0x882Eu)
let GL_DRAW_BUFFER10 = uint(0x882Fu)
let GL_DRAW_BUFFER11 = uint(0x8830u)
let GL_DRAW_BUFFER12 = uint(0x8831u)
let GL_DRAW_BUFFER13 = uint(0x8832u)
let GL_DRAW_BUFFER14 = uint(0x8833u)
let GL_DRAW_BUFFER15 = uint(0x8834u)
let GL_BLEND_EQUATION_ALPHA = uint(0x883Du)
let GL_MAX_VERTEX_ATTRIBS = uint(0x8869u)
let GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = uint(0x886Au)
let GL_MAX_TEXTURE_IMAGE_UNITS = uint(0x8872u)
let GL_FRAGMENT_SHADER = uint(0x8B30u)
let GL_VERTEX_SHADER = uint(0x8B31u)
let GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = uint(0x8B49u)
let GL_MAX_VERTEX_UNIFORM_COMPONENTS = uint(0x8B4Au)
let GL_MAX_VARYING_FLOATS = uint(0x8B4Bu)
let GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = uint(0x8B4Cu)
let GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = uint(0x8B4Du)
let GL_SHADER_TYPE = uint(0x8B4Fu)
let GL_FLOAT_VEC2 = uint(0x8B50u)
let GL_FLOAT_VEC3 = uint(0x8B51u)
let GL_FLOAT_VEC4 = uint(0x8B52u)
let GL_INT_VEC2 = uint(0x8B53u)
let GL_INT_VEC3 = uint(0x8B54u)
let GL_INT_VEC4 = uint(0x8B55u)
let GL_BOOL = uint(0x8B56u)
let GL_BOOL_VEC2 = uint(0x8B57u)
let GL_BOOL_VEC3 = uint(0x8B58u)
let GL_BOOL_VEC4 = uint(0x8B59u)
let GL_FLOAT_MAT2 = uint(0x8B5Au)
let GL_FLOAT_MAT3 = uint(0x8B5Bu)
let GL_FLOAT_MAT4 = uint(0x8B5Cu)
let GL_SAMPLER_1D = uint(0x8B5Du)
let GL_SAMPLER_2D = uint(0x8B5Eu)
let GL_SAMPLER_3D = uint(0x8B5Fu)
let GL_SAMPLER_CUBE = uint(0x8B60u)
let GL_SAMPLER_1D_SHADOW = uint(0x8B61u)
let GL_SAMPLER_2D_SHADOW = uint(0x8B62u)
let GL_DELETE_STATUS = uint(0x8B80u)
let GL_COMPILE_STATUS = uint(0x8B81u)
let GL_LINK_STATUS = uint(0x8B82u)
let GL_VALIDATE_STATUS = uint(0x8B83u)
let GL_INFO_LOG_LENGTH = uint(0x8B84u)
let GL_ATTACHED_SHADERS = uint(0x8B85u)
let GL_ACTIVE_UNIFORMS = uint(0x8B86u)
let GL_ACTIVE_UNIFORM_MAX_LENGTH = uint(0x8B87u)
let GL_SHADER_SOURCE_LENGTH = uint(0x8B88u)
let GL_ACTIVE_ATTRIBUTES = uint(0x8B89u)
let GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = uint(0x8B8Au)
let GL_FRAGMENT_SHADER_DERIVATIVE_HINT = uint(0x8B8Bu)
let GL_SHADING_LANGUAGE_VERSION = uint(0x8B8Cu)
let GL_CURRENT_PROGRAM = uint(0x8B8Du)
let GL_POINT_SPRITE_COORD_ORIGIN = uint(0x8CA0u)
let GL_LOWER_LEFT = uint(0x8CA1u)
let GL_UPPER_LEFT = uint(0x8CA2u)
let GL_STENCIL_BACK_REF = uint(0x8CA3u)
let GL_STENCIL_BACK_VALUE_MASK = uint(0x8CA4u)
let GL_STENCIL_BACK_WRITEMASK = uint(0x8CA5u)
let GL_PIXEL_PACK_BUFFER = uint(0x88EBu)
let GL_PIXEL_UNPACK_BUFFER = uint(0x88ECu)
let GL_PIXEL_PACK_BUFFER_BINDING = uint(0x88EDu)
let GL_PIXEL_UNPACK_BUFFER_BINDING = uint(0x88EFu)
let GL_FLOAT_MAT2x3 = uint(0x8B65u)
let GL_FLOAT_MAT2x4 = uint(0x8B66u)
let GL_FLOAT_MAT3x2 = uint(0x8B67u)
let GL_FLOAT_MAT3x4 = uint(0x8B68u)
let GL_FLOAT_MAT4x2 = uint(0x8B69u)
let GL_FLOAT_MAT4x3 = uint(0x8B6Au)
let GL_SRGB = uint(0x8C40u)
let GL_SRGB8 = uint(0x8C41u)
let GL_SRGB_ALPHA = uint(0x8C42u)
let GL_SRGB8_ALPHA8 = uint(0x8C43u)
let GL_COMPRESSED_SRGB = uint(0x8C48u)
let GL_COMPRESSED_SRGB_ALPHA = uint(0x8C49u)
let GL_COMPARE_REF_TO_TEXTURE = uint(0x884Eu)
let GL_CLIP_DISTANCE0 = uint(0x3000u)
let GL_CLIP_DISTANCE1 = uint(0x3001u)
let GL_CLIP_DISTANCE2 = uint(0x3002u)
let GL_CLIP_DISTANCE3 = uint(0x3003u)
let GL_CLIP_DISTANCE4 = uint(0x3004u)
let GL_CLIP_DISTANCE5 = uint(0x3005u)
let GL_CLIP_DISTANCE6 = uint(0x3006u)
let GL_CLIP_DISTANCE7 = uint(0x3007u)
let GL_MAX_CLIP_DISTANCES = uint(0x0D32u)
let GL_MAJOR_VERSION = uint(0x821Bu)
let GL_MINOR_VERSION = uint(0x821Cu)
let GL_NUM_EXTENSIONS = uint(0x821Du)
let GL_CONTEXT_FLAGS = uint(0x821Eu)
let GL_COMPRESSED_RED = uint(0x8225u)
let GL_COMPRESSED_RG = uint(0x8226u)
let GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = uint(0x00000001u)
let GL_RGBA32F = uint(0x8814u)
let GL_RGB32F = uint(0x8815u)
let GL_RGBA16F = uint(0x881Au)
let GL_RGB16F = uint(0x881Bu)
let GL_VERTEX_ATTRIB_ARRAY_INTEGER = uint(0x88FDu)
let GL_MAX_ARRAY_TEXTURE_LAYERS = uint(0x88FFu)
let GL_MIN_PROGRAM_TEXEL_OFFSET = uint(0x8904u)
let GL_MAX_PROGRAM_TEXEL_OFFSET = uint(0x8905u)
let GL_CLAMP_READ_COLOR = uint(0x891Cu)
let GL_FIXED_ONLY = uint(0x891Du)
let GL_MAX_VARYING_COMPONENTS = uint(0x8B4Bu)
let GL_TEXTURE_1D_ARRAY = uint(0x8C18u)
let GL_PROXY_TEXTURE_1D_ARRAY = uint(0x8C19u)
let GL_TEXTURE_2D_ARRAY = uint(0x8C1Au)
let GL_PROXY_TEXTURE_2D_ARRAY = uint(0x8C1Bu)
let GL_TEXTURE_BINDING_1D_ARRAY = uint(0x8C1Cu)
let GL_TEXTURE_BINDING_2D_ARRAY = uint(0x8C1Du)
let GL_R11F_G11F_B10F = uint(0x8C3Au)
let GL_UNSIGNED_INT_10F_11F_11F_REV = uint(0x8C3Bu)
let GL_RGB9_E5 = uint(0x8C3Du)
let GL_UNSIGNED_INT_5_9_9_9_REV = uint(0x8C3Eu)
let GL_TEXTURE_SHARED_SIZE = uint(0x8C3Fu)
let GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = uint(0x8C76u)
let GL_TRANSFORM_FEEDBACK_BUFFER_MODE = uint(0x8C7Fu)
let GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = uint(0x8C80u)
let GL_TRANSFORM_FEEDBACK_VARYINGS = uint(0x8C83u)
let GL_TRANSFORM_FEEDBACK_BUFFER_START = uint(0x8C84u)
let GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = uint(0x8C85u)
let GL_PRIMITIVES_GENERATED = uint(0x8C87u)
let GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = uint(0x8C88u)
let GL_RASTERIZER_DISCARD = uint(0x8C89u)
let GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = uint(0x8C8Au)
let GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = uint(0x8C8Bu)
let GL_INTERLEAVED_ATTRIBS = uint(0x8C8Cu)
let GL_SEPARATE_ATTRIBS = uint(0x8C8Du)
let GL_TRANSFORM_FEEDBACK_BUFFER = uint(0x8C8Eu)
let GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = uint(0x8C8Fu)
let GL_RGBA32UI = uint(0x8D70u)
let GL_RGB32UI = uint(0x8D71u)
let GL_RGBA16UI = uint(0x8D76u)
let GL_RGB16UI = uint(0x8D77u)
let GL_RGBA8UI = uint(0x8D7Cu)
let GL_RGB8UI = uint(0x8D7Du)
let GL_RGBA32I = uint(0x8D82u)
let GL_RGB32I = uint(0x8D83u)
let GL_RGBA16I = uint(0x8D88u)
let GL_RGB16I = uint(0x8D89u)
let GL_RGBA8I = uint(0x8D8Eu)
let GL_RGB8I = uint(0x8D8Fu)
let GL_RED_INTEGER = uint(0x8D94u)
let GL_GREEN_INTEGER = uint(0x8D95u)
let GL_BLUE_INTEGER = uint(0x8D96u)
let GL_RGB_INTEGER = uint(0x8D98u)
let GL_RGBA_INTEGER = uint(0x8D99u)
let GL_BGR_INTEGER = uint(0x8D9Au)
let GL_BGRA_INTEGER = uint(0x8D9Bu)
let GL_SAMPLER_1D_ARRAY = uint(0x8DC0u)
let GL_SAMPLER_2D_ARRAY = uint(0x8DC1u)
let GL_SAMPLER_1D_ARRAY_SHADOW = uint(0x8DC3u)
let GL_SAMPLER_2D_ARRAY_SHADOW = uint(0x8DC4u)
let GL_SAMPLER_CUBE_SHADOW = uint(0x8DC5u)
let GL_UNSIGNED_INT_VEC2 = uint(0x8DC6u)
let GL_UNSIGNED_INT_VEC3 = uint(0x8DC7u)
let GL_UNSIGNED_INT_VEC4 = uint(0x8DC8u)
let GL_INT_SAMPLER_1D = uint(0x8DC9u)
let GL_INT_SAMPLER_2D = uint(0x8DCAu)
let GL_INT_SAMPLER_3D = uint(0x8DCBu)
let GL_INT_SAMPLER_CUBE = uint(0x8DCCu)
let GL_INT_SAMPLER_1D_ARRAY = uint(0x8DCEu)
let GL_INT_SAMPLER_2D_ARRAY = uint(0x8DCFu)
let GL_UNSIGNED_INT_SAMPLER_1D = uint(0x8DD1u)
let GL_UNSIGNED_INT_SAMPLER_2D = uint(0x8DD2u)
let GL_UNSIGNED_INT_SAMPLER_3D = uint(0x8DD3u)
let GL_UNSIGNED_INT_SAMPLER_CUBE = uint(0x8DD4u)
let GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = uint(0x8DD6u)
let GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = uint(0x8DD7u)
let GL_QUERY_WAIT = uint(0x8E13u)
let GL_QUERY_NO_WAIT = uint(0x8E14u)
let GL_QUERY_BY_REGION_WAIT = uint(0x8E15u)
let GL_QUERY_BY_REGION_NO_WAIT = uint(0x8E16u)
let GL_BUFFER_ACCESS_FLAGS = uint(0x911Fu)
let GL_BUFFER_MAP_LENGTH = uint(0x9120u)
let GL_BUFFER_MAP_OFFSET = uint(0x9121u)
let GL_DEPTH_COMPONENT32F = uint(0x8CACu)
let GL_DEPTH32F_STENCIL8 = uint(0x8CADu)
let GL_FLOAT_32_UNSIGNED_INT_24_8_REV = uint(0x8DADu)
let GL_INVALID_FRAMEBUFFER_OPERATION = uint(0x0506u)
let GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = uint(0x8210u)
let GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = uint(0x8211u)
let GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = uint(0x8212u)
let GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = uint(0x8213u)
let GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = uint(0x8214u)
let GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = uint(0x8215u)
let GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = uint(0x8216u)
let GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = uint(0x8217u)
let GL_FRAMEBUFFER_DEFAULT = uint(0x8218u)
let GL_FRAMEBUFFER_UNDEFINED = uint(0x8219u)
let GL_DEPTH_STENCIL_ATTACHMENT = uint(0x821Au)
let GL_MAX_RENDERBUFFER_SIZE = uint(0x84E8u)
let GL_DEPTH_STENCIL = uint(0x84F9u)
let GL_UNSIGNED_INT_24_8 = uint(0x84FAu)
let GL_DEPTH24_STENCIL8 = uint(0x88F0u)
let GL_TEXTURE_STENCIL_SIZE = uint(0x88F1u)
let GL_TEXTURE_RED_TYPE = uint(0x8C10u)
let GL_TEXTURE_GREEN_TYPE = uint(0x8C11u)
let GL_TEXTURE_BLUE_TYPE = uint(0x8C12u)
let GL_TEXTURE_ALPHA_TYPE = uint(0x8C13u)
let GL_TEXTURE_DEPTH_TYPE = uint(0x8C16u)
let GL_UNSIGNED_NORMALIZED = uint(0x8C17u)
let GL_FRAMEBUFFER_BINDING = uint(0x8CA6u)
let GL_DRAW_FRAMEBUFFER_BINDING = uint(0x8CA6u)
let GL_RENDERBUFFER_BINDING = uint(0x8CA7u)
let GL_READ_FRAMEBUFFER = uint(0x8CA8u)
let GL_DRAW_FRAMEBUFFER = uint(0x8CA9u)
let GL_READ_FRAMEBUFFER_BINDING = uint(0x8CAAu)
let GL_RENDERBUFFER_SAMPLES = uint(0x8CABu)
let GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = uint(0x8CD0u)
let GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = uint(0x8CD1u)
let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = uint(0x8CD2u)
let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = uint(0x8CD3u)
let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = uint(0x8CD4u)
let GL_FRAMEBUFFER_COMPLETE = uint(0x8CD5u)
let GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = uint(0x8CD6u)
let GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = uint(0x8CD7u)
let GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = uint(0x8CDBu)
let GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = uint(0x8CDCu)
let GL_FRAMEBUFFER_UNSUPPORTED = uint(0x8CDDu)
let GL_MAX_COLOR_ATTACHMENTS = uint(0x8CDFu)
let GL_COLOR_ATTACHMENT0 = uint(0x8CE0u)
let GL_COLOR_ATTACHMENT1 = uint(0x8CE1u)
let GL_COLOR_ATTACHMENT2 = uint(0x8CE2u)
let GL_COLOR_ATTACHMENT3 = uint(0x8CE3u)
let GL_COLOR_ATTACHMENT4 = uint(0x8CE4u)
let GL_COLOR_ATTACHMENT5 = uint(0x8CE5u)
let GL_COLOR_ATTACHMENT6 = uint(0x8CE6u)
let GL_COLOR_ATTACHMENT7 = uint(0x8CE7u)
let GL_COLOR_ATTACHMENT8 = uint(0x8CE8u)
let GL_COLOR_ATTACHMENT9 = uint(0x8CE9u)
let GL_COLOR_ATTACHMENT10 = uint(0x8CEAu)
let GL_COLOR_ATTACHMENT11 = uint(0x8CEBu)
let GL_COLOR_ATTACHMENT12 = uint(0x8CECu)
let GL_COLOR_ATTACHMENT13 = uint(0x8CEDu)
let GL_COLOR_ATTACHMENT14 = uint(0x8CEEu)
let GL_COLOR_ATTACHMENT15 = uint(0x8CEFu)
let GL_COLOR_ATTACHMENT16 = uint(0x8CF0u)
let GL_COLOR_ATTACHMENT17 = uint(0x8CF1u)
let GL_COLOR_ATTACHMENT18 = uint(0x8CF2u)
let GL_COLOR_ATTACHMENT19 = uint(0x8CF3u)
let GL_COLOR_ATTACHMENT20 = uint(0x8CF4u)
let GL_COLOR_ATTACHMENT21 = uint(0x8CF5u)
let GL_COLOR_ATTACHMENT22 = uint(0x8CF6u)
let GL_COLOR_ATTACHMENT23 = uint(0x8CF7u)
let GL_COLOR_ATTACHMENT24 = uint(0x8CF8u)
let GL_COLOR_ATTACHMENT25 = uint(0x8CF9u)
let GL_COLOR_ATTACHMENT26 = uint(0x8CFAu)
let GL_COLOR_ATTACHMENT27 = uint(0x8CFBu)
let GL_COLOR_ATTACHMENT28 = uint(0x8CFCu)
let GL_COLOR_ATTACHMENT29 = uint(0x8CFDu)
let GL_COLOR_ATTACHMENT30 = uint(0x8CFEu)
let GL_COLOR_ATTACHMENT31 = uint(0x8CFFu)
let GL_DEPTH_ATTACHMENT = uint(0x8D00u)
let GL_STENCIL_ATTACHMENT = uint(0x8D20u)
let GL_FRAMEBUFFER = uint(0x8D40u)
let GL_RENDERBUFFER = uint(0x8D41u)
let GL_RENDERBUFFER_WIDTH = uint(0x8D42u)
let GL_RENDERBUFFER_HEIGHT = uint(0x8D43u)
let GL_RENDERBUFFER_INTERNAL_FORMAT = uint(0x8D44u)
let GL_STENCIL_INDEX1 = uint(0x8D46u)
let GL_STENCIL_INDEX4 = uint(0x8D47u)
let GL_STENCIL_INDEX8 = uint(0x8D48u)
let GL_STENCIL_INDEX16 = uint(0x8D49u)
let GL_RENDERBUFFER_RED_SIZE = uint(0x8D50u)
let GL_RENDERBUFFER_GREEN_SIZE = uint(0x8D51u)
let GL_RENDERBUFFER_BLUE_SIZE = uint(0x8D52u)
let GL_RENDERBUFFER_ALPHA_SIZE = uint(0x8D53u)
let GL_RENDERBUFFER_DEPTH_SIZE = uint(0x8D54u)
let GL_RENDERBUFFER_STENCIL_SIZE = uint(0x8D55u)
let GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = uint(0x8D56u)
let GL_MAX_SAMPLES = uint(0x8D57u)
let GL_FRAMEBUFFER_SRGB = uint(0x8DB9u)
let GL_HALF_FLOAT = uint(0x140Bu)
let GL_MAP_READ_BIT = uint(0x0001u)
let GL_MAP_WRITE_BIT = uint(0x0002u)
let GL_MAP_INVALIDATE_RANGE_BIT = uint(0x0004u)
let GL_MAP_INVALIDATE_BUFFER_BIT = uint(0x0008u)
let GL_MAP_FLUSH_EXPLICIT_BIT = uint(0x0010u)
let GL_MAP_UNSYNCHRONIZED_BIT = uint(0x0020u)
let GL_COMPRESSED_RED_RGTC1 = uint(0x8DBBu)
let GL_COMPRESSED_SIGNED_RED_RGTC1 = uint(0x8DBCu)
let GL_COMPRESSED_RG_RGTC2 = uint(0x8DBDu)
let GL_COMPRESSED_SIGNED_RG_RGTC2 = uint(0x8DBEu)
let GL_RG = uint(0x8227u)
let GL_RG_INTEGER = uint(0x8228u)
let GL_R8 = uint(0x8229u)
let GL_R16 = uint(0x822Au)
let GL_RG8 = uint(0x822Bu)
let GL_RG16 = uint(0x822Cu)
let GL_R16F = uint(0x822Du)
let GL_R32F = uint(0x822Eu)
let GL_RG16F = uint(0x822Fu)
let GL_RG32F = uint(0x8230u)
let GL_R8I = uint(0x8231u)
let GL_R8UI = uint(0x8232u)
let GL_R16I = uint(0x8233u)
let GL_R16UI = uint(0x8234u)
let GL_R32I = uint(0x8235u)
let GL_R32UI = uint(0x8236u)
let GL_RG8I = uint(0x8237u)
let GL_RG8UI = uint(0x8238u)
let GL_RG16I = uint(0x8239u)
let GL_RG16UI = uint(0x823Au)
let GL_RG32I = uint(0x823Bu)
let GL_RG32UI = uint(0x823Cu)
let GL_VERTEX_ARRAY_BINDING = uint(0x85B5u)
let GL_SAMPLER_2D_RECT = uint(0x8B63u)
let GL_SAMPLER_2D_RECT_SHADOW = uint(0x8B64u)
let GL_SAMPLER_BUFFER = uint(0x8DC2u)
let GL_INT_SAMPLER_2D_RECT = uint(0x8DCDu)
let GL_INT_SAMPLER_BUFFER = uint(0x8DD0u)
let GL_UNSIGNED_INT_SAMPLER_2D_RECT = uint(0x8DD5u)
let GL_UNSIGNED_INT_SAMPLER_BUFFER = uint(0x8DD8u)
let GL_TEXTURE_BUFFER = uint(0x8C2Au)
let GL_MAX_TEXTURE_BUFFER_SIZE = uint(0x8C2Bu)
let GL_TEXTURE_BINDING_BUFFER = uint(0x8C2Cu)
let GL_TEXTURE_BUFFER_DATA_STORE_BINDING = uint(0x8C2Du)
let GL_TEXTURE_RECTANGLE = uint(0x84F5u)
let GL_TEXTURE_BINDING_RECTANGLE = uint(0x84F6u)
let GL_PROXY_TEXTURE_RECTANGLE = uint(0x84F7u)
let GL_MAX_RECTANGLE_TEXTURE_SIZE = uint(0x84F8u)
let GL_R8_SNORM = uint(0x8F94u)
let GL_RG8_SNORM = uint(0x8F95u)
let GL_RGB8_SNORM = uint(0x8F96u)
let GL_RGBA8_SNORM = uint(0x8F97u)
let GL_R16_SNORM = uint(0x8F98u)
let GL_RG16_SNORM = uint(0x8F99u)
let GL_RGB16_SNORM = uint(0x8F9Au)
let GL_RGBA16_SNORM = uint(0x8F9Bu)
let GL_SIGNED_NORMALIZED = uint(0x8F9Cu)
let GL_PRIMITIVE_RESTART = uint(0x8F9Du)
let GL_PRIMITIVE_RESTART_INDEX = uint(0x8F9Eu)
let GL_COPY_READ_BUFFER = uint(0x8F36u)
let GL_COPY_WRITE_BUFFER = uint(0x8F37u)
let GL_UNIFORM_BUFFER = uint(0x8A11u)
let GL_UNIFORM_BUFFER_BINDING = uint(0x8A28u)
let GL_UNIFORM_BUFFER_START = uint(0x8A29u)
let GL_UNIFORM_BUFFER_SIZE = uint(0x8A2Au)
let GL_MAX_VERTEX_UNIFORM_BLOCKS = uint(0x8A2Bu)
let GL_MAX_GEOMETRY_UNIFORM_BLOCKS = uint(0x8A2Cu)
let GL_MAX_FRAGMENT_UNIFORM_BLOCKS = uint(0x8A2Du)
let GL_MAX_COMBINED_UNIFORM_BLOCKS = uint(0x8A2Eu)
let GL_MAX_UNIFORM_BUFFER_BINDINGS = uint(0x8A2Fu)
let GL_MAX_UNIFORM_BLOCK_SIZE = uint(0x8A30u)
let GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = uint(0x8A31u)
let GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = uint(0x8A32u)
let GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = uint(0x8A33u)
let GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = uint(0x8A34u)
let GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = uint(0x8A35u)
let GL_ACTIVE_UNIFORM_BLOCKS = uint(0x8A36u)
let GL_UNIFORM_TYPE = uint(0x8A37u)
let GL_UNIFORM_SIZE = uint(0x8A38u)
let GL_UNIFORM_NAME_LENGTH = uint(0x8A39u)
let GL_UNIFORM_BLOCK_INDEX = uint(0x8A3Au)
let GL_UNIFORM_OFFSET = uint(0x8A3Bu)
let GL_UNIFORM_ARRAY_STRIDE = uint(0x8A3Cu)
let GL_UNIFORM_MATRIX_STRIDE = uint(0x8A3Du)
let GL_UNIFORM_IS_ROW_MAJOR = uint(0x8A3Eu)
let GL_UNIFORM_BLOCK_BINDING = uint(0x8A3Fu)
let GL_UNIFORM_BLOCK_DATA_SIZE = uint(0x8A40u)
let GL_UNIFORM_BLOCK_NAME_LENGTH = uint(0x8A41u)
let GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = uint(0x8A42u)
let GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = uint(0x8A43u)
let GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = uint(0x8A44u)
let GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = uint(0x8A45u)
let GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = uint(0x8A46u)
let GL_INVALID_INDEX = uint(0xFFFFFFFFu)
let GL_CONTEXT_CORE_PROFILE_BIT = uint(0x00000001u)
let GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = uint(0x00000002u)
let GL_LINES_ADJACENCY = uint(0x000Au)
let GL_LINE_STRIP_ADJACENCY = uint(0x000Bu)
let GL_TRIANGLES_ADJACENCY = uint(0x000Cu)
let GL_TRIANGLE_STRIP_ADJACENCY = uint(0x000Du)
let GL_PROGRAM_POINT_SIZE = uint(0x8642u)
let GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = uint(0x8C29u)
let GL_FRAMEBUFFER_ATTACHMENT_LAYERED = uint(0x8DA7u)
let GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = uint(0x8DA8u)
let GL_GEOMETRY_SHADER = uint(0x8DD9u)
let GL_GEOMETRY_VERTICES_OUT = uint(0x8916u)
let GL_GEOMETRY_INPUT_TYPE = uint(0x8917u)
let GL_GEOMETRY_OUTPUT_TYPE = uint(0x8918u)
let GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = uint(0x8DDFu)
let GL_MAX_GEOMETRY_OUTPUT_VERTICES = uint(0x8DE0u)
let GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = uint(0x8DE1u)
let GL_MAX_VERTEX_OUTPUT_COMPONENTS = uint(0x9122u)
let GL_MAX_GEOMETRY_INPUT_COMPONENTS = uint(0x9123u)
let GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = uint(0x9124u)
let GL_MAX_FRAGMENT_INPUT_COMPONENTS = uint(0x9125u)
let GL_CONTEXT_PROFILE_MASK = uint(0x9126u)
let GL_DEPTH_CLAMP = uint(0x864Fu)
let GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = uint(0x8E4Cu)
let GL_FIRST_VERTEX_CONVENTION = uint(0x8E4Du)
let GL_LAST_VERTEX_CONVENTION = uint(0x8E4Eu)
let GL_PROVOKING_VERTEX = uint(0x8E4Fu)
let GL_TEXTURE_CUBE_MAP_SEAMLESS = uint(0x884Fu)
let GL_MAX_SERVER_WAIT_TIMEOUT = uint(0x9111u)
let GL_OBJECT_TYPE = uint(0x9112u)
let GL_SYNC_CONDITION = uint(0x9113u)
let GL_SYNC_STATUS = uint(0x9114u)
let GL_SYNC_FLAGS = uint(0x9115u)
let GL_SYNC_FENCE = uint(0x9116u)
let GL_SYNC_GPU_COMMANDS_COMPLETE = uint(0x9117u)
let GL_UNSIGNALED = uint(0x9118u)
let GL_SIGNALED = uint(0x9119u)
let GL_ALREADY_SIGNALED = uint(0x911Au)
let GL_TIMEOUT_EXPIRED = uint(0x911Bu)
let GL_CONDITION_SATISFIED = uint(0x911Cu)
let GL_WAIT_FAILED = uint(0x911Du)
let GL_TIMEOUT_IGNORED = uint(0xFFFFFFFFFFFFFFFFul)
let GL_SYNC_FLUSH_COMMANDS_BIT = uint(0x00000001u)
let GL_SAMPLE_POSITION = uint(0x8E50u)
let GL_SAMPLE_MASK = uint(0x8E51u)
let GL_SAMPLE_MASK_VALUE = uint(0x8E52u)
let GL_MAX_SAMPLE_MASK_WORDS = uint(0x8E59u)
let GL_TEXTURE_2D_MULTISAMPLE = uint(0x9100u)
let GL_PROXY_TEXTURE_2D_MULTISAMPLE = uint(0x9101u)
let GL_TEXTURE_2D_MULTISAMPLE_ARRAY = uint(0x9102u)
let GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = uint(0x9103u)
let GL_TEXTURE_BINDING_2D_MULTISAMPLE = uint(0x9104u)
let GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = uint(0x9105u)
let GL_TEXTURE_SAMPLES = uint(0x9106u)
let GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = uint(0x9107u)
let GL_SAMPLER_2D_MULTISAMPLE = uint(0x9108u)
let GL_INT_SAMPLER_2D_MULTISAMPLE = uint(0x9109u)
let GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = uint(0x910Au)
let GL_SAMPLER_2D_MULTISAMPLE_ARRAY = uint(0x910Bu)
let GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = uint(0x910Cu)
let GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = uint(0x910Du)
let GL_MAX_COLOR_TEXTURE_SAMPLES = uint(0x910Eu)
let GL_MAX_DEPTH_TEXTURE_SAMPLES = uint(0x910Fu)
let GL_MAX_INTEGER_SAMPLES = uint(0x9110u)
let GL_VERTEX_ATTRIB_ARRAY_DIVISOR = uint(0x88FEu)
let GL_SRC1_COLOR = uint(0x88F9u)
let GL_ONE_MINUS_SRC1_COLOR = uint(0x88FAu)
let GL_ONE_MINUS_SRC1_ALPHA = uint(0x88FBu)
let GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = uint(0x88FCu)
let GL_ANY_SAMPLES_PASSED = uint(0x8C2Fu)
let GL_SAMPLER_BINDING = uint(0x8919u)
let GL_RGB10_A2UI = uint(0x906Fu)
let GL_TEXTURE_SWIZZLE_R = uint(0x8E42u)
let GL_TEXTURE_SWIZZLE_G = uint(0x8E43u)
let GL_TEXTURE_SWIZZLE_B = uint(0x8E44u)
let GL_TEXTURE_SWIZZLE_A = uint(0x8E45u)
let GL_TEXTURE_SWIZZLE_RGBA = uint(0x8E46u)
let GL_TIME_ELAPSED = uint(0x88BFu)
let GL_TIMESTAMP = uint(0x8E28u)
let GL_INT_2_10_10_10_REV = uint(0x8D9Fu)
let GL_SAMPLE_SHADING = uint(0x8C36u)
let GL_MIN_SAMPLE_SHADING_VALUE = uint(0x8C37u)
let GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = uint(0x8E5Eu)
let GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = uint(0x8E5Fu)
let GL_TEXTURE_CUBE_MAP_ARRAY = uint(0x9009u)
let GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = uint(0x900Au)
let GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = uint(0x900Bu)
let GL_SAMPLER_CUBE_MAP_ARRAY = uint(0x900Cu)
let GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = uint(0x900Du)
let GL_INT_SAMPLER_CUBE_MAP_ARRAY = uint(0x900Eu)
let GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = uint(0x900Fu)
let GL_DRAW_INDIRECT_BUFFER = uint(0x8F3Fu)
let GL_DRAW_INDIRECT_BUFFER_BINDING = uint(0x8F43u)
let GL_GEOMETRY_SHADER_INVOCATIONS = uint(0x887Fu)
let GL_MAX_GEOMETRY_SHADER_INVOCATIONS = uint(0x8E5Au)
let GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = uint(0x8E5Bu)
let GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = uint(0x8E5Cu)
let GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = uint(0x8E5Du)
let GL_MAX_VERTEX_STREAMS = uint(0x8E71u)
let GL_DOUBLE_VEC2 = uint(0x8FFCu)
let GL_DOUBLE_VEC3 = uint(0x8FFDu)
let GL_DOUBLE_VEC4 = uint(0x8FFEu)
let GL_DOUBLE_MAT2 = uint(0x8F46u)
let GL_DOUBLE_MAT3 = uint(0x8F47u)
let GL_DOUBLE_MAT4 = uint(0x8F48u)
let GL_DOUBLE_MAT2x3 = uint(0x8F49u)
let GL_DOUBLE_MAT2x4 = uint(0x8F4Au)
let GL_DOUBLE_MAT3x2 = uint(0x8F4Bu)
let GL_DOUBLE_MAT3x4 = uint(0x8F4Cu)
let GL_DOUBLE_MAT4x2 = uint(0x8F4Du)
let GL_DOUBLE_MAT4x3 = uint(0x8F4Eu)
let GL_ACTIVE_SUBROUTINES = uint(0x8DE5u)
let GL_ACTIVE_SUBROUTINE_UNIFORMS = uint(0x8DE6u)
let GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = uint(0x8E47u)
let GL_ACTIVE_SUBROUTINE_MAX_LENGTH = uint(0x8E48u)
let GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = uint(0x8E49u)
let GL_MAX_SUBROUTINES = uint(0x8DE7u)
let GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = uint(0x8DE8u)
let GL_NUM_COMPATIBLE_SUBROUTINES = uint(0x8E4Au)
let GL_COMPATIBLE_SUBROUTINES = uint(0x8E4Bu)
let GL_PATCHES = uint(0x000Eu)
let GL_PATCH_VERTICES = uint(0x8E72u)
let GL_PATCH_DEFAULT_INNER_LEVEL = uint(0x8E73u)
let GL_PATCH_DEFAULT_OUTER_LEVEL = uint(0x8E74u)
let GL_TESS_CONTROL_OUTPUT_VERTICES = uint(0x8E75u)
let GL_TESS_GEN_MODE = uint(0x8E76u)
let GL_TESS_GEN_SPACING = uint(0x8E77u)
let GL_TESS_GEN_VERTEX_ORDER = uint(0x8E78u)
let GL_TESS_GEN_POINT_MODE = uint(0x8E79u)
let GL_ISOLINES = uint(0x8E7Au)
let GL_FRACTIONAL_ODD = uint(0x8E7Bu)
let GL_FRACTIONAL_EVEN = uint(0x8E7Cu)
let GL_MAX_PATCH_VERTICES = uint(0x8E7Du)
let GL_MAX_TESS_GEN_LEVEL = uint(0x8E7Eu)
let GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = uint(0x8E7Fu)
let GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = uint(0x8E80u)
let GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = uint(0x8E81u)
let GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = uint(0x8E82u)
let GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = uint(0x8E83u)
let GL_MAX_TESS_PATCH_COMPONENTS = uint(0x8E84u)
let GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = uint(0x8E85u)
let GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = uint(0x8E86u)
let GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = uint(0x8E89u)
let GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = uint(0x8E8Au)
let GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = uint(0x886Cu)
let GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = uint(0x886Du)
let GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = uint(0x8E1Eu)
let GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = uint(0x8E1Fu)
let GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = uint(0x84F0u)
let GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = uint(0x84F1u)
let GL_TESS_EVALUATION_SHADER = uint(0x8E87u)
let GL_TESS_CONTROL_SHADER = uint(0x8E88u)
let GL_TRANSFORM_FEEDBACK = uint(0x8E22u)
let GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = uint(0x8E23u)
let GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = uint(0x8E24u)
let GL_TRANSFORM_FEEDBACK_BINDING = uint(0x8E25u)
let GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = uint(0x8E70u)
let GL_FIXED = uint(0x140Cu)
let GL_IMPLEMENTATION_COLOR_READ_TYPE = uint(0x8B9Au)
let GL_IMPLEMENTATION_COLOR_READ_FORMAT = uint(0x8B9Bu)
let GL_LOW_FLOAT = uint(0x8DF0u)
let GL_MEDIUM_FLOAT = uint(0x8DF1u)
let GL_HIGH_FLOAT = uint(0x8DF2u)
let GL_LOW_INT = uint(0x8DF3u)
let GL_MEDIUM_INT = uint(0x8DF4u)
let GL_HIGH_INT = uint(0x8DF5u)
let GL_SHADER_COMPILER = uint(0x8DFAu)
let GL_SHADER_BINARY_FORMATS = uint(0x8DF8u)
let GL_NUM_SHADER_BINARY_FORMATS = uint(0x8DF9u)
let GL_MAX_VERTEX_UNIFORM_VECTORS = uint(0x8DFBu)
let GL_MAX_VARYING_VECTORS = uint(0x8DFCu)
let GL_MAX_FRAGMENT_UNIFORM_VECTORS = uint(0x8DFDu)
let GL_RGB565 = uint(0x8D62u)
let GL_PROGRAM_BINARY_RETRIEVABLE_HINT = uint(0x8257u)
let GL_PROGRAM_BINARY_LENGTH = uint(0x8741u)
let GL_NUM_PROGRAM_BINARY_FORMATS = uint(0x87FEu)
let GL_PROGRAM_BINARY_FORMATS = uint(0x87FFu)
let GL_VERTEX_SHADER_BIT = uint(0x00000001u)
let GL_FRAGMENT_SHADER_BIT = uint(0x00000002u)
let GL_GEOMETRY_SHADER_BIT = uint(0x00000004u)
let GL_TESS_CONTROL_SHADER_BIT = uint(0x00000008u)
let GL_TESS_EVALUATION_SHADER_BIT = uint(0x00000010u)
let GL_ALL_SHADER_BITS = uint(0xFFFFFFFFu)
let GL_PROGRAM_SEPARABLE = uint(0x8258u)
let GL_ACTIVE_PROGRAM = uint(0x8259u)
let GL_PROGRAM_PIPELINE_BINDING = uint(0x825Au)
let GL_MAX_VIEWPORTS = uint(0x825Bu)
let GL_VIEWPORT_SUBPIXEL_BITS = uint(0x825Cu)
let GL_VIEWPORT_BOUNDS_RANGE = uint(0x825Du)
let GL_LAYER_PROVOKING_VERTEX = uint(0x825Eu)
let GL_VIEWPORT_INDEX_PROVOKING_VERTEX = uint(0x825Fu)
let GL_UNDEFINED_VERTEX = uint(0x8260u)
let GL_COPY_READ_BUFFER_BINDING = uint(0x8F36u)
let GL_COPY_WRITE_BUFFER_BINDING = uint(0x8F37u)
let GL_TRANSFORM_FEEDBACK_ACTIVE = uint(0x8E24u)
let GL_TRANSFORM_FEEDBACK_PAUSED = uint(0x8E23u)
let GL_UNPACK_COMPRESSED_BLOCK_WIDTH = uint(0x9127u)
let GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = uint(0x9128u)
let GL_UNPACK_COMPRESSED_BLOCK_DEPTH = uint(0x9129u)
let GL_UNPACK_COMPRESSED_BLOCK_SIZE = uint(0x912Au)
let GL_PACK_COMPRESSED_BLOCK_WIDTH = uint(0x912Bu)
let GL_PACK_COMPRESSED_BLOCK_HEIGHT = uint(0x912Cu)
let GL_PACK_COMPRESSED_BLOCK_DEPTH = uint(0x912Du)
let GL_PACK_COMPRESSED_BLOCK_SIZE = uint(0x912Eu)
let GL_NUM_SAMPLE_COUNTS = uint(0x9380u)
let GL_MIN_MAP_BUFFER_ALIGNMENT = uint(0x90BCu)
let GL_ATOMIC_COUNTER_BUFFER = uint(0x92C0u)
let GL_ATOMIC_COUNTER_BUFFER_BINDING = uint(0x92C1u)
let GL_ATOMIC_COUNTER_BUFFER_START = uint(0x92C2u)
let GL_ATOMIC_COUNTER_BUFFER_SIZE = uint(0x92C3u)
let GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = uint(0x92C4u)
let GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = uint(0x92C5u)
let GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = uint(0x92C6u)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = uint(0x92C7u)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = uint(0x92C8u)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = uint(0x92C9u)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = uint(0x92CAu)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = uint(0x92CBu)
let GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = uint(0x92CCu)
let GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = uint(0x92CDu)
let GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = uint(0x92CEu)
let GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = uint(0x92CFu)
let GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = uint(0x92D0u)
let GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = uint(0x92D1u)
let GL_MAX_VERTEX_ATOMIC_COUNTERS = uint(0x92D2u)
let GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = uint(0x92D3u)
let GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = uint(0x92D4u)
let GL_MAX_GEOMETRY_ATOMIC_COUNTERS = uint(0x92D5u)
let GL_MAX_FRAGMENT_ATOMIC_COUNTERS = uint(0x92D6u)
let GL_MAX_COMBINED_ATOMIC_COUNTERS = uint(0x92D7u)
let GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = uint(0x92D8u)
let GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = uint(0x92DCu)
let GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = uint(0x92D9u)
let GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = uint(0x92DAu)
let GL_UNSIGNED_INT_ATOMIC_COUNTER = uint(0x92DBu)
let GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = uint(0x00000001u)
let GL_ELEMENT_ARRAY_BARRIER_BIT = uint(0x00000002u)
let GL_UNIFORM_BARRIER_BIT = uint(0x00000004u)
let GL_TEXTURE_FETCH_BARRIER_BIT = uint(0x00000008u)
let GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = uint(0x00000020u)
let GL_COMMAND_BARRIER_BIT = uint(0x00000040u)
let GL_PIXEL_BUFFER_BARRIER_BIT = uint(0x00000080u)
let GL_TEXTURE_UPDATE_BARRIER_BIT = uint(0x00000100u)
let GL_BUFFER_UPDATE_BARRIER_BIT = uint(0x00000200u)
let GL_FRAMEBUFFER_BARRIER_BIT = uint(0x00000400u)
let GL_TRANSFORM_FEEDBACK_BARRIER_BIT = uint(0x00000800u)
let GL_ATOMIC_COUNTER_BARRIER_BIT = uint(0x00001000u)
let GL_ALL_BARRIER_BITS = uint(0xFFFFFFFFu)
let GL_MAX_IMAGE_UNITS = uint(0x8F38u)
let GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = uint(0x8F39u)
let GL_IMAGE_BINDING_NAME = uint(0x8F3Au)
let GL_IMAGE_BINDING_LEVEL = uint(0x8F3Bu)
let GL_IMAGE_BINDING_LAYERED = uint(0x8F3Cu)
let GL_IMAGE_BINDING_LAYER = uint(0x8F3Du)
let GL_IMAGE_BINDING_ACCESS = uint(0x8F3Eu)
let GL_IMAGE_1D = uint(0x904Cu)
let GL_IMAGE_2D = uint(0x904Du)
let GL_IMAGE_3D = uint(0x904Eu)
let GL_IMAGE_2D_RECT = uint(0x904Fu)
let GL_IMAGE_CUBE = uint(0x9050u)
let GL_IMAGE_BUFFER = uint(0x9051u)
let GL_IMAGE_1D_ARRAY = uint(0x9052u)
let GL_IMAGE_2D_ARRAY = uint(0x9053u)
let GL_IMAGE_CUBE_MAP_ARRAY = uint(0x9054u)
let GL_IMAGE_2D_MULTISAMPLE = uint(0x9055u)
let GL_IMAGE_2D_MULTISAMPLE_ARRAY = uint(0x9056u)
let GL_INT_IMAGE_1D = uint(0x9057u)
let GL_INT_IMAGE_2D = uint(0x9058u)
let GL_INT_IMAGE_3D = uint(0x9059u)
let GL_INT_IMAGE_2D_RECT = uint(0x905Au)
let GL_INT_IMAGE_CUBE = uint(0x905Bu)
let GL_INT_IMAGE_BUFFER = uint(0x905Cu)
let GL_INT_IMAGE_1D_ARRAY = uint(0x905Du)
let GL_INT_IMAGE_2D_ARRAY = uint(0x905Eu)
let GL_INT_IMAGE_CUBE_MAP_ARRAY = uint(0x905Fu)
let GL_INT_IMAGE_2D_MULTISAMPLE = uint(0x9060u)
let GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = uint(0x9061u)
let GL_UNSIGNED_INT_IMAGE_1D = uint(0x9062u)
let GL_UNSIGNED_INT_IMAGE_2D = uint(0x9063u)
let GL_UNSIGNED_INT_IMAGE_3D = uint(0x9064u)
let GL_UNSIGNED_INT_IMAGE_2D_RECT = uint(0x9065u)
let GL_UNSIGNED_INT_IMAGE_CUBE = uint(0x9066u)
let GL_UNSIGNED_INT_IMAGE_BUFFER = uint(0x9067u)
let GL_UNSIGNED_INT_IMAGE_1D_ARRAY = uint(0x9068u)
let GL_UNSIGNED_INT_IMAGE_2D_ARRAY = uint(0x9069u)
let GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = uint(0x906Au)
let GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = uint(0x906Bu)
let GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = uint(0x906Cu)
let GL_MAX_IMAGE_SAMPLES = uint(0x906Du)
let GL_IMAGE_BINDING_FORMAT = uint(0x906Eu)
let GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = uint(0x90C7u)
let GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = uint(0x90C8u)
let GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = uint(0x90C9u)
let GL_MAX_VERTEX_IMAGE_UNIFORMS = uint(0x90CAu)
let GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = uint(0x90CBu)
let GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = uint(0x90CCu)
let GL_MAX_GEOMETRY_IMAGE_UNIFORMS = uint(0x90CDu)
let GL_MAX_FRAGMENT_IMAGE_UNIFORMS = uint(0x90CEu)
let GL_MAX_COMBINED_IMAGE_UNIFORMS = uint(0x90CFu)
let GL_COMPRESSED_RGBA_BPTC_UNORM = uint(0x8E8Cu)
let GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = uint(0x8E8Du)
let GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = uint(0x8E8Eu)
let GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = uint(0x8E8Fu)
let GL_TEXTURE_IMMUTABLE_FORMAT = uint(0x912Fu)
let GL_NUM_SHADING_LANGUAGE_VERSIONS = uint(0x82E9u)
let GL_VERTEX_ATTRIB_ARRAY_LONG = uint(0x874Eu)
let GL_COMPRESSED_RGB8_ETC2 = uint(0x9274u)
let GL_COMPRESSED_SRGB8_ETC2 = uint(0x9275u)
let GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = uint(0x9276u)
let GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = uint(0x9277u)
let GL_COMPRESSED_RGBA8_ETC2_EAC = uint(0x9278u)
let GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = uint(0x9279u)
let GL_COMPRESSED_R11_EAC = uint(0x9270u)
let GL_COMPRESSED_SIGNED_R11_EAC = uint(0x9271u)
let GL_COMPRESSED_RG11_EAC = uint(0x9272u)
let GL_COMPRESSED_SIGNED_RG11_EAC = uint(0x9273u)
let GL_PRIMITIVE_RESTART_FIXED_INDEX = uint(0x8D69u)
let GL_ANY_SAMPLES_PASSED_CONSERVATIVE = uint(0x8D6Au)
let GL_MAX_ELEMENT_INDEX = uint(0x8D6Bu)
let GL_COMPUTE_SHADER = uint(0x91B9u)
let GL_MAX_COMPUTE_UNIFORM_BLOCKS = uint(0x91BBu)
let GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = uint(0x91BCu)
let GL_MAX_COMPUTE_IMAGE_UNIFORMS = uint(0x91BDu)
let GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = uint(0x8262u)
let GL_MAX_COMPUTE_UNIFORM_COMPONENTS = uint(0x8263u)
let GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = uint(0x8264u)
let GL_MAX_COMPUTE_ATOMIC_COUNTERS = uint(0x8265u)
let GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = uint(0x8266u)
let GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = uint(0x90EBu)
let GL_MAX_COMPUTE_WORK_GROUP_COUNT = uint(0x91BEu)
let GL_MAX_COMPUTE_WORK_GROUP_SIZE = uint(0x91BFu)
let GL_COMPUTE_WORK_GROUP_SIZE = uint(0x8267u)
let GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = uint(0x90ECu)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = uint(0x90EDu)
let GL_DISPATCH_INDIRECT_BUFFER = uint(0x90EEu)
let GL_DISPATCH_INDIRECT_BUFFER_BINDING = uint(0x90EFu)
let GL_COMPUTE_SHADER_BIT = uint(0x00000020u)
let GL_DEBUG_OUTPUT_SYNCHRONOUS = uint(0x8242u)
let GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = uint(0x8243u)
let GL_DEBUG_CALLBACK_FUNCTION = uint(0x8244u)
let GL_DEBUG_CALLBACK_USER_PARAM = uint(0x8245u)
let GL_DEBUG_SOURCE_API = uint(0x8246u)
let GL_DEBUG_SOURCE_WINDOW_SYSTEM = uint(0x8247u)
let GL_DEBUG_SOURCE_SHADER_COMPILER = uint(0x8248u)
let GL_DEBUG_SOURCE_THIRD_PARTY = uint(0x8249u)
let GL_DEBUG_SOURCE_APPLICATION = uint(0x824Au)
let GL_DEBUG_SOURCE_OTHER = uint(0x824Bu)
let GL_DEBUG_TYPE_ERROR = uint(0x824Cu)
let GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = uint(0x824Du)
let GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = uint(0x824Eu)
let GL_DEBUG_TYPE_PORTABILITY = uint(0x824Fu)
let GL_DEBUG_TYPE_PERFORMANCE = uint(0x8250u)
let GL_DEBUG_TYPE_OTHER = uint(0x8251u)
let GL_MAX_DEBUG_MESSAGE_LENGTH = uint(0x9143u)
let GL_MAX_DEBUG_LOGGED_MESSAGES = uint(0x9144u)
let GL_DEBUG_LOGGED_MESSAGES = uint(0x9145u)
let GL_DEBUG_SEVERITY_HIGH = uint(0x9146u)
let GL_DEBUG_SEVERITY_MEDIUM = uint(0x9147u)
let GL_DEBUG_SEVERITY_LOW = uint(0x9148u)
let GL_DEBUG_TYPE_MARKER = uint(0x8268u)
let GL_DEBUG_TYPE_PUSH_GROUP = uint(0x8269u)
let GL_DEBUG_TYPE_POP_GROUP = uint(0x826Au)
let GL_DEBUG_SEVERITY_NOTIFICATION = uint(0x826Bu)
let GL_MAX_DEBUG_GROUP_STACK_DEPTH = uint(0x826Cu)
let GL_DEBUG_GROUP_STACK_DEPTH = uint(0x826Du)
let GL_BUFFER = uint(0x82E0u)
let GL_SHADER = uint(0x82E1u)
let GL_PROGRAM = uint(0x82E2u)
let GL_QUERY = uint(0x82E3u)
let GL_PROGRAM_PIPELINE = uint(0x82E4u)
let GL_SAMPLER = uint(0x82E6u)
let GL_MAX_LABEL_LENGTH = uint(0x82E8u)
let GL_DEBUG_OUTPUT = uint(0x92E0u)
let GL_CONTEXT_FLAG_DEBUG_BIT = uint(0x00000002u)
let GL_MAX_UNIFORM_LOCATIONS = uint(0x826Eu)
let GL_FRAMEBUFFER_DEFAULT_WIDTH = uint(0x9310u)
let GL_FRAMEBUFFER_DEFAULT_HEIGHT = uint(0x9311u)
let GL_FRAMEBUFFER_DEFAULT_LAYERS = uint(0x9312u)
let GL_FRAMEBUFFER_DEFAULT_SAMPLES = uint(0x9313u)
let GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = uint(0x9314u)
let GL_MAX_FRAMEBUFFER_WIDTH = uint(0x9315u)
let GL_MAX_FRAMEBUFFER_HEIGHT = uint(0x9316u)
let GL_MAX_FRAMEBUFFER_LAYERS = uint(0x9317u)
let GL_MAX_FRAMEBUFFER_SAMPLES = uint(0x9318u)
let GL_INTERNALFORMAT_SUPPORTED = uint(0x826Fu)
let GL_INTERNALFORMAT_PREFERRED = uint(0x8270u)
let GL_INTERNALFORMAT_RED_SIZE = uint(0x8271u)
let GL_INTERNALFORMAT_GREEN_SIZE = uint(0x8272u)
let GL_INTERNALFORMAT_BLUE_SIZE = uint(0x8273u)
let GL_INTERNALFORMAT_ALPHA_SIZE = uint(0x8274u)
let GL_INTERNALFORMAT_DEPTH_SIZE = uint(0x8275u)
let GL_INTERNALFORMAT_STENCIL_SIZE = uint(0x8276u)
let GL_INTERNALFORMAT_SHARED_SIZE = uint(0x8277u)
let GL_INTERNALFORMAT_RED_TYPE = uint(0x8278u)
let GL_INTERNALFORMAT_GREEN_TYPE = uint(0x8279u)
let GL_INTERNALFORMAT_BLUE_TYPE = uint(0x827Au)
let GL_INTERNALFORMAT_ALPHA_TYPE = uint(0x827Bu)
let GL_INTERNALFORMAT_DEPTH_TYPE = uint(0x827Cu)
let GL_INTERNALFORMAT_STENCIL_TYPE = uint(0x827Du)
let GL_MAX_WIDTH = uint(0x827Eu)
let GL_MAX_HEIGHT = uint(0x827Fu)
let GL_MAX_DEPTH = uint(0x8280u)
let GL_MAX_LAYERS = uint(0x8281u)
let GL_MAX_COMBINED_DIMENSIONS = uint(0x8282u)
let GL_COLOR_COMPONENTS = uint(0x8283u)
let GL_DEPTH_COMPONENTS = uint(0x8284u)
let GL_STENCIL_COMPONENTS = uint(0x8285u)
let GL_COLOR_RENDERABLE = uint(0x8286u)
let GL_DEPTH_RENDERABLE = uint(0x8287u)
let GL_STENCIL_RENDERABLE = uint(0x8288u)
let GL_FRAMEBUFFER_RENDERABLE = uint(0x8289u)
let GL_FRAMEBUFFER_RENDERABLE_LAYERED = uint(0x828Au)
let GL_FRAMEBUFFER_BLEND = uint(0x828Bu)
let GL_READ_PIXELS = uint(0x828Cu)
let GL_READ_PIXELS_FORMAT = uint(0x828Du)
let GL_READ_PIXELS_TYPE = uint(0x828Eu)
let GL_TEXTURE_IMAGE_FORMAT = uint(0x828Fu)
let GL_TEXTURE_IMAGE_TYPE = uint(0x8290u)
let GL_GET_TEXTURE_IMAGE_FORMAT = uint(0x8291u)
let GL_GET_TEXTURE_IMAGE_TYPE = uint(0x8292u)
let GL_MIPMAP = uint(0x8293u)
let GL_MANUAL_GENERATE_MIPMAP = uint(0x8294u)
let GL_AUTO_GENERATE_MIPMAP = uint(0x8295u)
let GL_COLOR_ENCODING = uint(0x8296u)
let GL_SRGB_READ = uint(0x8297u)
let GL_SRGB_WRITE = uint(0x8298u)
let GL_FILTER = uint(0x829Au)
let GL_VERTEX_TEXTURE = uint(0x829Bu)
let GL_TESS_CONTROL_TEXTURE = uint(0x829Cu)
let GL_TESS_EVALUATION_TEXTURE = uint(0x829Du)
let GL_GEOMETRY_TEXTURE = uint(0x829Eu)
let GL_FRAGMENT_TEXTURE = uint(0x829Fu)
let GL_COMPUTE_TEXTURE = uint(0x82A0u)
let GL_TEXTURE_SHADOW = uint(0x82A1u)
let GL_TEXTURE_GATHER = uint(0x82A2u)
let GL_TEXTURE_GATHER_SHADOW = uint(0x82A3u)
let GL_SHADER_IMAGE_LOAD = uint(0x82A4u)
let GL_SHADER_IMAGE_STORE = uint(0x82A5u)
let GL_SHADER_IMAGE_ATOMIC = uint(0x82A6u)
let GL_IMAGE_TEXEL_SIZE = uint(0x82A7u)
let GL_IMAGE_COMPATIBILITY_CLASS = uint(0x82A8u)
let GL_IMAGE_PIXEL_FORMAT = uint(0x82A9u)
let GL_IMAGE_PIXEL_TYPE = uint(0x82AAu)
let GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = uint(0x82ACu)
let GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = uint(0x82ADu)
let GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = uint(0x82AEu)
let GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = uint(0x82AFu)
let GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = uint(0x82B1u)
let GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = uint(0x82B2u)
let GL_TEXTURE_COMPRESSED_BLOCK_SIZE = uint(0x82B3u)
let GL_CLEAR_BUFFER = uint(0x82B4u)
let GL_TEXTURE_VIEW = uint(0x82B5u)
let GL_VIEW_COMPATIBILITY_CLASS = uint(0x82B6u)
let GL_FULL_SUPPORT = uint(0x82B7u)
let GL_CAVEAT_SUPPORT = uint(0x82B8u)
let GL_IMAGE_CLASS_4_X_32 = uint(0x82B9u)
let GL_IMAGE_CLASS_2_X_32 = uint(0x82BAu)
let GL_IMAGE_CLASS_1_X_32 = uint(0x82BBu)
let GL_IMAGE_CLASS_4_X_16 = uint(0x82BCu)
let GL_IMAGE_CLASS_2_X_16 = uint(0x82BDu)
let GL_IMAGE_CLASS_1_X_16 = uint(0x82BEu)
let GL_IMAGE_CLASS_4_X_8 = uint(0x82BFu)
let GL_IMAGE_CLASS_2_X_8 = uint(0x82C0u)
let GL_IMAGE_CLASS_1_X_8 = uint(0x82C1u)
let GL_IMAGE_CLASS_11_11_10 = uint(0x82C2u)
let GL_IMAGE_CLASS_10_10_10_2 = uint(0x82C3u)
let GL_VIEW_CLASS_128_BITS = uint(0x82C4u)
let GL_VIEW_CLASS_96_BITS = uint(0x82C5u)
let GL_VIEW_CLASS_64_BITS = uint(0x82C6u)
let GL_VIEW_CLASS_48_BITS = uint(0x82C7u)
let GL_VIEW_CLASS_32_BITS = uint(0x82C8u)
let GL_VIEW_CLASS_24_BITS = uint(0x82C9u)
let GL_VIEW_CLASS_16_BITS = uint(0x82CAu)
let GL_VIEW_CLASS_8_BITS = uint(0x82CBu)
let GL_VIEW_CLASS_S3TC_DXT1_RGB = uint(0x82CCu)
let GL_VIEW_CLASS_S3TC_DXT1_RGBA = uint(0x82CDu)
let GL_VIEW_CLASS_S3TC_DXT3_RGBA = uint(0x82CEu)
let GL_VIEW_CLASS_S3TC_DXT5_RGBA = uint(0x82CFu)
let GL_VIEW_CLASS_RGTC1_RED = uint(0x82D0u)
let GL_VIEW_CLASS_RGTC2_RG = uint(0x82D1u)
let GL_VIEW_CLASS_BPTC_UNORM = uint(0x82D2u)
let GL_VIEW_CLASS_BPTC_FLOAT = uint(0x82D3u)
let GL_UNIFORM = uint(0x92E1u)
let GL_UNIFORM_BLOCK = uint(0x92E2u)
let GL_PROGRAM_INPUT = uint(0x92E3u)
let GL_PROGRAM_OUTPUT = uint(0x92E4u)
let GL_BUFFER_VARIABLE = uint(0x92E5u)
let GL_SHADER_STORAGE_BLOCK = uint(0x92E6u)
let GL_VERTEX_SUBROUTINE = uint(0x92E8u)
let GL_TESS_CONTROL_SUBROUTINE = uint(0x92E9u)
let GL_TESS_EVALUATION_SUBROUTINE = uint(0x92EAu)
let GL_GEOMETRY_SUBROUTINE = uint(0x92EBu)
let GL_FRAGMENT_SUBROUTINE = uint(0x92ECu)
let GL_COMPUTE_SUBROUTINE = uint(0x92EDu)
let GL_VERTEX_SUBROUTINE_UNIFORM = uint(0x92EEu)
let GL_TESS_CONTROL_SUBROUTINE_UNIFORM = uint(0x92EFu)
let GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = uint(0x92F0u)
let GL_GEOMETRY_SUBROUTINE_UNIFORM = uint(0x92F1u)
let GL_FRAGMENT_SUBROUTINE_UNIFORM = uint(0x92F2u)
let GL_COMPUTE_SUBROUTINE_UNIFORM = uint(0x92F3u)
let GL_TRANSFORM_FEEDBACK_VARYING = uint(0x92F4u)
let GL_ACTIVE_RESOURCES = uint(0x92F5u)
let GL_MAX_NAME_LENGTH = uint(0x92F6u)
let GL_MAX_NUM_ACTIVE_VARIABLES = uint(0x92F7u)
let GL_MAX_NUM_COMPATIBLE_SUBROUTINES = uint(0x92F8u)
let GL_NAME_LENGTH = uint(0x92F9u)
let GL_TYPE = uint(0x92FAu)
let GL_ARRAY_SIZE = uint(0x92FBu)
let GL_OFFSET = uint(0x92FCu)
let GL_BLOCK_INDEX = uint(0x92FDu)
let GL_ARRAY_STRIDE = uint(0x92FEu)
let GL_MATRIX_STRIDE = uint(0x92FFu)
let GL_IS_ROW_MAJOR = uint(0x9300u)
let GL_ATOMIC_COUNTER_BUFFER_INDEX = uint(0x9301u)
let GL_BUFFER_BINDING = uint(0x9302u)
let GL_BUFFER_DATA_SIZE = uint(0x9303u)
let GL_NUM_ACTIVE_VARIABLES = uint(0x9304u)
let GL_ACTIVE_VARIABLES = uint(0x9305u)
let GL_REFERENCED_BY_VERTEX_SHADER = uint(0x9306u)
let GL_REFERENCED_BY_TESS_CONTROL_SHADER = uint(0x9307u)
let GL_REFERENCED_BY_TESS_EVALUATION_SHADER = uint(0x9308u)
let GL_REFERENCED_BY_GEOMETRY_SHADER = uint(0x9309u)
let GL_REFERENCED_BY_FRAGMENT_SHADER = uint(0x930Au)
let GL_REFERENCED_BY_COMPUTE_SHADER = uint(0x930Bu)
let GL_TOP_LEVEL_ARRAY_SIZE = uint(0x930Cu)
let GL_TOP_LEVEL_ARRAY_STRIDE = uint(0x930Du)
let GL_LOCATION = uint(0x930Eu)
let GL_LOCATION_INDEX = uint(0x930Fu)
let GL_IS_PER_PATCH = uint(0x92E7u)
let GL_SHADER_STORAGE_BUFFER = uint(0x90D2u)
let GL_SHADER_STORAGE_BUFFER_BINDING = uint(0x90D3u)
let GL_SHADER_STORAGE_BUFFER_START = uint(0x90D4u)
let GL_SHADER_STORAGE_BUFFER_SIZE = uint(0x90D5u)
let GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = uint(0x90D6u)
let GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = uint(0x90D7u)
let GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = uint(0x90D8u)
let GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = uint(0x90D9u)
let GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = uint(0x90DAu)
let GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = uint(0x90DBu)
let GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = uint(0x90DCu)
let GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = uint(0x90DDu)
let GL_MAX_SHADER_STORAGE_BLOCK_SIZE = uint(0x90DEu)
let GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = uint(0x90DFu)
let GL_SHADER_STORAGE_BARRIER_BIT = uint(0x00002000u)
let GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = uint(0x8F39u)
let GL_DEPTH_STENCIL_TEXTURE_MODE = uint(0x90EAu)
let GL_TEXTURE_BUFFER_OFFSET = uint(0x919Du)
let GL_TEXTURE_BUFFER_SIZE = uint(0x919Eu)
let GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = uint(0x919Fu)
let GL_TEXTURE_VIEW_MIN_LEVEL = uint(0x82DBu)
let GL_TEXTURE_VIEW_NUM_LEVELS = uint(0x82DCu)
let GL_TEXTURE_VIEW_MIN_LAYER = uint(0x82DDu)
let GL_TEXTURE_VIEW_NUM_LAYERS = uint(0x82DEu)
let GL_TEXTURE_IMMUTABLE_LEVELS = uint(0x82DFu)
let GL_VERTEX_ATTRIB_BINDING = uint(0x82D4u)
let GL_VERTEX_ATTRIB_RELATIVE_OFFSET = uint(0x82D5u)
let GL_VERTEX_BINDING_DIVISOR = uint(0x82D6u)
let GL_VERTEX_BINDING_OFFSET = uint(0x82D7u)
let GL_VERTEX_BINDING_STRIDE = uint(0x82D8u)
let GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = uint(0x82D9u)
let GL_MAX_VERTEX_ATTRIB_BINDINGS = uint(0x82DAu)
let GL_VERTEX_BINDING_BUFFER = uint(0x8F4Fu)
let GL_MAX_VERTEX_ATTRIB_STRIDE = uint(0x82E5u)
let GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = uint(0x8221u)
let GL_TEXTURE_BUFFER_BINDING = uint(0x8C2Au)
let GL_MAP_PERSISTENT_BIT = uint(0x0040u)
let GL_MAP_COHERENT_BIT = uint(0x0080u)
let GL_DYNAMIC_STORAGE_BIT = uint(0x0100u)
let GL_CLIENT_STORAGE_BIT = uint(0x0200u)
let GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = uint(0x00004000u)
let GL_BUFFER_IMMUTABLE_STORAGE = uint(0x821Fu)
let GL_BUFFER_STORAGE_FLAGS = uint(0x8220u)
let GL_CLEAR_TEXTURE = uint(0x9365u)
let GL_LOCATION_COMPONENT = uint(0x934Au)
let GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = uint(0x934Bu)
let GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = uint(0x934Cu)
let GL_QUERY_BUFFER = uint(0x9192u)
let GL_QUERY_BUFFER_BARRIER_BIT = uint(0x00008000u)
let GL_QUERY_BUFFER_BINDING = uint(0x9193u)
let GL_QUERY_RESULT_NO_WAIT = uint(0x9194u)
let GL_MIRROR_CLAMP_TO_EDGE = uint(0x8743u)
let GL_CONTEXT_LOST = uint(0x0507u)
let GL_NEGATIVE_ONE_TO_ONE = uint(0x935Eu)
let GL_ZERO_TO_ONE = uint(0x935Fu)
let GL_CLIP_ORIGIN = uint(0x935Cu)
let GL_CLIP_DEPTH_MODE = uint(0x935Du)
let GL_QUERY_WAIT_INVERTED = uint(0x8E17u)
let GL_QUERY_NO_WAIT_INVERTED = uint(0x8E18u)
let GL_QUERY_BY_REGION_WAIT_INVERTED = uint(0x8E19u)
let GL_QUERY_BY_REGION_NO_WAIT_INVERTED = uint(0x8E1Au)
let GL_MAX_CULL_DISTANCES = uint(0x82F9u)
let GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = uint(0x82FAu)
let GL_TEXTURE_TARGET = uint(0x1006u)
let GL_QUERY_TARGET = uint(0x82EAu)
let GL_GUILTY_CONTEXT_RESET = uint(0x8253u)
let GL_INNOCENT_CONTEXT_RESET = uint(0x8254u)
let GL_UNKNOWN_CONTEXT_RESET = uint(0x8255u)
let GL_RESET_NOTIFICATION_STRATEGY = uint(0x8256u)
let GL_LOSE_CONTEXT_ON_RESET = uint(0x8252u)
let GL_NO_RESET_NOTIFICATION = uint(0x8261u)
let GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = uint(0x00000004u)
let GL_CONTEXT_RELEASE_BEHAVIOR = uint(0x82FBu)
let GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = uint(0x82FCu)
let GL_SHADER_BINARY_FORMAT_SPIR_V = uint(0x9551u)
let GL_SPIR_V_BINARY = uint(0x9552u)
let GL_PARAMETER_BUFFER = uint(0x80EEu)
let GL_PARAMETER_BUFFER_BINDING = uint(0x80EFu)
let GL_CONTEXT_FLAG_NO_ERROR_BIT = uint(0x00000008u)
let GL_VERTICES_SUBMITTED = uint(0x82EEu)
let GL_PRIMITIVES_SUBMITTED = uint(0x82EFu)
let GL_VERTEX_SHADER_INVOCATIONS = uint(0x82F0u)
let GL_TESS_CONTROL_SHADER_PATCHES = uint(0x82F1u)
let GL_TESS_EVALUATION_SHADER_INVOCATIONS = uint(0x82F2u)
let GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = uint(0x82F3u)
let GL_FRAGMENT_SHADER_INVOCATIONS = uint(0x82F4u)
let GL_COMPUTE_SHADER_INVOCATIONS = uint(0x82F5u)
let GL_CLIPPING_INPUT_PRIMITIVES = uint(0x82F6u)
let GL_CLIPPING_OUTPUT_PRIMITIVES = uint(0x82F7u)
let GL_POLYGON_OFFSET_CLAMP = uint(0x8E1Bu)
let GL_SPIR_V_EXTENSIONS = uint(0x9553u)
let GL_NUM_SPIR_V_EXTENSIONS = uint(0x9554u)
let GL_TEXTURE_MAX_ANISOTROPY = uint(0x84FEu)
let GL_MAX_TEXTURE_MAX_ANISOTROPY = uint(0x84FFu)
let GL_TRANSFORM_FEEDBACK_OVERFLOW = uint(0x82ECu)
let GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = uint(0x82EDu)
let GL_PRIMITIVE_BOUNDING_BOX_ARB = uint(0x92BEu)
let GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = uint(0x9381u)
let GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = uint(0x9382u)
let GL_UNSIGNED_INT64_ARB = uint(0x140Fu)
let GL_SYNC_CL_EVENT_ARB = uint(0x8240u)
let GL_SYNC_CL_EVENT_COMPLETE_ARB = uint(0x8241u)
let GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = uint(0x9344u)
let GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = uint(0x90EBu)
let GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = uint(0x9345u)
let GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = uint(0x91BFu)
let GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = uint(0x8242u)
let GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = uint(0x8243u)
let GL_DEBUG_CALLBACK_FUNCTION_ARB = uint(0x8244u)
let GL_DEBUG_CALLBACK_USER_PARAM_ARB = uint(0x8245u)
let GL_DEBUG_SOURCE_API_ARB = uint(0x8246u)
let GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = uint(0x8247u)
let GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = uint(0x8248u)
let GL_DEBUG_SOURCE_THIRD_PARTY_ARB = uint(0x8249u)
let GL_DEBUG_SOURCE_APPLICATION_ARB = uint(0x824Au)
let GL_DEBUG_SOURCE_OTHER_ARB = uint(0x824Bu)
let GL_DEBUG_TYPE_ERROR_ARB = uint(0x824Cu)
let GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = uint(0x824Du)
let GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = uint(0x824Eu)
let GL_DEBUG_TYPE_PORTABILITY_ARB = uint(0x824Fu)
let GL_DEBUG_TYPE_PERFORMANCE_ARB = uint(0x8250u)
let GL_DEBUG_TYPE_OTHER_ARB = uint(0x8251u)
let GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = uint(0x9143u)
let GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = uint(0x9144u)
let GL_DEBUG_LOGGED_MESSAGES_ARB = uint(0x9145u)
let GL_DEBUG_SEVERITY_HIGH_ARB = uint(0x9146u)
let GL_DEBUG_SEVERITY_MEDIUM_ARB = uint(0x9147u)
let GL_DEBUG_SEVERITY_LOW_ARB = uint(0x9148u)
let GL_LINES_ADJACENCY_ARB = uint(0x000Au)
let GL_LINE_STRIP_ADJACENCY_ARB = uint(0x000Bu)
let GL_TRIANGLES_ADJACENCY_ARB = uint(0x000Cu)
let GL_TRIANGLE_STRIP_ADJACENCY_ARB = uint(0x000Du)
let GL_PROGRAM_POINT_SIZE_ARB = uint(0x8642u)
let GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = uint(0x8C29u)
let GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = uint(0x8DA7u)
let GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = uint(0x8DA8u)
let GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = uint(0x8DA9u)
let GL_GEOMETRY_SHADER_ARB = uint(0x8DD9u)
let GL_GEOMETRY_VERTICES_OUT_ARB = uint(0x8DDAu)
let GL_GEOMETRY_INPUT_TYPE_ARB = uint(0x8DDBu)
let GL_GEOMETRY_OUTPUT_TYPE_ARB = uint(0x8DDCu)
let GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = uint(0x8DDDu)
let GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = uint(0x8DDEu)
let GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = uint(0x8DDFu)
let GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = uint(0x8DE0u)
let GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = uint(0x8DE1u)
let GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = uint(0x9551u)
let GL_SPIR_V_BINARY_ARB = uint(0x9552u)
let GL_INT64_ARB = uint(0x140Eu)
let GL_INT64_VEC2_ARB = uint(0x8FE9u)
let GL_INT64_VEC3_ARB = uint(0x8FEAu)
let GL_INT64_VEC4_ARB = uint(0x8FEBu)
let GL_UNSIGNED_INT64_VEC2_ARB = uint(0x8FF5u)
let GL_UNSIGNED_INT64_VEC3_ARB = uint(0x8FF6u)
let GL_UNSIGNED_INT64_VEC4_ARB = uint(0x8FF7u)
let GL_PARAMETER_BUFFER_ARB = uint(0x80EEu)
let GL_PARAMETER_BUFFER_BINDING_ARB = uint(0x80EFu)
let GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = uint(0x88FEu)
let GL_SRGB_DECODE_ARB = uint(0x8299u)
let GL_VIEW_CLASS_EAC_R11 = uint(0x9383u)
let GL_VIEW_CLASS_EAC_RG11 = uint(0x9384u)
let GL_VIEW_CLASS_ETC2_RGB = uint(0x9385u)
let GL_VIEW_CLASS_ETC2_RGBA = uint(0x9386u)
let GL_VIEW_CLASS_ETC2_EAC_RGBA = uint(0x9387u)
let GL_VIEW_CLASS_ASTC_4x4_RGBA = uint(0x9388u)
let GL_VIEW_CLASS_ASTC_5x4_RGBA = uint(0x9389u)
let GL_VIEW_CLASS_ASTC_5x5_RGBA = uint(0x938Au)
let GL_VIEW_CLASS_ASTC_6x5_RGBA = uint(0x938Bu)
let GL_VIEW_CLASS_ASTC_6x6_RGBA = uint(0x938Cu)
let GL_VIEW_CLASS_ASTC_8x5_RGBA = uint(0x938Du)
let GL_VIEW_CLASS_ASTC_8x6_RGBA = uint(0x938Eu)
let GL_VIEW_CLASS_ASTC_8x8_RGBA = uint(0x938Fu)
let GL_VIEW_CLASS_ASTC_10x5_RGBA = uint(0x9390u)
let GL_VIEW_CLASS_ASTC_10x6_RGBA = uint(0x9391u)
let GL_VIEW_CLASS_ASTC_10x8_RGBA = uint(0x9392u)
let GL_VIEW_CLASS_ASTC_10x10_RGBA = uint(0x9393u)
let GL_VIEW_CLASS_ASTC_12x10_RGBA = uint(0x9394u)
let GL_VIEW_CLASS_ASTC_12x12_RGBA = uint(0x9395u)
let GL_MAX_SHADER_COMPILER_THREADS_ARB = uint(0x91B0u)
let GL_COMPLETION_STATUS_ARB = uint(0x91B1u)
let GL_VERTICES_SUBMITTED_ARB = uint(0x82EEu)
let GL_PRIMITIVES_SUBMITTED_ARB = uint(0x82EFu)
let GL_VERTEX_SHADER_INVOCATIONS_ARB = uint(0x82F0u)
let GL_TESS_CONTROL_SHADER_PATCHES_ARB = uint(0x82F1u)
let GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = uint(0x82F2u)
let GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = uint(0x82F3u)
let GL_FRAGMENT_SHADER_INVOCATIONS_ARB = uint(0x82F4u)
let GL_COMPUTE_SHADER_INVOCATIONS_ARB = uint(0x82F5u)
let GL_CLIPPING_INPUT_PRIMITIVES_ARB = uint(0x82F6u)
let GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = uint(0x82F7u)
let GL_PIXEL_PACK_BUFFER_ARB = uint(0x88EBu)
let GL_PIXEL_UNPACK_BUFFER_ARB = uint(0x88ECu)
let GL_PIXEL_PACK_BUFFER_BINDING_ARB = uint(0x88EDu)
let GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = uint(0x88EFu)
let GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = uint(0x00000004u)
let GL_LOSE_CONTEXT_ON_RESET_ARB = uint(0x8252u)
let GL_GUILTY_CONTEXT_RESET_ARB = uint(0x8253u)
let GL_INNOCENT_CONTEXT_RESET_ARB = uint(0x8254u)
let GL_UNKNOWN_CONTEXT_RESET_ARB = uint(0x8255u)
let GL_RESET_NOTIFICATION_STRATEGY_ARB = uint(0x8256u)
let GL_NO_RESET_NOTIFICATION_ARB = uint(0x8261u)
let GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = uint(0x933Du)
let GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = uint(0x933Eu)
let GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = uint(0x933Fu)
let GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = uint(0x9340u)
let GL_SAMPLE_LOCATION_ARB = uint(0x8E50u)
let GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = uint(0x9341u)
let GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = uint(0x9342u)
let GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = uint(0x9343u)
let GL_SAMPLE_SHADING_ARB = uint(0x8C36u)
let GL_MIN_SAMPLE_SHADING_VALUE_ARB = uint(0x8C37u)
let GL_SHADER_INCLUDE_ARB = uint(0x8DAEu)
let GL_NAMED_STRING_LENGTH_ARB = uint(0x8DE9u)
let GL_NAMED_STRING_TYPE_ARB = uint(0x8DEAu)
let GL_SPARSE_STORAGE_BIT_ARB = uint(0x0400u)
let GL_SPARSE_BUFFER_PAGE_SIZE_ARB = uint(0x82F8u)
let GL_TEXTURE_SPARSE_ARB = uint(0x91A6u)
let GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = uint(0x91A7u)
let GL_NUM_SPARSE_LEVELS_ARB = uint(0x91AAu)
let GL_NUM_VIRTUAL_PAGE_SIZES_ARB = uint(0x91A8u)
let GL_VIRTUAL_PAGE_SIZE_X_ARB = uint(0x9195u)
let GL_VIRTUAL_PAGE_SIZE_Y_ARB = uint(0x9196u)
let GL_VIRTUAL_PAGE_SIZE_Z_ARB = uint(0x9197u)
let GL_MAX_SPARSE_TEXTURE_SIZE_ARB = uint(0x9198u)
let GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = uint(0x9199u)
let GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = uint(0x919Au)
let GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = uint(0x91A9u)
let GL_CLAMP_TO_BORDER_ARB = uint(0x812Du)
let GL_TEXTURE_BUFFER_ARB = uint(0x8C2Au)
let GL_MAX_TEXTURE_BUFFER_SIZE_ARB = uint(0x8C2Bu)
let GL_TEXTURE_BINDING_BUFFER_ARB = uint(0x8C2Cu)
let GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = uint(0x8C2Du)
let GL_TEXTURE_BUFFER_FORMAT_ARB = uint(0x8C2Eu)
let GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = uint(0x8E8Cu)
let GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = uint(0x8E8Du)
let GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = uint(0x8E8Eu)
let GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = uint(0x8E8Fu)
let GL_TEXTURE_CUBE_MAP_ARRAY_ARB = uint(0x9009u)
let GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = uint(0x900Au)
let GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = uint(0x900Bu)
let GL_SAMPLER_CUBE_MAP_ARRAY_ARB = uint(0x900Cu)
let GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = uint(0x900Du)
let GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = uint(0x900Eu)
let GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = uint(0x900Fu)
let GL_TEXTURE_REDUCTION_MODE_ARB = uint(0x9366u)
let GL_WEIGHTED_AVERAGE_ARB = uint(0x9367u)
let GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = uint(0x8E5Eu)
let GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = uint(0x8E5Fu)
let GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = uint(0x8F9Fu)
let GL_MIRRORED_REPEAT_ARB = uint(0x8370u)
let GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = uint(0x82ECu)
let GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = uint(0x82EDu)
let GL_MULTIPLY_KHR = uint(0x9294u)
let GL_SCREEN_KHR = uint(0x9295u)
let GL_OVERLAY_KHR = uint(0x9296u)
let GL_DARKEN_KHR = uint(0x9297u)
let GL_LIGHTEN_KHR = uint(0x9298u)
let GL_COLORDODGE_KHR = uint(0x9299u)
let GL_COLORBURN_KHR = uint(0x929Au)
let GL_HARDLIGHT_KHR = uint(0x929Bu)
let GL_SOFTLIGHT_KHR = uint(0x929Cu)
let GL_DIFFERENCE_KHR = uint(0x929Eu)
let GL_EXCLUSION_KHR = uint(0x92A0u)
let GL_HSL_HUE_KHR = uint(0x92ADu)
let GL_HSL_SATURATION_KHR = uint(0x92AEu)
let GL_HSL_COLOR_KHR = uint(0x92AFu)
let GL_HSL_LUMINOSITY_KHR = uint(0x92B0u)
let GL_BLEND_ADVANCED_COHERENT_KHR = uint(0x9285u)
let GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = uint(0x00000008u)
let GL_MAX_SHADER_COMPILER_THREADS_KHR = uint(0x91B0u)
let GL_COMPLETION_STATUS_KHR = uint(0x91B1u)
let GL_CONTEXT_ROBUST_ACCESS = uint(0x90F3u)
let GL_SUBGROUP_SIZE_KHR = uint(0x9532u)
let GL_SUBGROUP_SUPPORTED_STAGES_KHR = uint(0x9533u)
let GL_SUBGROUP_SUPPORTED_FEATURES_KHR = uint(0x9534u)
let GL_SUBGROUP_QUAD_ALL_STAGES_KHR = uint(0x9535u)
let GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = uint(0x00000001u)
let GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = uint(0x00000002u)
let GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = uint(0x00000004u)
let GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = uint(0x00000008u)
let GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = uint(0x00000010u)
let GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = uint(0x00000020u)
let GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = uint(0x00000040u)
let GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = uint(0x00000080u)
let GL_COMPRESSED_RGBA_ASTC_4x4_KHR = uint(0x93B0u)
let GL_COMPRESSED_RGBA_ASTC_5x4_KHR = uint(0x93B1u)
let GL_COMPRESSED_RGBA_ASTC_5x5_KHR = uint(0x93B2u)
let GL_COMPRESSED_RGBA_ASTC_6x5_KHR = uint(0x93B3u)
let GL_COMPRESSED_RGBA_ASTC_6x6_KHR = uint(0x93B4u)
let GL_COMPRESSED_RGBA_ASTC_8x5_KHR = uint(0x93B5u)
let GL_COMPRESSED_RGBA_ASTC_8x6_KHR = uint(0x93B6u)
let GL_COMPRESSED_RGBA_ASTC_8x8_KHR = uint(0x93B7u)
let GL_COMPRESSED_RGBA_ASTC_10x5_KHR = uint(0x93B8u)
let GL_COMPRESSED_RGBA_ASTC_10x6_KHR = uint(0x93B9u)
let GL_COMPRESSED_RGBA_ASTC_10x8_KHR = uint(0x93BAu)
let GL_COMPRESSED_RGBA_ASTC_10x10_KHR = uint(0x93BBu)
let GL_COMPRESSED_RGBA_ASTC_12x10_KHR = uint(0x93BCu)
let GL_COMPRESSED_RGBA_ASTC_12x12_KHR = uint(0x93BDu)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = uint(0x93D0u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = uint(0x93D1u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = uint(0x93D2u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = uint(0x93D3u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = uint(0x93D4u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = uint(0x93D5u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = uint(0x93D6u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = uint(0x93D7u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = uint(0x93D8u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = uint(0x93D9u)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = uint(0x93DAu)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = uint(0x93DBu)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = uint(0x93DCu)
let GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = uint(0x93DDu)
let GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = uint(0x91B2u)
let GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = uint(0x91B3u)
let GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = uint(0x91B4u)
let GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = uint(0x91B5u)
let GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = uint(0x91B6u)
let GL_SUPPORTED_MULTISAMPLE_MODES_AMD = uint(0x91B7u)
let GL_COUNTER_TYPE_AMD = uint(0x8BC0u)
let GL_COUNTER_RANGE_AMD = uint(0x8BC1u)
let GL_UNSIGNED_INT64_AMD = uint(0x8BC2u)
let GL_PERCENTAGE_AMD = uint(0x8BC3u)
let GL_PERFMON_RESULT_AVAILABLE_AMD = uint(0x8BC4u)
let GL_PERFMON_RESULT_SIZE_AMD = uint(0x8BC5u)
let GL_PERFMON_RESULT_AMD = uint(0x8BC6u)
let GL_RGB_422_APPLE = uint(0x8A1Fu)
let GL_UNSIGNED_SHORT_8_8_APPLE = uint(0x85BAu)
let GL_UNSIGNED_SHORT_8_8_REV_APPLE = uint(0x85BBu)
let GL_RGB_RAW_422_APPLE = uint(0x8A51u)
let GL_PROGRAM_PIPELINE_OBJECT_EXT = uint(0x8A4Fu)
let GL_PROGRAM_OBJECT_EXT = uint(0x8B40u)
let GL_SHADER_OBJECT_EXT = uint(0x8B48u)
let GL_BUFFER_OBJECT_EXT = uint(0x9151u)
let GL_QUERY_OBJECT_EXT = uint(0x9153u)
let GL_VERTEX_ARRAY_OBJECT_EXT = uint(0x9154u)
let GL_PROGRAM_MATRIX_EXT = uint(0x8E2Du)
let GL_TRANSPOSE_PROGRAM_MATRIX_EXT = uint(0x8E2Eu)
let GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = uint(0x8E2Fu)
let GL_POLYGON_OFFSET_CLAMP_EXT = uint(0x8E1Bu)
let GL_RASTER_MULTISAMPLE_EXT = uint(0x9327u)
let GL_RASTER_SAMPLES_EXT = uint(0x9328u)
let GL_MAX_RASTER_SAMPLES_EXT = uint(0x9329u)
let GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = uint(0x932Au)
let GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = uint(0x932Bu)
let GL_EFFECTIVE_RASTER_SAMPLES_EXT = uint(0x932Cu)
let GL_ACTIVE_PROGRAM_EXT = uint(0x8B8Du)
let GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = uint(0x8A52u)
let GL_COMPRESSED_RGB_S3TC_DXT1_EXT = uint(0x83F0u)
let GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = uint(0x83F1u)
let GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = uint(0x83F2u)
let GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = uint(0x83F3u)
let GL_TEXTURE_REDUCTION_MODE_EXT = uint(0x9366u)
let GL_WEIGHTED_AVERAGE_EXT = uint(0x9367u)
let GL_SR8_EXT = uint(0x8FBDu)
let GL_SRG8_EXT = uint(0x8FBEu)
let GL_TEXTURE_SRGB_DECODE_EXT = uint(0x8A48u)
let GL_DECODE_EXT = uint(0x8A49u)
let GL_SKIP_DECODE_EXT = uint(0x8A4Au)
let GL_INCLUSIVE_EXT = uint(0x8F10u)
let GL_EXCLUSIVE_EXT = uint(0x8F11u)
let GL_WINDOW_RECTANGLE_EXT = uint(0x8F12u)
let GL_WINDOW_RECTANGLE_MODE_EXT = uint(0x8F13u)
let GL_MAX_WINDOW_RECTANGLES_EXT = uint(0x8F14u)
let GL_NUM_WINDOW_RECTANGLES_EXT = uint(0x8F15u)
let GL_BLACKHOLE_RENDER_INTEL = uint(0x83FCu)
let GL_CONSERVATIVE_RASTERIZATION_INTEL = uint(0x83FEu)
let GL_PERFQUERY_SINGLE_CONTEXT_INTEL = uint(0x00000000u)
let GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = uint(0x00000001u)
let GL_PERFQUERY_WAIT_INTEL = uint(0x83FBu)
let GL_PERFQUERY_FLUSH_INTEL = uint(0x83FAu)
let GL_PERFQUERY_DONOT_FLUSH_INTEL = uint(0x83F9u)
let GL_PERFQUERY_COUNTER_EVENT_INTEL = uint(0x94F0u)
let GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = uint(0x94F1u)
let GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = uint(0x94F2u)
let GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = uint(0x94F3u)
let GL_PERFQUERY_COUNTER_RAW_INTEL = uint(0x94F4u)
let GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = uint(0x94F5u)
let GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = uint(0x94F8u)
let GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = uint(0x94F9u)
let GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = uint(0x94FAu)
let GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = uint(0x94FBu)
let GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = uint(0x94FCu)
let GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = uint(0x94FDu)
let GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = uint(0x94FEu)
let GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = uint(0x94FFu)
let GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = uint(0x9500u)
let GL_FRAMEBUFFER_FLIP_X_MESA = uint(0x8BBCu)
let GL_FRAMEBUFFER_FLIP_Y_MESA = uint(0x8BBBu)
let GL_FRAMEBUFFER_SWAP_XY_MESA = uint(0x8BBDu)
let GL_BLEND_OVERLAP_NV = uint(0x9281u)
let GL_BLEND_PREMULTIPLIED_SRC_NV = uint(0x9280u)
let GL_BLUE_NV = uint(0x1905u)
let GL_COLORBURN_NV = uint(0x929Au)
let GL_COLORDODGE_NV = uint(0x9299u)
let GL_CONJOINT_NV = uint(0x9284u)
let GL_CONTRAST_NV = uint(0x92A1u)
let GL_DARKEN_NV = uint(0x9297u)
let GL_DIFFERENCE_NV = uint(0x929Eu)
let GL_DISJOINT_NV = uint(0x9283u)
let GL_DST_ATOP_NV = uint(0x928Fu)
let GL_DST_IN_NV = uint(0x928Bu)
let GL_DST_NV = uint(0x9287u)
let GL_DST_OUT_NV = uint(0x928Du)
let GL_DST_OVER_NV = uint(0x9289u)
let GL_EXCLUSION_NV = uint(0x92A0u)
let GL_GREEN_NV = uint(0x1904u)
let GL_HARDLIGHT_NV = uint(0x929Bu)
let GL_HARDMIX_NV = uint(0x92A9u)
let GL_HSL_COLOR_NV = uint(0x92AFu)
let GL_HSL_HUE_NV = uint(0x92ADu)
let GL_HSL_LUMINOSITY_NV = uint(0x92B0u)
let GL_HSL_SATURATION_NV = uint(0x92AEu)
let GL_INVERT_OVG_NV = uint(0x92B4u)
let GL_INVERT_RGB_NV = uint(0x92A3u)
let GL_LIGHTEN_NV = uint(0x9298u)
let GL_LINEARBURN_NV = uint(0x92A5u)
let GL_LINEARDODGE_NV = uint(0x92A4u)
let GL_LINEARLIGHT_NV = uint(0x92A7u)
let GL_MINUS_CLAMPED_NV = uint(0x92B3u)
let GL_MINUS_NV = uint(0x929Fu)
let GL_MULTIPLY_NV = uint(0x9294u)
let GL_OVERLAY_NV = uint(0x9296u)
let GL_PINLIGHT_NV = uint(0x92A8u)
let GL_PLUS_CLAMPED_ALPHA_NV = uint(0x92B2u)
let GL_PLUS_CLAMPED_NV = uint(0x92B1u)
let GL_PLUS_DARKER_NV = uint(0x9292u)
let GL_PLUS_NV = uint(0x9291u)
let GL_RED_NV = uint(0x1903u)
let GL_SCREEN_NV = uint(0x9295u)
let GL_SOFTLIGHT_NV = uint(0x929Cu)
let GL_SRC_ATOP_NV = uint(0x928Eu)
let GL_SRC_IN_NV = uint(0x928Au)
let GL_SRC_NV = uint(0x9286u)
let GL_SRC_OUT_NV = uint(0x928Cu)
let GL_SRC_OVER_NV = uint(0x9288u)
let GL_UNCORRELATED_NV = uint(0x9282u)
let GL_VIVIDLIGHT_NV = uint(0x92A6u)
let GL_XOR_NV = uint(0x1506u)
let GL_BLEND_ADVANCED_COHERENT_NV = uint(0x9285u)
let GL_FACTOR_MIN_AMD = uint(0x901Cu)
let GL_FACTOR_MAX_AMD = uint(0x901Du)
let GL_VIEWPORT_POSITION_W_SCALE_NV = uint(0x937Cu)
let GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = uint(0x937Du)
let GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = uint(0x937Eu)
let GL_TERMINATE_SEQUENCE_COMMAND_NV = uint(0x0000u)
let GL_NOP_COMMAND_NV = uint(0x0001u)
let GL_DRAW_ELEMENTS_COMMAND_NV = uint(0x0002u)
let GL_DRAW_ARRAYS_COMMAND_NV = uint(0x0003u)
let GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = uint(0x0004u)
let GL_DRAW_ARRAYS_STRIP_COMMAND_NV = uint(0x0005u)
let GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = uint(0x0006u)
let GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = uint(0x0007u)
let GL_ELEMENT_ADDRESS_COMMAND_NV = uint(0x0008u)
let GL_ATTRIBUTE_ADDRESS_COMMAND_NV = uint(0x0009u)
let GL_UNIFORM_ADDRESS_COMMAND_NV = uint(0x000Au)
let GL_BLEND_COLOR_COMMAND_NV = uint(0x000Bu)
let GL_STENCIL_REF_COMMAND_NV = uint(0x000Cu)
let GL_LINE_WIDTH_COMMAND_NV = uint(0x000Du)
let GL_POLYGON_OFFSET_COMMAND_NV = uint(0x000Eu)
let GL_ALPHA_REF_COMMAND_NV = uint(0x000Fu)
let GL_VIEWPORT_COMMAND_NV = uint(0x0010u)
let GL_SCISSOR_COMMAND_NV = uint(0x0011u)
let GL_FRONT_FACE_COMMAND_NV = uint(0x0012u)
let GL_QUERY_WAIT_NV = uint(0x8E13u)
let GL_QUERY_NO_WAIT_NV = uint(0x8E14u)
let GL_QUERY_BY_REGION_WAIT_NV = uint(0x8E15u)
let GL_QUERY_BY_REGION_NO_WAIT_NV = uint(0x8E16u)
let GL_CONSERVATIVE_RASTERIZATION_NV = uint(0x9346u)
let GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = uint(0x9347u)
let GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = uint(0x9348u)
let GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = uint(0x9349u)
let GL_CONSERVATIVE_RASTER_DILATE_NV = uint(0x9379u)
let GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = uint(0x937Au)
let GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = uint(0x937Bu)
let GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = uint(0x9550u)
let GL_CONSERVATIVE_RASTER_MODE_NV = uint(0x954Du)
let GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = uint(0x954Eu)
let GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = uint(0x954Fu)
let GL_DEPTH_COMPONENT32F_NV = uint(0x8DABu)
let GL_DEPTH32F_STENCIL8_NV = uint(0x8DACu)
let GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = uint(0x8DADu)
let GL_DEPTH_BUFFER_FLOAT_MODE_NV = uint(0x8DAFu)
let GL_FILL_RECTANGLE_NV = uint(0x933Cu)
let GL_FRAGMENT_COVERAGE_TO_COLOR_NV = uint(0x92DDu)
let GL_FRAGMENT_COVERAGE_COLOR_NV = uint(0x92DEu)
let GL_COVERAGE_MODULATION_TABLE_NV = uint(0x9331u)
let GL_COLOR_SAMPLES_NV = uint(0x8E20u)
let GL_DEPTH_SAMPLES_NV = uint(0x932Du)
let GL_STENCIL_SAMPLES_NV = uint(0x932Eu)
let GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = uint(0x932Fu)
let GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = uint(0x9330u)
let GL_COVERAGE_MODULATION_NV = uint(0x9332u)
let GL_COVERAGE_MODULATION_TABLE_SIZE_NV = uint(0x9333u)
let GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = uint(0x8CABu)
let GL_RENDERBUFFER_COLOR_SAMPLES_NV = uint(0x8E10u)
let GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = uint(0x8E11u)
let GL_MULTISAMPLE_COVERAGE_MODES_NV = uint(0x8E12u)
let GL_INT64_NV = uint(0x140Eu)
let GL_UNSIGNED_INT64_NV = uint(0x140Fu)
let GL_INT8_NV = uint(0x8FE0u)
let GL_INT8_VEC2_NV = uint(0x8FE1u)
let GL_INT8_VEC3_NV = uint(0x8FE2u)
let GL_INT8_VEC4_NV = uint(0x8FE3u)
let GL_INT16_NV = uint(0x8FE4u)
let GL_INT16_VEC2_NV = uint(0x8FE5u)
let GL_INT16_VEC3_NV = uint(0x8FE6u)
let GL_INT16_VEC4_NV = uint(0x8FE7u)
let GL_INT64_VEC2_NV = uint(0x8FE9u)
let GL_INT64_VEC3_NV = uint(0x8FEAu)
let GL_INT64_VEC4_NV = uint(0x8FEBu)
let GL_UNSIGNED_INT8_NV = uint(0x8FECu)
let GL_UNSIGNED_INT8_VEC2_NV = uint(0x8FEDu)
let GL_UNSIGNED_INT8_VEC3_NV = uint(0x8FEEu)
let GL_UNSIGNED_INT8_VEC4_NV = uint(0x8FEFu)
let GL_UNSIGNED_INT16_NV = uint(0x8FF0u)
let GL_UNSIGNED_INT16_VEC2_NV = uint(0x8FF1u)
let GL_UNSIGNED_INT16_VEC3_NV = uint(0x8FF2u)
let GL_UNSIGNED_INT16_VEC4_NV = uint(0x8FF3u)
let GL_UNSIGNED_INT64_VEC2_NV = uint(0x8FF5u)
let GL_UNSIGNED_INT64_VEC3_NV = uint(0x8FF6u)
let GL_UNSIGNED_INT64_VEC4_NV = uint(0x8FF7u)
let GL_FLOAT16_NV = uint(0x8FF8u)
let GL_FLOAT16_VEC2_NV = uint(0x8FF9u)
let GL_FLOAT16_VEC3_NV = uint(0x8FFAu)
let GL_FLOAT16_VEC4_NV = uint(0x8FFBu)
let GL_MULTISAMPLES_NV = uint(0x9371u)
let GL_SUPERSAMPLE_SCALE_X_NV = uint(0x9372u)
let GL_SUPERSAMPLE_SCALE_Y_NV = uint(0x9373u)
let GL_CONFORMANT_NV = uint(0x9374u)
let GL_ATTACHED_MEMORY_OBJECT_NV = uint(0x95A4u)
let GL_ATTACHED_MEMORY_OFFSET_NV = uint(0x95A5u)
let GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = uint(0x95A6u)
let GL_MEMORY_ATTACHABLE_SIZE_NV = uint(0x95A7u)
let GL_MEMORY_ATTACHABLE_NV = uint(0x95A8u)
let GL_DETACHED_MEMORY_INCARNATION_NV = uint(0x95A9u)
let GL_DETACHED_TEXTURES_NV = uint(0x95AAu)
let GL_DETACHED_BUFFERS_NV = uint(0x95ABu)
let GL_MAX_DETACHED_TEXTURES_NV = uint(0x95ACu)
let GL_MAX_DETACHED_BUFFERS_NV = uint(0x95ADu)
let GL_MESH_SHADER_NV = uint(0x9559u)
let GL_TASK_SHADER_NV = uint(0x955Au)
let GL_MAX_MESH_UNIFORM_BLOCKS_NV = uint(0x8E60u)
let GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = uint(0x8E61u)
let GL_MAX_MESH_IMAGE_UNIFORMS_NV = uint(0x8E62u)
let GL_MAX_MESH_UNIFORM_COMPONENTS_NV = uint(0x8E63u)
let GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = uint(0x8E64u)
let GL_MAX_MESH_ATOMIC_COUNTERS_NV = uint(0x8E65u)
let GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = uint(0x8E66u)
let GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = uint(0x8E67u)
let GL_MAX_TASK_UNIFORM_BLOCKS_NV = uint(0x8E68u)
let GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = uint(0x8E69u)
let GL_MAX_TASK_IMAGE_UNIFORMS_NV = uint(0x8E6Au)
let GL_MAX_TASK_UNIFORM_COMPONENTS_NV = uint(0x8E6Bu)
let GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = uint(0x8E6Cu)
let GL_MAX_TASK_ATOMIC_COUNTERS_NV = uint(0x8E6Du)
let GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = uint(0x8E6Eu)
let GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = uint(0x8E6Fu)
let GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = uint(0x95A2u)
let GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = uint(0x95A3u)
let GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = uint(0x9536u)
let GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = uint(0x9537u)
let GL_MAX_MESH_OUTPUT_VERTICES_NV = uint(0x9538u)
let GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = uint(0x9539u)
let GL_MAX_TASK_OUTPUT_COUNT_NV = uint(0x953Au)
let GL_MAX_DRAW_MESH_TASKS_COUNT_NV = uint(0x953Du)
let GL_MAX_MESH_VIEWS_NV = uint(0x9557u)
let GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = uint(0x92DFu)
let GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = uint(0x9543u)
let GL_MAX_MESH_WORK_GROUP_SIZE_NV = uint(0x953Bu)
let GL_MAX_TASK_WORK_GROUP_SIZE_NV = uint(0x953Cu)
let GL_MESH_WORK_GROUP_SIZE_NV = uint(0x953Eu)
let GL_TASK_WORK_GROUP_SIZE_NV = uint(0x953Fu)
let GL_MESH_VERTICES_OUT_NV = uint(0x9579u)
let GL_MESH_PRIMITIVES_OUT_NV = uint(0x957Au)
let GL_MESH_OUTPUT_TYPE_NV = uint(0x957Bu)
let GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = uint(0x959Cu)
let GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = uint(0x959Du)
let GL_REFERENCED_BY_MESH_SHADER_NV = uint(0x95A0u)
let GL_REFERENCED_BY_TASK_SHADER_NV = uint(0x95A1u)
let GL_MESH_SHADER_BIT_NV = uint(0x00000040u)
let GL_TASK_SHADER_BIT_NV = uint(0x00000080u)
let GL_MESH_SUBROUTINE_NV = uint(0x957Cu)
let GL_TASK_SUBROUTINE_NV = uint(0x957Du)
let GL_MESH_SUBROUTINE_UNIFORM_NV = uint(0x957Eu)
let GL_TASK_SUBROUTINE_UNIFORM_NV = uint(0x957Fu)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = uint(0x959Eu)
let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = uint(0x959Fu)
let GL_PATH_FORMAT_SVG_NV = uint(0x9070u)
let GL_PATH_FORMAT_PS_NV = uint(0x9071u)
let GL_STANDARD_FONT_NAME_NV = uint(0x9072u)
let GL_SYSTEM_FONT_NAME_NV = uint(0x9073u)
let GL_FILE_NAME_NV = uint(0x9074u)
let GL_PATH_STROKE_WIDTH_NV = uint(0x9075u)
let GL_PATH_END_CAPS_NV = uint(0x9076u)
let GL_PATH_INITIAL_END_CAP_NV = uint(0x9077u)
let GL_PATH_TERMINAL_END_CAP_NV = uint(0x9078u)
let GL_PATH_JOIN_STYLE_NV = uint(0x9079u)
let GL_PATH_MITER_LIMIT_NV = uint(0x907Au)
let GL_PATH_DASH_CAPS_NV = uint(0x907Bu)
let GL_PATH_INITIAL_DASH_CAP_NV = uint(0x907Cu)
let GL_PATH_TERMINAL_DASH_CAP_NV = uint(0x907Du)
let GL_PATH_DASH_OFFSET_NV = uint(0x907Eu)
let GL_PATH_CLIENT_LENGTH_NV = uint(0x907Fu)
let GL_PATH_FILL_MODE_NV = uint(0x9080u)
let GL_PATH_FILL_MASK_NV = uint(0x9081u)
let GL_PATH_FILL_COVER_MODE_NV = uint(0x9082u)
let GL_PATH_STROKE_COVER_MODE_NV = uint(0x9083u)
let GL_PATH_STROKE_MASK_NV = uint(0x9084u)
let GL_COUNT_UP_NV = uint(0x9088u)
let GL_COUNT_DOWN_NV = uint(0x9089u)
let GL_PATH_OBJECT_BOUNDING_BOX_NV = uint(0x908Au)
let GL_CONVEX_HULL_NV = uint(0x908Bu)
let GL_BOUNDING_BOX_NV = uint(0x908Du)
let GL_TRANSLATE_X_NV = uint(0x908Eu)
let GL_TRANSLATE_Y_NV = uint(0x908Fu)
let GL_TRANSLATE_2D_NV = uint(0x9090u)
let GL_TRANSLATE_3D_NV = uint(0x9091u)
let GL_AFFINE_2D_NV = uint(0x9092u)
let GL_AFFINE_3D_NV = uint(0x9094u)
let GL_TRANSPOSE_AFFINE_2D_NV = uint(0x9096u)
let GL_TRANSPOSE_AFFINE_3D_NV = uint(0x9098u)
let GL_UTF8_NV = uint(0x909Au)
let GL_UTF16_NV = uint(0x909Bu)
let GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = uint(0x909Cu)
let GL_PATH_COMMAND_COUNT_NV = uint(0x909Du)
let GL_PATH_COORD_COUNT_NV = uint(0x909Eu)
let GL_PATH_DASH_ARRAY_COUNT_NV = uint(0x909Fu)
let GL_PATH_COMPUTED_LENGTH_NV = uint(0x90A0u)
let GL_PATH_FILL_BOUNDING_BOX_NV = uint(0x90A1u)
let GL_PATH_STROKE_BOUNDING_BOX_NV = uint(0x90A2u)
let GL_SQUARE_NV = uint(0x90A3u)
let GL_ROUND_NV = uint(0x90A4u)
let GL_TRIANGULAR_NV = uint(0x90A5u)
let GL_BEVEL_NV = uint(0x90A6u)
let GL_MITER_REVERT_NV = uint(0x90A7u)
let GL_MITER_TRUNCATE_NV = uint(0x90A8u)
let GL_SKIP_MISSING_GLYPH_NV = uint(0x90A9u)
let GL_USE_MISSING_GLYPH_NV = uint(0x90AAu)
let GL_PATH_ERROR_POSITION_NV = uint(0x90ABu)
let GL_ACCUM_ADJACENT_PAIRS_NV = uint(0x90ADu)
let GL_ADJACENT_PAIRS_NV = uint(0x90AEu)
let GL_FIRST_TO_REST_NV = uint(0x90AFu)
let GL_PATH_GEN_MODE_NV = uint(0x90B0u)
let GL_PATH_GEN_COEFF_NV = uint(0x90B1u)
let GL_PATH_GEN_COMPONENTS_NV = uint(0x90B3u)
let GL_PATH_STENCIL_FUNC_NV = uint(0x90B7u)
let GL_PATH_STENCIL_REF_NV = uint(0x90B8u)
let GL_PATH_STENCIL_VALUE_MASK_NV = uint(0x90B9u)
let GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = uint(0x90BDu)
let GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = uint(0x90BEu)
let GL_PATH_COVER_DEPTH_FUNC_NV = uint(0x90BFu)
let GL_PATH_DASH_OFFSET_RESET_NV = uint(0x90B4u)
let GL_MOVE_TO_RESETS_NV = uint(0x90B5u)
let GL_MOVE_TO_CONTINUES_NV = uint(0x90B6u)
let GL_CLOSE_PATH_NV = uint(0x00u)
let GL_MOVE_TO_NV = uint(0x02u)
let GL_RELATIVE_MOVE_TO_NV = uint(0x03u)
let GL_LINE_TO_NV = uint(0x04u)
let GL_RELATIVE_LINE_TO_NV = uint(0x05u)
let GL_HORIZONTAL_LINE_TO_NV = uint(0x06u)
let GL_RELATIVE_HORIZONTAL_LINE_TO_NV = uint(0x07u)
let GL_VERTICAL_LINE_TO_NV = uint(0x08u)
let GL_RELATIVE_VERTICAL_LINE_TO_NV = uint(0x09u)
let GL_QUADRATIC_CURVE_TO_NV = uint(0x0Au)
let GL_RELATIVE_QUADRATIC_CURVE_TO_NV = uint(0x0Bu)
let GL_CUBIC_CURVE_TO_NV = uint(0x0Cu)
let GL_RELATIVE_CUBIC_CURVE_TO_NV = uint(0x0Du)
let GL_SMOOTH_QUADRATIC_CURVE_TO_NV = uint(0x0Eu)
let GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = uint(0x0Fu)
let GL_SMOOTH_CUBIC_CURVE_TO_NV = uint(0x10u)
let GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = uint(0x11u)
let GL_SMALL_CCW_ARC_TO_NV = uint(0x12u)
let GL_RELATIVE_SMALL_CCW_ARC_TO_NV = uint(0x13u)
let GL_SMALL_CW_ARC_TO_NV = uint(0x14u)
let GL_RELATIVE_SMALL_CW_ARC_TO_NV = uint(0x15u)
let GL_LARGE_CCW_ARC_TO_NV = uint(0x16u)
let GL_RELATIVE_LARGE_CCW_ARC_TO_NV = uint(0x17u)
let GL_LARGE_CW_ARC_TO_NV = uint(0x18u)
let GL_RELATIVE_LARGE_CW_ARC_TO_NV = uint(0x19u)
let GL_RESTART_PATH_NV = uint(0xF0u)
let GL_DUP_FIRST_CUBIC_CURVE_TO_NV = uint(0xF2u)
let GL_DUP_LAST_CUBIC_CURVE_TO_NV = uint(0xF4u)
let GL_RECT_NV = uint(0xF6u)
let GL_CIRCULAR_CCW_ARC_TO_NV = uint(0xF8u)
let GL_CIRCULAR_CW_ARC_TO_NV = uint(0xFAu)
let GL_CIRCULAR_TANGENT_ARC_TO_NV = uint(0xFCu)
let GL_ARC_TO_NV = uint(0xFEu)
let GL_RELATIVE_ARC_TO_NV = uint(0xFFu)
let GL_BOLD_BIT_NV = uint(0x01u)
let GL_ITALIC_BIT_NV = uint(0x02u)
let GL_GLYPH_WIDTH_BIT_NV = uint(0x01u)
let GL_GLYPH_HEIGHT_BIT_NV = uint(0x02u)
let GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = uint(0x04u)
let GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = uint(0x08u)
let GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = uint(0x10u)
let GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = uint(0x20u)
let GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = uint(0x40u)
let GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = uint(0x80u)
let GL_GLYPH_HAS_KERNING_BIT_NV = uint(0x100u)
let GL_FONT_X_MIN_BOUNDS_BIT_NV = uint(0x00010000u)
let GL_FONT_Y_MIN_BOUNDS_BIT_NV = uint(0x00020000u)
let GL_FONT_X_MAX_BOUNDS_BIT_NV = uint(0x00040000u)
let GL_FONT_Y_MAX_BOUNDS_BIT_NV = uint(0x00080000u)
let GL_FONT_UNITS_PER_EM_BIT_NV = uint(0x00100000u)
let GL_FONT_ASCENDER_BIT_NV = uint(0x00200000u)
let GL_FONT_DESCENDER_BIT_NV = uint(0x00400000u)
let GL_FONT_HEIGHT_BIT_NV = uint(0x00800000u)
let GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = uint(0x01000000u)
let GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = uint(0x02000000u)
let GL_FONT_UNDERLINE_POSITION_BIT_NV = uint(0x04000000u)
let GL_FONT_UNDERLINE_THICKNESS_BIT_NV = uint(0x08000000u)
let GL_FONT_HAS_KERNING_BIT_NV = uint(0x10000000u)
let GL_ROUNDED_RECT_NV = uint(0xE8u)
let GL_RELATIVE_ROUNDED_RECT_NV = uint(0xE9u)
let GL_ROUNDED_RECT2_NV = uint(0xEAu)
let GL_RELATIVE_ROUNDED_RECT2_NV = uint(0xEBu)
let GL_ROUNDED_RECT4_NV = uint(0xECu)
let GL_RELATIVE_ROUNDED_RECT4_NV = uint(0xEDu)
let GL_ROUNDED_RECT8_NV = uint(0xEEu)
let GL_RELATIVE_ROUNDED_RECT8_NV = uint(0xEFu)
let GL_RELATIVE_RECT_NV = uint(0xF7u)
let GL_FONT_GLYPHS_AVAILABLE_NV = uint(0x9368u)
let GL_FONT_TARGET_UNAVAILABLE_NV = uint(0x9369u)
let GL_FONT_UNAVAILABLE_NV = uint(0x936Au)
let GL_FONT_UNINTELLIGIBLE_NV = uint(0x936Bu)
let GL_CONIC_CURVE_TO_NV = uint(0x1Au)
let GL_RELATIVE_CONIC_CURVE_TO_NV = uint(0x1Bu)
let GL_FONT_NUM_GLYPH_INDICES_BIT_NV = uint(0x20000000u)
let GL_STANDARD_FONT_FORMAT_NV = uint(0x936Cu)
let GL_PATH_PROJECTION_NV = uint(0x1701u)
let GL_PATH_MODELVIEW_NV = uint(0x1700u)
let GL_PATH_MODELVIEW_STACK_DEPTH_NV = uint(0x0BA3u)
let GL_PATH_MODELVIEW_MATRIX_NV = uint(0x0BA6u)
let GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = uint(0x0D36u)
let GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = uint(0x84E3u)
let GL_PATH_PROJECTION_STACK_DEPTH_NV = uint(0x0BA4u)
let GL_PATH_PROJECTION_MATRIX_NV = uint(0x0BA7u)
let GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = uint(0x0D38u)
let GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = uint(0x84E4u)
let GL_FRAGMENT_INPUT_NV = uint(0x936Du)
let GL_SHARED_EDGE_NV = uint(0xC0u)
let GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = uint(0x95B1u)
let GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = uint(0x95B2u)
let GL_REPRESENTATIVE_FRAGMENT_TEST_NV = uint(0x937Fu)
let GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = uint(0x933Du)
let GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = uint(0x933Eu)
let GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = uint(0x933Fu)
let GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = uint(0x9340u)
let GL_SAMPLE_LOCATION_NV = uint(0x8E50u)
let GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = uint(0x9341u)
let GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = uint(0x9342u)
let GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = uint(0x9343u)
let GL_SCISSOR_TEST_EXCLUSIVE_NV = uint(0x9555u)
let GL_SCISSOR_BOX_EXCLUSIVE_NV = uint(0x9556u)
let GL_BUFFER_GPU_ADDRESS_NV = uint(0x8F1Du)
let GL_GPU_ADDRESS_NV = uint(0x8F34u)
let GL_MAX_SHADER_BUFFER_ADDRESS_NV = uint(0x8F35u)
let GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = uint(0x00000010u)
let GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = uint(0x00000100u)
let GL_WARP_SIZE_NV = uint(0x9339u)
let GL_WARPS_PER_SM_NV = uint(0x933Au)
let GL_SM_COUNT_NV = uint(0x933Bu)
let GL_SHADING_RATE_IMAGE_NV = uint(0x9563u)
let GL_SHADING_RATE_NO_INVOCATIONS_NV = uint(0x9564u)
let GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = uint(0x9565u)
let GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = uint(0x9566u)
let GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = uint(0x9567u)
let GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = uint(0x9568u)
let GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = uint(0x9569u)
let GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = uint(0x956Au)
let GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = uint(0x956Bu)
let GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = uint(0x956Cu)
let GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = uint(0x956Du)
let GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = uint(0x956Eu)
let GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = uint(0x956Fu)
let GL_SHADING_RATE_IMAGE_BINDING_NV = uint(0x955Bu)
let GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = uint(0x955Cu)
let GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = uint(0x955Du)
let GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = uint(0x955Eu)
let GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = uint(0x955Fu)
let GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = uint(0x95AEu)
let GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = uint(0x95AFu)
let GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = uint(0x95B0u)
let GL_UNIFORM_BUFFER_UNIFIED_NV = uint(0x936Eu)
let GL_UNIFORM_BUFFER_ADDRESS_NV = uint(0x936Fu)
let GL_UNIFORM_BUFFER_LENGTH_NV = uint(0x9370u)
let GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = uint(0x8F1Eu)
let GL_ELEMENT_ARRAY_UNIFIED_NV = uint(0x8F1Fu)
let GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = uint(0x8F20u)
let GL_VERTEX_ARRAY_ADDRESS_NV = uint(0x8F21u)
let GL_NORMAL_ARRAY_ADDRESS_NV = uint(0x8F22u)
let GL_COLOR_ARRAY_ADDRESS_NV = uint(0x8F23u)
let GL_INDEX_ARRAY_ADDRESS_NV = uint(0x8F24u)
let GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = uint(0x8F25u)
let GL_EDGE_FLAG_ARRAY_ADDRESS_NV = uint(0x8F26u)
let GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = uint(0x8F27u)
let GL_FOG_COORD_ARRAY_ADDRESS_NV = uint(0x8F28u)
let GL_ELEMENT_ARRAY_ADDRESS_NV = uint(0x8F29u)
let GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = uint(0x8F2Au)
let GL_VERTEX_ARRAY_LENGTH_NV = uint(0x8F2Bu)
let GL_NORMAL_ARRAY_LENGTH_NV = uint(0x8F2Cu)
let GL_COLOR_ARRAY_LENGTH_NV = uint(0x8F2Du)
let GL_INDEX_ARRAY_LENGTH_NV = uint(0x8F2Eu)
let GL_TEXTURE_COORD_ARRAY_LENGTH_NV = uint(0x8F2Fu)
let GL_EDGE_FLAG_ARRAY_LENGTH_NV = uint(0x8F30u)
let GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = uint(0x8F31u)
let GL_FOG_COORD_ARRAY_LENGTH_NV = uint(0x8F32u)
let GL_ELEMENT_ARRAY_LENGTH_NV = uint(0x8F33u)
let GL_DRAW_INDIRECT_UNIFIED_NV = uint(0x8F40u)
let GL_DRAW_INDIRECT_ADDRESS_NV = uint(0x8F41u)
let GL_DRAW_INDIRECT_LENGTH_NV = uint(0x8F42u)
let GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = uint(0x9350u)
let GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = uint(0x9351u)
let GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = uint(0x9352u)
let GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = uint(0x9353u)
let GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = uint(0x9354u)
let GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = uint(0x9355u)
let GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = uint(0x9356u)
let GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = uint(0x9357u)
let GL_VIEWPORT_SWIZZLE_X_NV = uint(0x9358u)
let GL_VIEWPORT_SWIZZLE_Y_NV = uint(0x9359u)
let GL_VIEWPORT_SWIZZLE_Z_NV = uint(0x935Au)
let GL_VIEWPORT_SWIZZLE_W_NV = uint(0x935Bu)
let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = uint(0x9630u)
let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = uint(0x9632u)
let GL_MAX_VIEWS_OVR = uint(0x9631u)
let GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = uint(0x9633u)
let WIN32_LEAN_AND_MEAN = int(1)
let GL_VERSION_1_0 = int(1)
let GL_FALSE = int(0)
let GL_TRUE = int(1)
let GL_ZERO = int(0)
let GL_ONE = int(1)
let GL_NONE = int(0)
let GL_NO_ERROR = int(0)
let GL_VERSION_1_1 = int(1)
let GL_VERSION_1_2 = int(1)
let GL_VERSION_1_3 = int(1)
let GL_VERSION_1_4 = int(1)
let GL_VERSION_1_5 = int(1)
let GL_VERSION_2_0 = int(1)
let GL_VERSION_2_1 = int(1)
let GL_VERSION_3_0 = int(1)
let GL_VERSION_3_1 = int(1)
let GL_VERSION_3_2 = int(1)
let GL_VERSION_3_3 = int(1)
let GL_VERSION_4_0 = int(1)
let GL_VERSION_4_1 = int(1)
let GL_VERSION_4_2 = int(1)
let GL_VERSION_4_3 = int(1)
let GL_VERSION_4_4 = int(1)
let GL_VERSION_4_5 = int(1)
let GL_VERSION_4_6 = int(1)
let GL_ARB_ES2_compatibility = int(1)
let GL_ARB_ES3_1_compatibility = int(1)
let GL_ARB_ES3_2_compatibility = int(1)
let GL_ARB_ES3_compatibility = int(1)
let GL_ARB_arrays_of_arrays = int(1)
let GL_ARB_base_instance = int(1)
let GL_ARB_bindless_texture = int(1)
let GL_ARB_blend_func_extended = int(1)
let GL_ARB_buffer_storage = int(1)
let GL_ARB_cl_event = int(1)
let GL_ARB_clear_buffer_object = int(1)
let GL_ARB_clear_texture = int(1)
let GL_ARB_clip_control = int(1)
let GL_ARB_compressed_texture_pixel_storage = int(1)
let GL_ARB_compute_shader = int(1)
let GL_ARB_compute_variable_group_size = int(1)
let GL_ARB_conditional_render_inverted = int(1)
let GL_ARB_conservative_depth = int(1)
let GL_ARB_copy_buffer = int(1)
let GL_ARB_copy_image = int(1)
let GL_ARB_cull_distance = int(1)
let GL_ARB_debug_output = int(1)
let GL_ARB_depth_buffer_float = int(1)
let GL_ARB_depth_clamp = int(1)
let GL_ARB_derivative_control = int(1)
let GL_ARB_direct_state_access = int(1)
let GL_ARB_draw_buffers_blend = int(1)
let GL_ARB_draw_elements_base_vertex = int(1)
let GL_ARB_draw_indirect = int(1)
let GL_ARB_draw_instanced = int(1)
let GL_ARB_enhanced_layouts = int(1)
let GL_ARB_explicit_attrib_location = int(1)
let GL_ARB_explicit_uniform_location = int(1)
let GL_ARB_fragment_coord_conventions = int(1)
let GL_ARB_fragment_layer_viewport = int(1)
let GL_ARB_fragment_shader_interlock = int(1)
let GL_ARB_framebuffer_no_attachments = int(1)
let GL_ARB_framebuffer_object = int(1)
let GL_ARB_framebuffer_sRGB = int(1)
let GL_ARB_geometry_shader4 = int(1)
let GL_ARB_get_program_binary = int(1)
let GL_ARB_get_texture_sub_image = int(1)
let GL_ARB_gl_spirv = int(1)
let GL_ARB_gpu_shader5 = int(1)
let GL_ARB_gpu_shader_fp64 = int(1)
let GL_ARB_gpu_shader_int64 = int(1)
let GL_ARB_half_float_vertex = int(1)
let GL_ARB_imaging = int(1)
let GL_ARB_indirect_parameters = int(1)
let GL_ARB_instanced_arrays = int(1)
let GL_ARB_internalformat_query = int(1)
let GL_ARB_internalformat_query2 = int(1)
let GL_ARB_invalidate_subdata = int(1)
let GL_ARB_map_buffer_alignment = int(1)
let GL_ARB_map_buffer_range = int(1)
let GL_ARB_multi_bind = int(1)
let GL_ARB_multi_draw_indirect = int(1)
let GL_ARB_occlusion_query2 = int(1)
let GL_ARB_parallel_shader_compile = int(1)
let GL_ARB_pipeline_statistics_query = int(1)
let GL_ARB_pixel_buffer_object = int(1)
let GL_ARB_polygon_offset_clamp = int(1)
let GL_ARB_post_depth_coverage = int(1)
let GL_ARB_program_interface_query = int(1)
let GL_ARB_provoking_vertex = int(1)
let GL_ARB_query_buffer_object = int(1)
let GL_ARB_robust_buffer_access_behavior = int(1)
let GL_ARB_robustness = int(1)
let GL_ARB_robustness_isolation = int(1)
let GL_ARB_sample_locations = int(1)
let GL_ARB_sample_shading = int(1)
let GL_ARB_sampler_objects = int(1)
let GL_ARB_seamless_cube_map = int(1)
let GL_ARB_seamless_cubemap_per_texture = int(1)
let GL_ARB_separate_shader_objects = int(1)
let GL_ARB_shader_atomic_counter_ops = int(1)
let GL_ARB_shader_atomic_counters = int(1)
let GL_ARB_shader_ballot = int(1)
let GL_ARB_shader_bit_encoding = int(1)
let GL_ARB_shader_clock = int(1)
let GL_ARB_shader_draw_parameters = int(1)
let GL_ARB_shader_group_vote = int(1)
let GL_ARB_shader_image_load_store = int(1)
let GL_ARB_shader_image_size = int(1)
let GL_ARB_shader_precision = int(1)
let GL_ARB_shader_stencil_export = int(1)
let GL_ARB_shader_storage_buffer_object = int(1)
let GL_ARB_shader_subroutine = int(1)
let GL_ARB_shader_texture_image_samples = int(1)
let GL_ARB_shader_viewport_layer_array = int(1)
let GL_ARB_shading_language_420pack = int(1)
let GL_ARB_shading_language_include = int(1)
let GL_ARB_shading_language_packing = int(1)
let GL_ARB_sparse_buffer = int(1)
let GL_ARB_sparse_texture = int(1)
let GL_ARB_sparse_texture2 = int(1)
let GL_ARB_sparse_texture_clamp = int(1)
let GL_ARB_spirv_extensions = int(1)
let GL_ARB_stencil_texturing = int(1)
let GL_ARB_sync = int(1)
let GL_ARB_tessellation_shader = int(1)
let GL_ARB_texture_barrier = int(1)
let GL_ARB_texture_border_clamp = int(1)
let GL_ARB_texture_buffer_object = int(1)
let GL_ARB_texture_buffer_object_rgb32 = int(1)
let GL_ARB_texture_buffer_range = int(1)
let GL_ARB_texture_compression_bptc = int(1)
let GL_ARB_texture_compression_rgtc = int(1)
let GL_ARB_texture_cube_map_array = int(1)
let GL_ARB_texture_filter_anisotropic = int(1)
let GL_ARB_texture_filter_minmax = int(1)
let GL_ARB_texture_gather = int(1)
let GL_ARB_texture_mirror_clamp_to_edge = int(1)
let GL_ARB_texture_mirrored_repeat = int(1)
let GL_ARB_texture_multisample = int(1)
let GL_ARB_texture_non_power_of_two = int(1)
let GL_ARB_texture_query_levels = int(1)
let GL_ARB_texture_query_lod = int(1)
let GL_ARB_texture_rg = int(1)
let GL_ARB_texture_rgb10_a2ui = int(1)
let GL_ARB_texture_stencil8 = int(1)
let GL_ARB_texture_storage = int(1)
let GL_ARB_texture_storage_multisample = int(1)
let GL_ARB_texture_swizzle = int(1)
let GL_ARB_texture_view = int(1)
let GL_ARB_timer_query = int(1)
let GL_ARB_transform_feedback2 = int(1)
let GL_ARB_transform_feedback3 = int(1)
let GL_ARB_transform_feedback_instanced = int(1)
let GL_ARB_transform_feedback_overflow_query = int(1)
let GL_ARB_uniform_buffer_object = int(1)
let GL_ARB_vertex_array_bgra = int(1)
let GL_ARB_vertex_array_object = int(1)
let GL_ARB_vertex_attrib_64bit = int(1)
let GL_ARB_vertex_attrib_binding = int(1)
let GL_ARB_vertex_type_10f_11f_11f_rev = int(1)
let GL_ARB_vertex_type_2_10_10_10_rev = int(1)
let GL_ARB_viewport_array = int(1)
let GL_KHR_blend_equation_advanced = int(1)
let GL_KHR_blend_equation_advanced_coherent = int(1)
let GL_KHR_context_flush_control = int(1)
let GL_KHR_debug = int(1)
let GL_KHR_no_error = int(1)
let GL_KHR_parallel_shader_compile = int(1)
let GL_KHR_robust_buffer_access_behavior = int(1)
let GL_KHR_robustness = int(1)
let GL_KHR_shader_subgroup = int(1)
let GL_KHR_texture_compression_astc_hdr = int(1)
let GL_KHR_texture_compression_astc_ldr = int(1)
let GL_KHR_texture_compression_astc_sliced_3d = int(1)
let GL_AMD_framebuffer_multisample_advanced = int(1)
let GL_AMD_performance_monitor = int(1)
let GL_APPLE_rgb_422 = int(1)
let GL_EXT_EGL_image_storage = int(1)
let GL_EXT_EGL_sync = int(1)
let GL_EXT_debug_label = int(1)
let GL_EXT_debug_marker = int(1)
let GL_EXT_direct_state_access = int(1)
let GL_EXT_draw_instanced = int(1)
let GL_EXT_multiview_tessellation_geometry_shader = int(1)
let GL_EXT_multiview_texture_multisample = int(1)
let GL_EXT_multiview_timer_query = int(1)
let GL_EXT_polygon_offset_clamp = int(1)
let GL_EXT_post_depth_coverage = int(1)
let GL_EXT_raster_multisample = int(1)
let GL_EXT_separate_shader_objects = int(1)
let GL_EXT_shader_framebuffer_fetch = int(1)
let GL_EXT_shader_framebuffer_fetch_non_coherent = int(1)
let GL_EXT_shader_integer_mix = int(1)
let GL_EXT_texture_compression_s3tc = int(1)
let GL_EXT_texture_filter_minmax = int(1)
let GL_EXT_texture_sRGB_R8 = int(1)
let GL_EXT_texture_sRGB_RG8 = int(1)
let GL_EXT_texture_sRGB_decode = int(1)
let GL_EXT_texture_shadow_lod = int(1)
let GL_EXT_window_rectangles = int(1)
let GL_INTEL_blackhole_render = int(1)
let GL_INTEL_conservative_rasterization = int(1)
let GL_INTEL_framebuffer_CMAA = int(1)
let GL_INTEL_performance_query = int(1)
let GL_MESA_framebuffer_flip_x = int(1)
let GL_MESA_framebuffer_flip_y = int(1)
let GL_MESA_framebuffer_swap_xy = int(1)
let GL_NV_bindless_multi_draw_indirect = int(1)
let GL_NV_bindless_multi_draw_indirect_count = int(1)
let GL_NV_bindless_texture = int(1)
let GL_NV_blend_equation_advanced = int(1)
let GL_NV_blend_equation_advanced_coherent = int(1)
let GL_NV_blend_minmax_factor = int(1)
let GL_NV_clip_space_w_scaling = int(1)
let GL_NV_command_list = int(1)
let GL_NV_compute_shader_derivatives = int(1)
let GL_NV_conditional_render = int(1)
let GL_NV_conservative_raster = int(1)
let GL_NV_conservative_raster_dilate = int(1)
let GL_NV_conservative_raster_pre_snap = int(1)
let GL_NV_conservative_raster_pre_snap_triangles = int(1)
let GL_NV_conservative_raster_underestimation = int(1)
let GL_NV_depth_buffer_float = int(1)
let GL_NV_draw_vulkan_image = int(1)
let GL_NV_fill_rectangle = int(1)
let GL_NV_fragment_coverage_to_color = int(1)
let GL_NV_fragment_shader_barycentric = int(1)
let GL_NV_fragment_shader_interlock = int(1)
let GL_NV_framebuffer_mixed_samples = int(1)
let GL_NV_framebuffer_multisample_coverage = int(1)
let GL_NV_geometry_shader_passthrough = int(1)
let GL_NV_gpu_shader5 = int(1)
let GL_NV_internalformat_sample_query = int(1)
let GL_NV_memory_attachment = int(1)
let GL_NV_memory_object_sparse = int(1)
let GL_NV_mesh_shader = int(1)
let GL_NV_path_rendering = int(1)
let GL_NV_path_rendering_shared_edge = int(1)
let GL_NV_primitive_shading_rate = int(1)
let GL_NV_representative_fragment_test = int(1)
let GL_NV_sample_locations = int(1)
let GL_NV_sample_mask_override_coverage = int(1)
let GL_NV_scissor_exclusive = int(1)
let GL_NV_shader_atomic_counters = int(1)
let GL_NV_shader_atomic_float = int(1)
let GL_NV_shader_atomic_float64 = int(1)
let GL_NV_shader_atomic_fp16_vector = int(1)
let GL_NV_shader_atomic_int64 = int(1)
let GL_NV_shader_buffer_load = int(1)
let GL_NV_shader_buffer_store = int(1)
let GL_NV_shader_subgroup_partitioned = int(1)
let GL_NV_shader_texture_footprint = int(1)
let GL_NV_shader_thread_group = int(1)
let GL_NV_shader_thread_shuffle = int(1)
let GL_NV_shading_rate_image = int(1)
let GL_NV_stereo_view_rendering = int(1)
let GL_NV_texture_barrier = int(1)
let GL_NV_texture_rectangle_compressed = int(1)
let GL_NV_uniform_buffer_unified_memory = int(1)
let GL_NV_vertex_attrib_integer_64bit = int(1)
let GL_NV_vertex_buffer_unified_memory = int(1)
let GL_NV_viewport_array2 = int(1)
let GL_NV_viewport_swizzle = int(1)
let GL_OVR_multiview = int(1)
let GL_OVR_multiview2 = int(1)
